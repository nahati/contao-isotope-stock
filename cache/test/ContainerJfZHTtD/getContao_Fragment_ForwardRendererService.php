<?php

namespace ContainerJfZHTtD;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContao_Fragment_ForwardRendererService extends Nahati_ContaoIsotopeStockBundle_Tests_Integration_app_AppKernelTestDebugContainer
{
    /**
     * Gets the private 'contao.fragment.forward_renderer' shared service.
     *
     * @return \Contao\CoreBundle\Fragment\ForwardFragmentRenderer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Fragment/FragmentRendererInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Fragment/RoutableFragmentRenderer.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Fragment/InlineFragmentRenderer.php';
        include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Fragment/ForwardFragmentRenderer.php';

        $a = ($container->services['http_kernel'] ?? $container->getHttpKernelService());

        if (isset($container->privates['contao.fragment.forward_renderer'])) {
            return $container->privates['contao.fragment.forward_renderer'];
        }
        $b = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->privates['contao.fragment.forward_renderer'])) {
            return $container->privates['contao.fragment.forward_renderer'];
        }

        $container->privates['contao.fragment.forward_renderer'] = $instance = new \Contao\CoreBundle\Fragment\ForwardFragmentRenderer($a, $b);

        $instance->setFragmentPath('/_fragment');

        return $instance;
    }
}
