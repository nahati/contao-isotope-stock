<?php

namespace ContainerPLnfdKK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class Nahati_ContaoIsotopeStockBundle_Tests_Integration_app_AppKernelTestDebugContainer extends Container
{
    protected $containerDir;
    protected $targetDir;
    protected $parameters = [];
    private $buildParameters;
    protected $getService;

    public function __construct(array $buildParameters = [], $containerDir = __DIR__)
    {
        $this->getService = \Closure::fromCallable([$this, 'getService']);
        $this->buildParameters = $buildParameters;
        $this->containerDir = $containerDir;
        $this->targetDir = \dirname($containerDir);
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->syntheticIds = [
            'doctrine.orm.default_entity_manager.validator_loader' => true,
            'kernel' => true,
        ];
        $this->methodMap = [
            '.container.private.filesystem' => 'get_Container_Private_FilesystemService',
            '.container.private.security.authorization_checker' => 'get_Container_Private_Security_AuthorizationCheckerService',
            '.container.private.security.token_storage' => 'get_Container_Private_Security_TokenStorageService',
            '.container.private.session' => 'get_Container_Private_SessionService',
            '.container.private.twig' => 'get_Container_Private_TwigService',
            'Contao\\CoreBundle\\Controller\\Page\\ErrorPageController' => 'getErrorPageControllerService',
            'assets.packages' => 'getAssets_PackagesService',
            'cache.system' => 'getCache_SystemService',
            'contao.assets.assets_context' => 'getContao_Assets_AssetsContextService',
            'contao.csrf.token_manager' => 'getContao_Csrf_TokenManagerService',
            'contao.framework' => 'getContao_FrameworkService',
            'contao.intl.locales' => 'getContao_Intl_LocalesService',
            'contao.resource_finder' => 'getContao_ResourceFinderService',
            'contao.routing.nested_404_matcher' => 'getContao_Routing_Nested404MatcherService',
            'contao.routing.nested_matcher' => 'getContao_Routing_NestedMatcherService',
            'contao.routing.page_registry' => 'getContao_Routing_PageRegistryService',
            'contao.routing.scope_matcher' => 'getContao_Routing_ScopeMatcherService',
            'contao.security.token_checker' => 'getContao_Security_TokenCheckerService',
            'contao.twig.extension' => 'getContao_Twig_ExtensionService',
            'contao.twig.filesystem_loader' => 'getContao_Twig_FilesystemLoaderService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'event_dispatcher' => 'getEventDispatcherService',
            'http_kernel' => 'getHttpKernelService',
            'knp_menu.matcher' => 'getKnpMenu_MatcherService',
            'request_stack' => 'getRequestStackService',
            'router' => 'getRouterService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.firewall.map' => 'getSecurity_Firewall_MapService',
            'security.helper' => 'getSecurity_HelperService',
            'security.logout_url_generator' => 'getSecurity_LogoutUrlGeneratorService',
            'translator' => 'getTranslatorService',
            'uri_signer' => 'getUriSignerService',
            'contao.controller.backend_csv_import' => 'getContao_Controller_BackendCsvImportService',
            'contao.controller.images' => 'getContao_Controller_ImagesService',
            'contao.controller.insert_tags' => 'getContao_Controller_InsertTagsService',
            'Contao\\CoreBundle\\EventListener\\DataContainer\\ContentCompositionListener' => 'getContentCompositionListenerService',
            'Contao\\CoreBundle\\EventListener\\DataContainer\\PageTypeOptionsListener' => 'getPageTypeOptionsListenerService',
            'Contao\\CoreBundle\\EventListener\\DataContainer\\PageUrlListener' => 'getPageUrlListenerService',
            'contao.cache.clear_internal' => 'getContao_Cache_ClearInternalService',
            'contao.cache.warm_internal' => 'getContao_Cache_WarmInternalService',
            'contao.crawl.escargot_factory' => 'getContao_Crawl_EscargotFactoryService',
            'contao.image.image_factory' => 'getContao_Image_ImageFactoryService',
            'contao.image.image_sizes' => 'getContao_Image_ImageSizesService',
            'contao.image.resizer' => 'getContao_Image_ResizerService',
            'contao.opt-in' => 'getContao_OptinService',
            'Contao\\CoreBundle\\Cron\\Cron' => 'getCronService',
            'Contao\\CoreBundle\\Image\\Studio\\FigureRenderer' => 'getFigureRendererService',
            'Contao\\CoreBundle\\Routing\\ResponseContext\\CoreResponseContextFactory' => 'getCoreResponseContextFactoryService',
            'Contao\\CoreBundle\\Security\\TwoFactor\\BackupCodeManager' => 'getBackupCodeManagerService',
            'Contao\\CoreBundle\\Twig\\Extension\\ContaoExtension' => 'getContaoExtensionService',
            'Contao\\CoreBundle\\Util\\SimpleTokenParser' => 'getSimpleTokenParserService',
            'cache_clearer' => 'getCacheClearerService',
            'filesystem' => 'getFilesystemService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'twig' => 'getTwigService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'session' => 'getSessionService',
        ];
        $this->fileMap = [
            '.container.private.cache_clearer' => 'get_Container_Private_CacheClearerService',
            '.container.private.security.csrf.token_manager' => 'get_Container_Private_Security_Csrf_TokenManagerService',
            '.container.private.security.encoder_factory' => 'get_Container_Private_Security_EncoderFactoryService',
            '.container.private.security.password_encoder' => 'get_Container_Private_Security_PasswordEncoderService',
            'Contao\\CoreBundle\\Controller\\BackendController' => 'getBackendControllerService',
            'Contao\\CoreBundle\\Controller\\BackendCsvImportController' => 'getBackendCsvImportControllerService',
            'Contao\\CoreBundle\\Controller\\BackendPreviewController' => 'getBackendPreviewControllerService',
            'Contao\\CoreBundle\\Controller\\BackendPreviewSwitchController' => 'getBackendPreviewSwitchControllerService',
            'Contao\\CoreBundle\\Controller\\CaptchaController' => 'getCaptchaControllerService',
            'Contao\\CoreBundle\\Controller\\ContentElement\\MarkdownController' => 'getMarkdownControllerService',
            'Contao\\CoreBundle\\Controller\\ContentElement\\TemplateController' => 'getTemplateControllerService',
            'Contao\\CoreBundle\\Controller\\FaviconController' => 'getFaviconControllerService',
            'Contao\\CoreBundle\\Controller\\FrontendController' => 'getFrontendControllerService',
            'Contao\\CoreBundle\\Controller\\FrontendModule\\RootPageDependentModulesController' => 'getRootPageDependentModulesControllerService',
            'Contao\\CoreBundle\\Controller\\FrontendModule\\TemplateController' => 'getTemplateController2Service',
            'Contao\\CoreBundle\\Controller\\FrontendModule\\TwoFactorController' => 'getTwoFactorControllerService',
            'Contao\\CoreBundle\\Controller\\ImagesController' => 'getImagesControllerService',
            'Contao\\CoreBundle\\Controller\\InitializeController' => 'getInitializeControllerService',
            'Contao\\CoreBundle\\Controller\\InsertTagsController' => 'getInsertTagsControllerService',
            'Contao\\CoreBundle\\Controller\\Page\\RootPageController' => 'getRootPageControllerService',
            'Contao\\CoreBundle\\Controller\\PreviewLinkController' => 'getPreviewLinkControllerService',
            'Contao\\CoreBundle\\Controller\\RobotsTxtController' => 'getRobotsTxtControllerService',
            'Contao\\CoreBundle\\Controller\\SitemapController' => 'getSitemapControllerService',
            'Scheb\\TwoFactorBundle\\Model\\PersisterInterface' => 'getPersisterInterfaceService',
            'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\Provider\\TwoFactorFormRendererInterface' => 'getTwoFactorFormRendererInterfaceService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController' => 'getRedirectControllerService',
            'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController' => 'getTemplateController3Service',
            'cache.app' => 'getCache_AppService',
            'cache.app_clearer' => 'getCache_AppClearerService',
            'cache.global_clearer' => 'getCache_GlobalClearerService',
            'cache.system_clearer' => 'getCache_SystemClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'console.command_loader' => 'getConsole_CommandLoaderService',
            'container.env_var_processors_locator' => 'getContainer_EnvVarProcessorsLocatorService',
            'contao.assets.files_context' => 'getContao_Assets_FilesContextService',
            'contao.cache.clearer' => 'getContao_Cache_ClearerService',
            'contao.cache.entity_tags' => 'getContao_Cache_EntityTagsService',
            'contao.cache.warmer' => 'getContao_Cache_WarmerService',
            'contao.command.install' => 'getContao_Command_InstallService',
            'contao.command.symlinks' => 'getContao_Command_SymlinksService',
            'contao.crawl.escargot.factory' => 'getContao_Crawl_Escargot_FactoryService',
            'contao.cron' => 'getContao_CronService',
            'contao.filesystem.dbafs_manager' => 'getContao_Filesystem_DbafsManagerService',
            'contao.fragment._contao.content_element.markdown' => 'getContao_Fragment_Contao_ContentElement_MarkdownService',
            'contao.fragment._contao.content_element.template' => 'getContao_Fragment_Contao_ContentElement_TemplateService',
            'contao.fragment._contao.frontend_module.root_page_dependent_modules' => 'getContao_Fragment_Contao_FrontendModule_RootPageDependentModulesService',
            'contao.fragment._contao.frontend_module.template' => 'getContao_Fragment_Contao_FrontendModule_TemplateService',
            'contao.fragment._contao.frontend_module.two_factor' => 'getContao_Fragment_Contao_FrontendModule_TwoFactorService',
            'contao.image.factory' => 'getContao_Image_FactoryService',
            'contao.image.imagine' => 'getContao_Image_ImagineService',
            'contao.image.imagine_svg' => 'getContao_Image_ImagineSvgService',
            'contao.image.legacy_resizer' => 'getContao_Image_LegacyResizerService',
            'contao.image.picture_factory' => 'getContao_Image_PictureFactoryService',
            'contao.image.picture_generator' => 'getContao_Image_PictureGeneratorService',
            'contao.image.preview_factory' => 'getContao_Image_PreviewFactoryService',
            'contao.image.sizes' => 'getContao_Image_SizesService',
            'contao.image.studio' => 'getContao_Image_StudioService',
            'contao.image.studio.figure_renderer' => 'getContao_Image_Studio_FigureRendererService',
            'contao.insert_tag.parser' => 'getContao_InsertTag_ParserService',
            'contao.intl.countries' => 'getContao_Intl_CountriesService',
            'contao.listener.MGEESJ7' => 'getContao_Listener_MGEESJ7Service',
            'contao.listener.data_container.content_composition' => 'getContao_Listener_DataContainer_ContentCompositionService',
            'contao.listener.data_container.disable_app_configured_settings' => 'getContao_Listener_DataContainer_DisableAppConfiguredSettingsService',
            'contao.listener.data_container.disable_canonical_fields' => 'getContao_Listener_DataContainer_DisableCanonicalFieldsService',
            'contao.listener.data_container.layout_options' => 'getContao_Listener_DataContainer_LayoutOptionsService',
            'contao.listener.data_container.member_groups' => 'getContao_Listener_DataContainer_MemberGroupsService',
            'contao.listener.data_container.page_routing' => 'getContao_Listener_DataContainer_PageRoutingService',
            'contao.listener.data_container.page_search' => 'getContao_Listener_DataContainer_PageSearchService',
            'contao.listener.data_container.page_type_options' => 'getContao_Listener_DataContainer_PageTypeOptionsService',
            'contao.listener.data_container.page_url' => 'getContao_Listener_DataContainer_PageUrlService',
            'contao.listener.data_container.page_use_ssl_default' => 'getContao_Listener_DataContainer_PageUseSslDefaultService',
            'contao.listener.data_container.preview_link' => 'getContao_Listener_DataContainer_PreviewLinkService',
            'contao.listener.data_container.record_preview' => 'getContao_Listener_DataContainer_RecordPreviewService',
            'contao.listener.data_container.reset_custom_template' => 'getContao_Listener_DataContainer_ResetCustomTemplateService',
            'contao.listener.data_container.theme_templates' => 'getContao_Listener_DataContainer_ThemeTemplatesService',
            'contao.listener.data_container.toggle_nodes_label' => 'getContao_Listener_DataContainer_ToggleNodesLabelService',
            'contao.listener.data_container.undo.jump_to_parent_button' => 'getContao_Listener_DataContainer_Undo_JumpToParentButtonService',
            'contao.listener.data_container.undo.label' => 'getContao_Listener_DataContainer_Undo_LabelService',
            'contao.listener.data_container.validate_custom_rgxp' => 'getContao_Listener_DataContainer_ValidateCustomRgxpService',
            'contao.listener.data_container_callback' => 'getContao_Listener_DataContainerCallbackService',
            'contao.listener.element_template_options' => 'getContao_Listener_ElementTemplateOptionsService',
            'contao.listener.fE48e1G' => 'getContao_Listener_FE48e1GService',
            'contao.listener.image_size_options' => 'getContao_Listener_ImageSizeOptionsService',
            'contao.listener.insert_tags.asset' => 'getContao_Listener_InsertTags_AssetService',
            'contao.listener.insert_tags.date' => 'getContao_Listener_InsertTags_DateService',
            'contao.listener.insert_tags.translation' => 'getContao_Listener_InsertTags_TranslationService',
            'contao.listener.module_template_options' => 'getContao_Listener_ModuleTemplateOptionsService',
            'contao.listener.widget.custom_rgxp' => 'getContao_Listener_Widget_CustomRgxpService',
            'contao.listener.widget.http_url' => 'getContao_Listener_Widget_HttpUrlService',
            'contao.listener.widget.root_page_dependent_select' => 'getContao_Listener_Widget_RootPageDependentSelectService',
            'contao.mailer.available_transports' => 'getContao_Mailer_AvailableTransportsService',
            'contao.menu.backend_builder' => 'getContao_Menu_BackendBuilderService',
            'contao.menu.renderer' => 'getContao_Menu_RendererService',
            'contao.opt_in' => 'getContao_OptIn2Service',
            'contao.picker.builder' => 'getContao_Picker_BuilderService',
            'contao.resource_locator' => 'getContao_ResourceLocatorService',
            'contao.routing.response_context_accessor' => 'getContao_Routing_ResponseContextAccessorService',
            'contao.routing.response_context_factory' => 'getContao_Routing_ResponseContextFactoryService',
            'contao.security.frontend_preview_authenticator' => 'getContao_Security_FrontendPreviewAuthenticatorService',
            'contao.security.two_factor.authenticator' => 'getContao_Security_TwoFactor_AuthenticatorService',
            'contao.security.two_factor.backup_code_manager' => 'getContao_Security_TwoFactor_BackupCodeManagerService',
            'contao.security.two_factor.trusted_device_manager' => 'getContao_Security_TwoFactor_TrustedDeviceManagerService',
            'contao.slug' => 'getContao_SlugService',
            'contao.slug.generator' => 'getContao_Slug_GeneratorService',
            'contao.slug.valid_characters' => 'getContao_Slug_ValidCharactersService',
            'contao.string.html_decoder' => 'getContao_String_HtmlDecoderService',
            'contao.string.simple_token_parser' => 'getContao_String_SimpleTokenParserService',
            'contao.twig.interop.context_factory' => 'getContao_Twig_Interop_ContextFactoryService',
            'doctrine' => 'getDoctrineService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'error_controller' => 'getErrorControllerService',
            'fragment.handler' => 'getFragment_HandlerService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'mailer' => 'getMailerService',
            'monolog.logger.contao' => 'getMonolog_Logger_ContaoService',
            'monolog.logger.contao.access' => 'getMonolog_Logger_Contao_AccessService',
            'monolog.logger.contao.configuration' => 'getMonolog_Logger_Contao_ConfigurationService',
            'monolog.logger.contao.cron' => 'getMonolog_Logger_Contao_CronService',
            'monolog.logger.contao.email' => 'getMonolog_Logger_Contao_EmailService',
            'monolog.logger.contao.error' => 'getMonolog_Logger_Contao_ErrorService',
            'monolog.logger.contao.files' => 'getMonolog_Logger_Contao_FilesService',
            'monolog.logger.contao.forms' => 'getMonolog_Logger_Contao_FormsService',
            'monolog.logger.contao.general' => 'getMonolog_Logger_Contao_GeneralService',
            'routing.loader' => 'getRouting_LoaderService',
            'scheb_two_factor.firewall_context' => 'getSchebTwoFactor_FirewallContextService',
            'scheb_two_factor.form_controller' => 'getSchebTwoFactor_FormControllerService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.password_hasher_factory' => 'getSecurity_PasswordHasherFactoryService',
            'services_resetter' => 'getServicesResetterService',
            'test.client' => 'getTest_ClientService',
            'test.private_services_locator' => 'getTest_PrivateServicesLocatorService',
            'test.service_container' => 'getTest_ServiceContainerService',
        ];
        $this->aliases = [
            'Contao\\CoreBundle\\Csrf\\ContaoCsrfTokenManager' => 'contao.csrf.token_manager',
            'Contao\\CoreBundle\\Image\\Studio\\Studio' => 'contao.image.studio',
            'Contao\\CoreBundle\\Intl\\Countries' => 'contao.intl.countries',
            'Contao\\CoreBundle\\Intl\\Locales' => 'contao.intl.locales',
            'Contao\\CoreBundle\\Mailer\\AvailableTransports' => 'contao.mailer.available_transports',
            'Contao\\CoreBundle\\OptIn\\OptIn' => 'contao.opt_in',
            'Contao\\CoreBundle\\Routing\\Page\\PageRegistry' => 'contao.routing.page_registry',
            'Contao\\CoreBundle\\Routing\\ResponseContext\\ResponseContextAccessor' => 'contao.routing.response_context_accessor',
            'Scheb\\TwoFactorBundle\\Security\\TwoFactor\\TwoFactorFirewallContext' => 'scheb_two_factor.firewall_context',
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
        ];

        $this->privates['service_container'] = function () {
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/ControllerMetadata/ArgumentMetadataFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/ControllerMetadata/ArgumentMetadataFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher/EventSubscriberInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/ResponseListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/StreamedResponseListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/LocaleListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/ValidateRequestListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/DisallowRobotsIndexingListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/ErrorListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ParameterBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ParameterBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/FrozenParameterBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/container/src/ContainerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ContainerBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ParameterBag/ContainerBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/HttpKernelInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/TerminableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/HttpKernel.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/RequestStack.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/UrlHelper.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/UriSigner.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/config/ConfigCacheFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/config/ResourceCheckerConfigCacheFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/LocaleAwareListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/cache/src/CacheItemPoolInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Adapter/AdapterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache-contracts/CacheInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/log/src/LoggerAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ResetInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/ResettableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/log/src/LoggerAwareTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/AbstractAdapterTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache-contracts/CacheTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/ContractsTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Adapter/AbstractAdapter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation-contracts/TranslatorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation-contracts/LocaleAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation-contracts/TranslatorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/IdentityTranslator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/AbstractSessionListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/SessionListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ServiceProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ServiceLocatorTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ServiceLocator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/Packages.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/Context/ContextInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/Context/RequestStackContext.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/VersionStrategy/VersionStrategyInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/VersionStrategy/EmptyVersionStrategy.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/PackageInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/Package.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/PathPackage.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/HttpCache/SurrogateInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/HttpCache/AbstractSurrogate.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/HttpCache/Esi.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/SurrogateListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/FragmentListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/TranslatorBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Translator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/CacheWarmer/WarmableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/Translation/Translator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Formatter/MessageFormatterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Formatter/IntlFormatterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/translation/Formatter/MessageFormatter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/DebugHandlersListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Debug/FileLinkFormatter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/stopwatch/Stopwatch.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ControllerResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/TraceableControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ArgumentResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/TraceableArgumentResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/RequestContextAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/UrlMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Generator/UrlGeneratorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/RouterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/RequestMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Router.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/service-contracts/ServiceSubscriberInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/Routing/Router.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/RequestContext.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/expression-language/ExpressionFunctionProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/ExpressionLanguageProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/EventListener/RouterListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/PruneableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Traits/ProxyTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/cache/Adapter/PhpArrayAdapter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/SessionFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/SessionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/SessionStorageFactoryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/MockFileSessionStorageFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/SessionBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/MetadataBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenGenerator/TokenGeneratorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenGenerator/UriSafeTokenGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/ExtensionInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/AbstractExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/CsrfExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/Token/Storage/TokenStorageInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/Token/Storage/TokenStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AuthorizationCheckerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Security.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/Voter/VoterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/Voter/CacheableVoterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/Voter/RoleVoter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Impersonate/ImpersonateUrlGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/FirewallMapInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-bundle/Security/FirewallMap.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Logout/LogoutUrlGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/RememberMe/ResponseListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/LogoutUrlExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/SecurityExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AccessDecisionManagerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/TraceableAccessDecisionManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Firewall.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-bundle/EventListener/FirewallListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-bundle/Debug/TraceableFirewallListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Security/TwoFactor/Provider/TwoFactorProviderPreparationListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/AppVariable.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Loader/LoaderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Loader/FilesystemLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Loader/ChainLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/ProfilerExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/ProfilerExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Profiler/Profile.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/TranslationExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/AssetExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/CodeExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/RoutingExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/YamlExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/StopwatchExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/ExpressionExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/HttpKernelExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Extension/HttpFoundationExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/DebugExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/twig-bundle/DependencyInjection/Configurator/EnvironmentConfigurator.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/RuntimeLoader/RuntimeLoaderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/RuntimeLoader/ContainerRuntimeLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/log/src/LoggerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/ResettableInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Logger.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Log/DebugLoggerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/monolog-bridge/Logger.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/ConnectionFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/src/Tools/DsnParser.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Twig/DoctrineExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/src/Schema/SchemaManagerFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/src/Schema/LegacySchemaManagerFactory.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/src/Configuration.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/src/Driver/Middleware.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/src/Logging/Middleware.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Middleware/ConnectionNameAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Middleware/DebugMiddleware.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/event-manager/src/EventManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/doctrine-bridge/ContainerAwareEventManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/dbal/src/Connection.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/doctrine-bridge/Middleware/Debug/DebugDataHolder.php';
            include_once \dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Middleware/BacktraceDebugDataHolder.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Security/TwoFactor/Provider/TwoFactorProviderRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Security/TwoFactor/Provider/PreparationRecorderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Security/TwoFactor/Provider/TokenPreparationRecorder.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-trusted-device/Security/TwoFactor/Trusted/JwtTokenEncoder.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-trusted-device/Security/TwoFactor/Trusted/TrustedDeviceTokenEncoder.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-trusted-device/Security/TwoFactor/Trusted/TrustedDeviceTokenStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-trusted-device/Security/TwoFactor/Trusted/TrustedCookieResponseListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/DateTimeFormatter.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Twig/Extension/TimeExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Twig/Helper.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Matcher/MatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Matcher/Matcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Provider/MenuProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Provider/ChainProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/RendererProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Renderer/PsrProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Util/MenuManipulator.php';
            include_once \dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Twig/MenuExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Controller/AbstractController.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Page/ContentCompositionInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Controller/Page/ErrorPageController.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/BackendLocaleListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/BackendPreviewRedirectListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/BackendRebuildCacheMessageListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/ClearSessionDataListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/CsrfTokenCookieSubscriber.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/InitializeControllerListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/InsecureInstallationListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/InterestCohortListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/LegacyLoginConstantsListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/LocaleSubscriber.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/MakeResponsePrivateListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/MergeHttpHeadersListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/PageTrailCacheTagsListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/PreviewAuthenticationListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/PreviewToolbarListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/RefererIdListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/RequestTokenListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-http/Util/TargetPathTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/Security/TwoFactorFrontendListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/ServiceUnavailableListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/StoreRefererListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/SubrequestCacheSubscriber.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/EventListener/UserSessionListener.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Asset/ContaoContext.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/HttpKernel/ControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/CsrfTokenManagerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/CsrfTokenManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Csrf/ContaoCsrfTokenManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-csrf/TokenStorage/TokenStorageInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Csrf/MemoryTokenStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Fragment/FragmentRegistryInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Fragment/FragmentRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/ContaoFrameworkInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Framework/ContaoFrameworkInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ContainerAwareInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/dependency-injection/ContainerAwareTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Framework/ContaoFramework.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Intl/Locales.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Processor/ProcessorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Monolog/ContaoTableProcessor.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Config/ResourceFinderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Config/ResourceFinder.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/RequestMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/RequestMatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/Candidates/CandidatesInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Candidates/AbstractCandidates.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Candidates/PageCandidates.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/Enhancer/RouteEnhancerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Enhancer/InputEnhancer.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Candidates/LocaleCandidates.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/NestedMatcher/RouteFilterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Matcher/DomainFilter.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Matcher/LanguageFilter.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Matcher/PublishedFilter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/NestedMatcher/NestedMatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/VersatileGeneratorInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/ChainedRouterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/Enhancer/RouteEnhancerTrait.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/DynamicRouter.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Page/PageRegistry.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Page/RouteConfig.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Generator/ConfigurableRequirementsInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Generator/UrlGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/PageUrlGenerator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/RouteProviderInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/AbstractPageRouteProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Route404Provider.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/RouteProvider.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/ScopeMatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/UrlMatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/RedirectableUrlMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/routing/Matcher/RedirectableUrlMatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/NestedMatcher/FinalMatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Routing/Matcher/UrlMatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Security/Authentication/AccessDecisionManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AccessDecisionManager.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Security/Authentication/Token/TokenChecker.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Attribute/AttributeBagInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Attribute/AttributeBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Session/Attribute/ArrayAttributeBag.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Twig/Extension/ContaoExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Twig/Loader/FailTolerantFilesystemLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Twig/Inheritance/TemplateHierarchyInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Twig/Loader/ContaoFilesystemLoader.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/CacheWarmer/CacheWarmerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Twig/Loader/ContaoFilesystemLoaderWarmer.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Twig/Loader/TemplateLocator.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Twig/Loader/ThemeNamespace.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/Handler.php';
            include_once \dirname(__DIR__, 3).'/vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/asset/VersionStrategy/StaticVersionStrategy.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Fragment/FragmentConfig.php';
            include_once \dirname(__DIR__, 3).'/vendor/psr/event-dispatcher/src/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher-contracts/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher/EventDispatcherInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher/EventDispatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ContainerControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/Controller/ControllerResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Controller/ArgumentResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/Strategy/AccessDecisionStrategyInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/Strategy/AffirmativeStrategy.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/AuthenticationTrustResolverInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/AuthenticationTrustResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Translation/Translator.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/ChainRouterInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony-cmf/routing/src/ChainRouter.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/event-dispatcher/Debug/TraceableEventDispatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-kernel/Debug/TraceableEventDispatcher.php';
            include_once \dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Security/Authentication/AuthenticationTrustResolver.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/filesystem/Filesystem.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authorization/AuthorizationChecker.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/security-core/Authentication/Token/Storage/UsageTrackingTokenStorage.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Cache/CacheInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Cache/FilesystemCache.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/CoreExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/EscaperExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/OptimizerExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Extension/StagingExtension.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/ExtensionSet.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Template.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/TemplateWrapper.php';
            include_once \dirname(__DIR__, 3).'/vendor/twig/twig/src/Environment.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/SessionInterface.php';
            include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Session.php';
        };
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return require $this->containerDir.\DIRECTORY_SEPARATOR.'removed-ids.php';
    }

    protected function load($file, $lazyLoad = true)
    {
        if (class_exists($class = __NAMESPACE__.'\\'.$file, false)) {
            return $class::do($this, $lazyLoad);
        }

        if ('.' === $file[-4]) {
            $class = substr($class, 0, -4);
        } else {
            $file .= '.php';
        }

        $service = require $this->containerDir.\DIRECTORY_SEPARATOR.$file;

        return class_exists($class, false) ? $class::do($this, $lazyLoad) : $service;
    }

    /**
     * Gets the public '.container.private.filesystem' shared service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem
     */
    protected function get_Container_Private_FilesystemService()
    {
        return $this->services['.container.private.filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the public '.container.private.security.authorization_checker' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AuthorizationChecker
     */
    protected function get_Container_Private_Security_AuthorizationCheckerService()
    {
        $a = ($this->privates['contao.debug.security.access.decision_manager'] ?? $this->getContao_Debug_Security_Access_DecisionManagerService());

        if (isset($this->services['.container.private.security.authorization_checker'])) {
            return $this->services['.container.private.security.authorization_checker'];
        }

        return $this->services['.container.private.security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker(($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()), $a, false, false);
    }

    /**
     * Gets the public '.container.private.security.token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage
     */
    protected function get_Container_Private_Security_TokenStorageService()
    {
        return $this->services['.container.private.security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage(($this->privates['security.untracked_token_storage'] ?? ($this->privates['security.untracked_token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
        ], [
            'request_stack' => '?',
        ]));
    }

    /**
     * Gets the public '.container.private.session' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Session
     */
    protected function get_Container_Private_SessionService()
    {
        $a = ($this->privates['session.factory'] ?? $this->getSession_FactoryService());

        if (isset($this->services['.container.private.session'])) {
            return $this->services['.container.private.session'];
        }

        $this->services['.container.private.session'] = $instance = $a->createSession();

        $instance->registerBag(($this->privates['contao.session.contao_backend'] ?? $this->getContao_Session_ContaoBackendService()));
        $instance->registerBag(($this->privates['contao.session.contao_frontend'] ?? $this->getContao_Session_ContaoFrontendService()));

        return $instance;
    }

    /**
     * Gets the public '.container.private.twig' shared service.
     *
     * @return \Twig\Environment
     */
    protected function get_Container_Private_TwigService()
    {
        $a = ($this->privates['twig.loader.chain'] ?? $this->getTwig_Loader_ChainService());

        if (isset($this->services['.container.private.twig'])) {
            return $this->services['.container.private.twig'];
        }

        $this->services['.container.private.twig'] = $instance = new \Twig\Environment($a, ['debug' => true, 'strict_variables' => true, 'autoescape' => 'name', 'cache' => ($this->targetDir.''.'/twig'), 'charset' => 'UTF-8']);

        $instance->addExtension(($this->privates['twig.extension.security_csrf'] ?? ($this->privates['twig.extension.security_csrf'] = new \Symfony\Bridge\Twig\Extension\CsrfExtension())));
        $instance->addExtension(($this->privates['twig.extension.logout_url'] ?? $this->getTwig_Extension_LogoutUrlService()));
        $instance->addExtension(($this->privates['twig.extension.security'] ?? $this->getTwig_Extension_SecurityService()));
        $instance->addExtension(($this->privates['twig.extension.profiler'] ?? $this->getTwig_Extension_ProfilerService()));
        $instance->addExtension(($this->privates['twig.extension.trans'] ?? $this->getTwig_Extension_TransService()));
        $instance->addExtension(($this->privates['twig.extension.assets'] ?? $this->getTwig_Extension_AssetsService()));
        $instance->addExtension(($this->privates['twig.extension.code'] ?? $this->getTwig_Extension_CodeService()));
        $instance->addExtension(($this->privates['twig.extension.routing'] ?? $this->getTwig_Extension_RoutingService()));
        $instance->addExtension(($this->privates['twig.extension.yaml'] ?? ($this->privates['twig.extension.yaml'] = new \Symfony\Bridge\Twig\Extension\YamlExtension())));
        $instance->addExtension(($this->privates['twig.extension.debug.stopwatch'] ?? $this->getTwig_Extension_Debug_StopwatchService()));
        $instance->addExtension(($this->privates['twig.extension.expression'] ?? ($this->privates['twig.extension.expression'] = new \Symfony\Bridge\Twig\Extension\ExpressionExtension())));
        $instance->addExtension(($this->privates['twig.extension.httpkernel'] ?? ($this->privates['twig.extension.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelExtension())));
        $instance->addExtension(($this->privates['twig.extension.httpfoundation'] ?? $this->getTwig_Extension_HttpfoundationService()));
        $instance->addExtension(($this->privates['twig.extension.debug'] ?? ($this->privates['twig.extension.debug'] = new \Twig\Extension\DebugExtension())));
        $instance->addExtension(($this->privates['doctrine.twig.doctrine_extension'] ?? ($this->privates['doctrine.twig.doctrine_extension'] = new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension())));
        $instance->addExtension(($this->privates['time.twig.extension.time'] ?? $this->getTime_Twig_Extension_TimeService()));
        $instance->addExtension(($this->privates['knp_menu.twig.extension'] ?? $this->getKnpMenu_Twig_ExtensionService()));
        $instance->addExtension(($this->services['contao.twig.extension'] ?? $this->getContao_Twig_ExtensionService()));
        $instance->addGlobal('app', ($this->privates['twig.app_variable'] ?? $this->getTwig_AppVariableService()));
        $instance->addRuntimeLoader(($this->privates['twig.runtime_loader'] ?? $this->getTwig_RuntimeLoaderService()));
        ($this->privates['twig.configurator.environment'] ?? $this->getTwig_Configurator_EnvironmentService())->configure($instance);

        return $instance;
    }

    /**
     * Gets the public 'Contao\CoreBundle\Controller\Page\ErrorPageController' shared service.
     *
     * @return \Contao\CoreBundle\Controller\Page\ErrorPageController
     */
    protected function getErrorPageControllerService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->services['Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'])) {
            return $this->services['Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'];
        }

        $this->services['Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'] = $instance = new \Contao\CoreBundle\Controller\Page\ErrorPageController($a);

        $instance->setContainer(($this->privates['.service_locator.LvLjDEU'] ?? $this->get_ServiceLocator_LvLjDEUService())->withContext('Contao\\CoreBundle\\Controller\\Page\\ErrorPageController', $this));

        return $instance;
    }

    /**
     * Gets the public 'assets.packages' shared service.
     *
     * @return \Symfony\Component\Asset\Packages
     */
    protected function getAssets_PackagesService()
    {
        $this->services['assets.packages'] = $instance = new \Symfony\Component\Asset\Packages(($this->privates['assets._default_package'] ?? $this->getAssets_DefaultPackageService()), new RewindableGenerator(function () {
            return new \EmptyIterator();
        }, 0));

        $a = ($this->privates['assets._package_contao-components/ace'] ?? $this->getAssets_PackageContaocomponentsaceService());
        $b = ($this->privates['assets._package_contao-components/chosen'] ?? $this->getAssets_PackageContaocomponentschosenService());
        $c = ($this->privates['assets._package_contao-components/colorbox'] ?? $this->getAssets_PackageContaocomponentscolorboxService());
        $d = ($this->privates['assets._package_contao-components/colorpicker'] ?? $this->getAssets_PackageContaocomponentscolorpickerService());
        $e = ($this->privates['assets._package_contao-components/contao'] ?? $this->getAssets_PackageContaocomponentscontaoService());
        $f = ($this->privates['assets._package_contao-components/datepicker'] ?? $this->getAssets_PackageContaocomponentsdatepickerService());
        $g = ($this->privates['assets._package_contao-components/dropzone'] ?? $this->getAssets_PackageContaocomponentsdropzoneService());
        $h = ($this->privates['assets._package_contao-components/jquery'] ?? $this->getAssets_PackageContaocomponentsjqueryService());
        $i = ($this->privates['assets._package_contao-components/jquery-ui'] ?? $this->getAssets_PackageContaocomponentsjqueryuiService());
        $j = ($this->privates['assets._package_contao-components/mediabox'] ?? $this->getAssets_PackageContaocomponentsmediaboxService());
        $k = ($this->privates['assets._package_contao-components/mootools'] ?? $this->getAssets_PackageContaocomponentsmootoolsService());
        $l = ($this->privates['assets._package_contao-components/simplemodal'] ?? $this->getAssets_PackageContaocomponentssimplemodalService());
        $m = ($this->privates['assets._package_contao-components/swipe'] ?? $this->getAssets_PackageContaocomponentsswipeService());
        $n = ($this->privates['assets._package_contao-components/tablesort'] ?? $this->getAssets_PackageContaocomponentstablesortService());
        $o = ($this->privates['assets._package_contao-components/tablesorter'] ?? $this->getAssets_PackageContaocomponentstablesorterService());
        $p = ($this->privates['assets._package_contao-components/tinymce4'] ?? $this->getAssets_PackageContaocomponentstinymce4Service());

        $instance->addPackage('contao_core', ($this->privates['assets._package_contao_core'] ?? $this->getAssets_PackageContaoCoreService()));
        $instance->addPackage('contao-components/ace', $a);
        $instance->addPackage('contao-components/chosen', $b);
        $instance->addPackage('contao-components/colorbox', $c);
        $instance->addPackage('contao-components/colorpicker', $d);
        $instance->addPackage('contao-components/contao', $e);
        $instance->addPackage('contao-components/datepicker', $f);
        $instance->addPackage('contao-components/dropzone', $g);
        $instance->addPackage('contao-components/jquery', $h);
        $instance->addPackage('contao-components/jquery-ui', $i);
        $instance->addPackage('contao-components/mediabox', $j);
        $instance->addPackage('contao-components/mootools', $k);
        $instance->addPackage('contao-components/simplemodal', $l);
        $instance->addPackage('contao-components/swipe', $m);
        $instance->addPackage('contao-components/tablesort', $n);
        $instance->addPackage('contao-components/tablesorter', $o);
        $instance->addPackage('contao-components/tinymce4', $p);
        $instance->addPackage('contao-components/ace', $a);
        $instance->addPackage('contao-components/chosen', $b);
        $instance->addPackage('contao-components/colorbox', $c);
        $instance->addPackage('contao-components/colorpicker', $d);
        $instance->addPackage('contao-components/contao', $e);
        $instance->addPackage('contao-components/datepicker', $f);
        $instance->addPackage('contao-components/dropzone', $g);
        $instance->addPackage('contao-components/jquery', $h);
        $instance->addPackage('contao-components/jquery-ui', $i);
        $instance->addPackage('contao-components/mediabox', $j);
        $instance->addPackage('contao-components/mootools', $k);
        $instance->addPackage('contao-components/simplemodal', $l);
        $instance->addPackage('contao-components/swipe', $m);
        $instance->addPackage('contao-components/tablesort', $n);
        $instance->addPackage('contao-components/tablesorter', $o);
        $instance->addPackage('contao-components/tinymce4', $p);

        return $instance;
    }

    /**
     * Gets the public 'cache.system' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_SystemService()
    {
        return $this->services['cache.system'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('wZ+VBjXYbL', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools/system'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /**
     * Gets the public 'contao.assets.assets_context' shared service.
     *
     * @return \Contao\CoreBundle\Asset\ContaoContext
     */
    protected function getContao_Assets_AssetsContextService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->services['contao.assets.assets_context'])) {
            return $this->services['contao.assets.assets_context'];
        }

        return $this->services['contao.assets.assets_context'] = new \Contao\CoreBundle\Asset\ContaoContext(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a, 'staticPlugins', true);
    }

    /**
     * Gets the public 'contao.csrf.token_manager' shared service.
     *
     * @return \Contao\CoreBundle\Csrf\ContaoCsrfTokenManager
     */
    protected function getContao_Csrf_TokenManagerService()
    {
        return $this->services['contao.csrf.token_manager'] = new \Contao\CoreBundle\Csrf\ContaoCsrfTokenManager(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), 'csrf_', ($this->privates['security.csrf.token_generator'] ?? ($this->privates['security.csrf.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator())), ($this->privates['contao.csrf.token_storage'] ?? ($this->privates['contao.csrf.token_storage'] = new \Contao\CoreBundle\Csrf\MemoryTokenStorage())), NULL, 'contao_csrf_token');
    }

    /**
     * Gets the public 'contao.framework' shared service.
     *
     * @return \Contao\CoreBundle\Framework\ContaoFramework
     */
    protected function getContao_FrameworkService()
    {
        $a = ($this->services['contao.security.token_checker'] ?? $this->getContao_Security_TokenCheckerService());

        if (isset($this->services['contao.framework'])) {
            return $this->services['contao.framework'];
        }
        $b = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->services['contao.framework'])) {
            return $this->services['contao.framework'];
        }

        $this->services['contao.framework'] = $instance = new \Contao\CoreBundle\Framework\ContaoFramework(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), $a, ($this->services['.container.private.filesystem'] ?? ($this->services['.container.private.filesystem'] = new \Symfony\Component\Filesystem\Filesystem())), $b, \dirname(__DIR__, 3), 8183, false);

        $instance->setContainer($this);
        $instance->setHookListeners(['initializeSystem' => [255 => [0 => [0 => 'contao.listener.MGEESJ7', 1 => 'onInitializeSystem'], 1 => [0 => 'contao.listener.fE48e1G', 1 => 'onInitializeSystem']], 0 => [0 => [0 => 'contao.listener.data_container.preview_link', 1 => 'unloadModuleWithoutPreviewScript']]], 'loadDataContainer' => [0 => [0 => [0 => 'contao.listener.data_container.preview_link', 1 => 'unloadTableWithoutPreviewScript'], 1 => [0 => 'contao.listener.data_container.record_preview', 1 => 'registerDeleteCallbacks'], 2 => [0 => 'contao.listener.data_container.toggle_nodes_label', 1 => '__invoke'], 3 => [0 => 'contao.listener.data_container_callback', 1 => 'onLoadDataContainer']]], 'replaceInsertTags' => [0 => [0 => [0 => 'contao.listener.insert_tags.asset', 1 => 'onReplaceInsertTags'], 1 => [0 => 'contao.listener.insert_tags.date', 1 => '__invoke'], 2 => [0 => 'contao.listener.insert_tags.translation', 1 => 'onReplaceInsertTags']]], 'addCustomRegexp' => [0 => [0 => [0 => 'contao.listener.widget.custom_rgxp', 1 => '__invoke'], 1 => [0 => 'contao.listener.widget.http_url', 1 => '__invoke']]]]);

        return $instance;
    }

    /**
     * Gets the public 'contao.intl.locales' shared service.
     *
     * @return \Contao\CoreBundle\Intl\Locales
     */
    protected function getContao_Intl_LocalesService()
    {
        $a = ($this->services['translator'] ?? $this->getTranslatorService());

        if (isset($this->services['contao.intl.locales'])) {
            return $this->services['contao.intl.locales'];
        }
        $b = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->services['contao.intl.locales'])) {
            return $this->services['contao.intl.locales'];
        }

        return $this->services['contao.intl.locales'] = new \Contao\CoreBundle\Intl\Locales($a, ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $b, [0 => 'en', 1 => 'tr', 2 => 'it', 3 => 'sr', 4 => 'es', 5 => 'pt', 6 => 'cs', 7 => 'fa', 8 => 'de', 9 => 'ru', 10 => 'fr', 11 => 'sv', 12 => 'ja', 13 => 'sl', 14 => 'lv', 15 => 'pl', 16 => 'nl', 17 => 'af', 18 => 'af_NA', 19 => 'af_ZA', 20 => 'agq', 21 => 'agq_CM', 22 => 'ak', 23 => 'ak_GH', 24 => 'am', 25 => 'am_ET', 26 => 'ar', 27 => 'ar_001', 28 => 'ar_AE', 29 => 'ar_BH', 30 => 'ar_DJ', 31 => 'ar_DZ', 32 => 'ar_EG', 33 => 'ar_EH', 34 => 'ar_ER', 35 => 'ar_IL', 36 => 'ar_IQ', 37 => 'ar_JO', 38 => 'ar_KM', 39 => 'ar_KW', 40 => 'ar_LB', 41 => 'ar_LY', 42 => 'ar_MA', 43 => 'ar_MR', 44 => 'ar_OM', 45 => 'ar_PS', 46 => 'ar_QA', 47 => 'ar_SA', 48 => 'ar_SD', 49 => 'ar_SO', 50 => 'ar_SS', 51 => 'ar_SY', 52 => 'ar_TD', 53 => 'ar_TN', 54 => 'ar_YE', 55 => 'as', 56 => 'as_IN', 57 => 'asa', 58 => 'asa_TZ', 59 => 'ast', 60 => 'ast_ES', 61 => 'az', 62 => 'az_Cyrl', 63 => 'az_Cyrl_AZ', 64 => 'az_Latn', 65 => 'az_Latn_AZ', 66 => 'bas', 67 => 'bas_CM', 68 => 'be', 69 => 'be_BY', 70 => 'bem', 71 => 'bem_ZM', 72 => 'bez', 73 => 'bez_TZ', 74 => 'bg', 75 => 'bg_BG', 76 => 'bm', 77 => 'bm_ML', 78 => 'bn', 79 => 'bn_BD', 80 => 'bn_IN', 81 => 'bo', 82 => 'bo_CN', 83 => 'bo_IN', 84 => 'br', 85 => 'br_FR', 86 => 'brx', 87 => 'brx_IN', 88 => 'bs', 89 => 'bs_Cyrl', 90 => 'bs_Cyrl_BA', 91 => 'bs_Latn', 92 => 'bs_Latn_BA', 93 => 'ca', 94 => 'ca_AD', 95 => 'ca_ES', 96 => 'ca_FR', 97 => 'ca_IT', 98 => 'ccp', 99 => 'ccp_BD', 100 => 'ccp_IN', 101 => 'ce', 102 => 'ce_RU', 103 => 'ceb', 104 => 'ceb_PH', 105 => 'cgg', 106 => 'cgg_UG', 107 => 'chr', 108 => 'chr_US', 109 => 'ckb', 110 => 'ckb_IQ', 111 => 'ckb_IR', 112 => 'cs_CZ', 113 => 'cy', 114 => 'cy_GB', 115 => 'da', 116 => 'da_DK', 117 => 'da_GL', 118 => 'dav', 119 => 'dav_KE', 120 => 'de_AT', 121 => 'de_BE', 122 => 'de_CH', 123 => 'de_DE', 124 => 'de_IT', 125 => 'de_LI', 126 => 'de_LU', 127 => 'dje', 128 => 'dje_NE', 129 => 'dsb', 130 => 'dsb_DE', 131 => 'dua', 132 => 'dua_CM', 133 => 'dyo', 134 => 'dyo_SN', 135 => 'dz', 136 => 'dz_BT', 137 => 'ebu', 138 => 'ebu_KE', 139 => 'ee', 140 => 'ee_GH', 141 => 'ee_TG', 142 => 'el', 143 => 'el_CY', 144 => 'el_GR', 145 => 'en_001', 146 => 'en_150', 147 => 'en_AE', 148 => 'en_AG', 149 => 'en_AI', 150 => 'en_AS', 151 => 'en_AT', 152 => 'en_AU', 153 => 'en_BB', 154 => 'en_BE', 155 => 'en_BI', 156 => 'en_BM', 157 => 'en_BS', 158 => 'en_BW', 159 => 'en_BZ', 160 => 'en_CA', 161 => 'en_CC', 162 => 'en_CH', 163 => 'en_CK', 164 => 'en_CM', 165 => 'en_CX', 166 => 'en_CY', 167 => 'en_DE', 168 => 'en_DG', 169 => 'en_DK', 170 => 'en_DM', 171 => 'en_ER', 172 => 'en_FI', 173 => 'en_FJ', 174 => 'en_FK', 175 => 'en_FM', 176 => 'en_GB', 177 => 'en_GD', 178 => 'en_GG', 179 => 'en_GH', 180 => 'en_GI', 181 => 'en_GM', 182 => 'en_GU', 183 => 'en_GY', 184 => 'en_HK', 185 => 'en_IE', 186 => 'en_IL', 187 => 'en_IM', 188 => 'en_IN', 189 => 'en_IO', 190 => 'en_JE', 191 => 'en_JM', 192 => 'en_KE', 193 => 'en_KI', 194 => 'en_KN', 195 => 'en_KY', 196 => 'en_LC', 197 => 'en_LR', 198 => 'en_LS', 199 => 'en_MG', 200 => 'en_MH', 201 => 'en_MO', 202 => 'en_MP', 203 => 'en_MS', 204 => 'en_MT', 205 => 'en_MU', 206 => 'en_MW', 207 => 'en_MY', 208 => 'en_NA', 209 => 'en_NF', 210 => 'en_NG', 211 => 'en_NL', 212 => 'en_NR', 213 => 'en_NU', 214 => 'en_NZ', 215 => 'en_PG', 216 => 'en_PH', 217 => 'en_PK', 218 => 'en_PN', 219 => 'en_PR', 220 => 'en_PW', 221 => 'en_RW', 222 => 'en_SB', 223 => 'en_SC', 224 => 'en_SD', 225 => 'en_SE', 226 => 'en_SG', 227 => 'en_SH', 228 => 'en_SI', 229 => 'en_SL', 230 => 'en_SS', 231 => 'en_SX', 232 => 'en_SZ', 233 => 'en_TC', 234 => 'en_TK', 235 => 'en_TO', 236 => 'en_TT', 237 => 'en_TV', 238 => 'en_TZ', 239 => 'en_UG', 240 => 'en_UM', 241 => 'en_US', 242 => 'en_US_POSIX', 243 => 'en_VC', 244 => 'en_VG', 245 => 'en_VI', 246 => 'en_VU', 247 => 'en_WS', 248 => 'en_ZA', 249 => 'en_ZM', 250 => 'en_ZW', 251 => 'eo', 252 => 'eo_001', 253 => 'es_419', 254 => 'es_AR', 255 => 'es_BO', 256 => 'es_BR', 257 => 'es_BZ', 258 => 'es_CL', 259 => 'es_CO', 260 => 'es_CR', 261 => 'es_CU', 262 => 'es_DO', 263 => 'es_EA', 264 => 'es_EC', 265 => 'es_ES', 266 => 'es_GQ', 267 => 'es_GT', 268 => 'es_HN', 269 => 'es_IC', 270 => 'es_MX', 271 => 'es_NI', 272 => 'es_PA', 273 => 'es_PE', 274 => 'es_PH', 275 => 'es_PR', 276 => 'es_PY', 277 => 'es_SV', 278 => 'es_US', 279 => 'es_UY', 280 => 'es_VE', 281 => 'et', 282 => 'et_EE', 283 => 'eu', 284 => 'eu_ES', 285 => 'ewo', 286 => 'ewo_CM', 287 => 'fa_AF', 288 => 'fa_IR', 289 => 'ff', 290 => 'ff_Adlm', 291 => 'ff_Adlm_BF', 292 => 'ff_Adlm_CM', 293 => 'ff_Adlm_GH', 294 => 'ff_Adlm_GM', 295 => 'ff_Adlm_GN', 296 => 'ff_Adlm_GW', 297 => 'ff_Adlm_LR', 298 => 'ff_Adlm_MR', 299 => 'ff_Adlm_NE', 300 => 'ff_Adlm_NG', 301 => 'ff_Adlm_SL', 302 => 'ff_Adlm_SN', 303 => 'ff_Latn', 304 => 'ff_Latn_BF', 305 => 'ff_Latn_CM', 306 => 'ff_Latn_GH', 307 => 'ff_Latn_GM', 308 => 'ff_Latn_GN', 309 => 'ff_Latn_GW', 310 => 'ff_Latn_LR', 311 => 'ff_Latn_MR', 312 => 'ff_Latn_NE', 313 => 'ff_Latn_NG', 314 => 'ff_Latn_SL', 315 => 'ff_Latn_SN', 316 => 'fi', 317 => 'fi_FI', 318 => 'fil', 319 => 'fil_PH', 320 => 'fo', 321 => 'fo_DK', 322 => 'fo_FO', 323 => 'fr_BE', 324 => 'fr_BF', 325 => 'fr_BI', 326 => 'fr_BJ', 327 => 'fr_BL', 328 => 'fr_CA', 329 => 'fr_CD', 330 => 'fr_CF', 331 => 'fr_CG', 332 => 'fr_CH', 333 => 'fr_CI', 334 => 'fr_CM', 335 => 'fr_DJ', 336 => 'fr_DZ', 337 => 'fr_FR', 338 => 'fr_GA', 339 => 'fr_GF', 340 => 'fr_GN', 341 => 'fr_GP', 342 => 'fr_GQ', 343 => 'fr_HT', 344 => 'fr_KM', 345 => 'fr_LU', 346 => 'fr_MA', 347 => 'fr_MC', 348 => 'fr_MF', 349 => 'fr_MG', 350 => 'fr_ML', 351 => 'fr_MQ', 352 => 'fr_MR', 353 => 'fr_MU', 354 => 'fr_NC', 355 => 'fr_NE', 356 => 'fr_PF', 357 => 'fr_PM', 358 => 'fr_RE', 359 => 'fr_RW', 360 => 'fr_SC', 361 => 'fr_SN', 362 => 'fr_SY', 363 => 'fr_TD', 364 => 'fr_TG', 365 => 'fr_TN', 366 => 'fr_VU', 367 => 'fr_WF', 368 => 'fr_YT', 369 => 'fur', 370 => 'fur_IT', 371 => 'fy', 372 => 'fy_NL', 373 => 'ga', 374 => 'ga_GB', 375 => 'ga_IE', 376 => 'gd', 377 => 'gd_GB', 378 => 'gl', 379 => 'gl_ES', 380 => 'gsw', 381 => 'gsw_CH', 382 => 'gsw_FR', 383 => 'gsw_LI', 384 => 'gu', 385 => 'gu_IN', 386 => 'guz', 387 => 'guz_KE', 388 => 'gv', 389 => 'gv_IM', 390 => 'ha', 391 => 'ha_GH', 392 => 'ha_NE', 393 => 'ha_NG', 394 => 'haw', 395 => 'haw_US', 396 => 'he', 397 => 'he_IL', 398 => 'hi', 399 => 'hi_IN', 400 => 'hr', 401 => 'hr_BA', 402 => 'hr_HR', 403 => 'hsb', 404 => 'hsb_DE', 405 => 'hu', 406 => 'hu_HU', 407 => 'hy', 408 => 'hy_AM', 409 => 'ia', 410 => 'ia_001', 411 => 'id', 412 => 'id_ID', 413 => 'ig', 414 => 'ig_NG', 415 => 'ii', 416 => 'ii_CN', 417 => 'is', 418 => 'is_IS', 419 => 'it_CH', 420 => 'it_IT', 421 => 'it_SM', 422 => 'it_VA', 423 => 'ja_JP', 424 => 'jgo', 425 => 'jgo_CM', 426 => 'jmc', 427 => 'jmc_TZ', 428 => 'jv', 429 => 'jv_ID', 430 => 'ka', 431 => 'ka_GE', 432 => 'kab', 433 => 'kab_DZ', 434 => 'kam', 435 => 'kam_KE', 436 => 'kde', 437 => 'kde_TZ', 438 => 'kea', 439 => 'kea_CV', 440 => 'khq', 441 => 'khq_ML', 442 => 'ki', 443 => 'ki_KE', 444 => 'kk', 445 => 'kk_KZ', 446 => 'kkj', 447 => 'kkj_CM', 448 => 'kl', 449 => 'kl_GL', 450 => 'kln', 451 => 'kln_KE', 452 => 'km', 453 => 'km_KH', 454 => 'kn', 455 => 'kn_IN', 456 => 'ko', 457 => 'ko_KP', 458 => 'ko_KR', 459 => 'kok', 460 => 'kok_IN', 461 => 'ks', 462 => 'ks_Arab', 463 => 'ks_Arab_IN', 464 => 'ksb', 465 => 'ksb_TZ', 466 => 'ksf', 467 => 'ksf_CM', 468 => 'ksh', 469 => 'ksh_DE', 470 => 'ku', 471 => 'ku_TR', 472 => 'kw', 473 => 'kw_GB', 474 => 'ky', 475 => 'ky_KG', 476 => 'lag', 477 => 'lag_TZ', 478 => 'lb', 479 => 'lb_LU', 480 => 'lg', 481 => 'lg_UG', 482 => 'lkt', 483 => 'lkt_US', 484 => 'ln', 485 => 'ln_AO', 486 => 'ln_CD', 487 => 'ln_CF', 488 => 'ln_CG', 489 => 'lo', 490 => 'lo_LA', 491 => 'lrc', 492 => 'lrc_IQ', 493 => 'lrc_IR', 494 => 'lt', 495 => 'lt_LT', 496 => 'lu', 497 => 'lu_CD', 498 => 'luo', 499 => 'luo_KE', 500 => 'luy', 501 => 'luy_KE', 502 => 'lv_LV', 503 => 'mai', 504 => 'mai_IN', 505 => 'mas', 506 => 'mas_KE', 507 => 'mas_TZ', 508 => 'mer', 509 => 'mer_KE', 510 => 'mfe', 511 => 'mfe_MU', 512 => 'mg', 513 => 'mg_MG', 514 => 'mgh', 515 => 'mgh_MZ', 516 => 'mgo', 517 => 'mgo_CM', 518 => 'mi', 519 => 'mi_NZ', 520 => 'mk', 521 => 'mk_MK', 522 => 'ml', 523 => 'ml_IN', 524 => 'mn', 525 => 'mn_MN', 526 => 'mni', 527 => 'mni_Beng', 528 => 'mni_Beng_IN', 529 => 'mr', 530 => 'mr_IN', 531 => 'ms', 532 => 'ms_BN', 533 => 'ms_ID', 534 => 'ms_MY', 535 => 'ms_SG', 536 => 'mt', 537 => 'mt_MT', 538 => 'mua', 539 => 'mua_CM', 540 => 'my', 541 => 'my_MM', 542 => 'mzn', 543 => 'mzn_IR', 544 => 'naq', 545 => 'naq_NA', 546 => 'nb', 547 => 'nb_NO', 548 => 'nb_SJ', 549 => 'nd', 550 => 'nd_ZW', 551 => 'nds', 552 => 'nds_DE', 553 => 'nds_NL', 554 => 'ne', 555 => 'ne_IN', 556 => 'ne_NP', 557 => 'nl_AW', 558 => 'nl_BE', 559 => 'nl_BQ', 560 => 'nl_CW', 561 => 'nl_NL', 562 => 'nl_SR', 563 => 'nl_SX', 564 => 'nmg', 565 => 'nmg_CM', 566 => 'nn', 567 => 'nn_NO', 568 => 'nnh', 569 => 'nnh_CM', 570 => 'nus', 571 => 'nus_SS', 572 => 'nyn', 573 => 'nyn_UG', 574 => 'om', 575 => 'om_ET', 576 => 'om_KE', 577 => 'or', 578 => 'or_IN', 579 => 'os', 580 => 'os_GE', 581 => 'os_RU', 582 => 'pa', 583 => 'pa_Arab', 584 => 'pa_Arab_PK', 585 => 'pa_Guru', 586 => 'pa_Guru_IN', 587 => 'pcm', 588 => 'pcm_NG', 589 => 'pl_PL', 590 => 'ps', 591 => 'ps_AF', 592 => 'ps_PK', 593 => 'pt_AO', 594 => 'pt_BR', 595 => 'pt_CH', 596 => 'pt_CV', 597 => 'pt_GQ', 598 => 'pt_GW', 599 => 'pt_LU', 600 => 'pt_MO', 601 => 'pt_MZ', 602 => 'pt_PT', 603 => 'pt_ST', 604 => 'pt_TL', 605 => 'qu', 606 => 'qu_BO', 607 => 'qu_EC', 608 => 'qu_PE', 609 => 'rm', 610 => 'rm_CH', 611 => 'rn', 612 => 'rn_BI', 613 => 'ro', 614 => 'ro_MD', 615 => 'ro_RO', 616 => 'rof', 617 => 'rof_TZ', 618 => 'ru_BY', 619 => 'ru_KG', 620 => 'ru_KZ', 621 => 'ru_MD', 622 => 'ru_RU', 623 => 'ru_UA', 624 => 'rw', 625 => 'rw_RW', 626 => 'rwk', 627 => 'rwk_TZ', 628 => 'sah', 629 => 'sah_RU', 630 => 'saq', 631 => 'saq_KE', 632 => 'sat', 633 => 'sat_Olck', 634 => 'sat_Olck_IN', 635 => 'sbp', 636 => 'sbp_TZ', 637 => 'sd', 638 => 'sd_Arab', 639 => 'sd_Arab_PK', 640 => 'sd_Deva', 641 => 'sd_Deva_IN', 642 => 'se', 643 => 'se_FI', 644 => 'se_NO', 645 => 'se_SE', 646 => 'seh', 647 => 'seh_MZ', 648 => 'ses', 649 => 'ses_ML', 650 => 'sg', 651 => 'sg_CF', 652 => 'shi', 653 => 'shi_Latn', 654 => 'shi_Latn_MA', 655 => 'shi_Tfng', 656 => 'shi_Tfng_MA', 657 => 'si', 658 => 'si_LK', 659 => 'sk', 660 => 'sk_SK', 661 => 'sl_SI', 662 => 'smn', 663 => 'smn_FI', 664 => 'sn', 665 => 'sn_ZW', 666 => 'so', 667 => 'so_DJ', 668 => 'so_ET', 669 => 'so_KE', 670 => 'so_SO', 671 => 'sq', 672 => 'sq_AL', 673 => 'sq_MK', 674 => 'sq_XK', 675 => 'sr_Cyrl', 676 => 'sr_Cyrl_BA', 677 => 'sr_Cyrl_ME', 678 => 'sr_Cyrl_RS', 679 => 'sr_Cyrl_XK', 680 => 'sr_Latn', 681 => 'sr_Latn_BA', 682 => 'sr_Latn_ME', 683 => 'sr_Latn_RS', 684 => 'sr_Latn_XK', 685 => 'su', 686 => 'su_Latn', 687 => 'su_Latn_ID', 688 => 'sv_AX', 689 => 'sv_FI', 690 => 'sv_SE', 691 => 'sw', 692 => 'sw_CD', 693 => 'sw_KE', 694 => 'sw_TZ', 695 => 'sw_UG', 696 => 'ta', 697 => 'ta_IN', 698 => 'ta_LK', 699 => 'ta_MY', 700 => 'ta_SG', 701 => 'te', 702 => 'te_IN', 703 => 'teo', 704 => 'teo_KE', 705 => 'teo_UG', 706 => 'tg', 707 => 'tg_TJ', 708 => 'th', 709 => 'th_TH', 710 => 'ti', 711 => 'ti_ER', 712 => 'ti_ET', 713 => 'tk', 714 => 'tk_TM', 715 => 'to', 716 => 'to_TO', 717 => 'tr_CY', 718 => 'tr_TR', 719 => 'tt', 720 => 'tt_RU', 721 => 'twq', 722 => 'twq_NE', 723 => 'tzm', 724 => 'tzm_MA', 725 => 'ug', 726 => 'ug_CN', 727 => 'uk', 728 => 'uk_UA', 729 => 'ur', 730 => 'ur_IN', 731 => 'ur_PK', 732 => 'uz', 733 => 'uz_Arab', 734 => 'uz_Arab_AF', 735 => 'uz_Cyrl', 736 => 'uz_Cyrl_UZ', 737 => 'uz_Latn', 738 => 'uz_Latn_UZ', 739 => 'vai', 740 => 'vai_Latn', 741 => 'vai_Latn_LR', 742 => 'vai_Vaii', 743 => 'vai_Vaii_LR', 744 => 'vi', 745 => 'vi_VN', 746 => 'vun', 747 => 'vun_TZ', 748 => 'wae', 749 => 'wae_CH', 750 => 'wo', 751 => 'wo_SN', 752 => 'xh', 753 => 'xh_ZA', 754 => 'xog', 755 => 'xog_UG', 756 => 'yav', 757 => 'yav_CM', 758 => 'yi', 759 => 'yi_001', 760 => 'yo', 761 => 'yo_BJ', 762 => 'yo_NG', 763 => 'yue', 764 => 'yue_Hans', 765 => 'yue_Hans_CN', 766 => 'yue_Hant', 767 => 'yue_Hant_HK', 768 => 'zgh', 769 => 'zgh_MA', 770 => 'zh', 771 => 'zh_Hans', 772 => 'zh_Hans_CN', 773 => 'zh_Hans_HK', 774 => 'zh_Hans_MO', 775 => 'zh_Hans_SG', 776 => 'zh_Hant', 777 => 'zh_Hant_HK', 778 => 'zh_Hant_MO', 779 => 'zh_Hant_TW', 780 => 'zu', 781 => 'zu_ZA'], $this->parameters['contao.locales'], [], [], 'en');
    }

    /**
     * Gets the public 'contao.resource_finder' shared service.
     *
     * @return \Contao\CoreBundle\Config\ResourceFinder
     */
    protected function getContao_ResourceFinderService()
    {
        return $this->services['contao.resource_finder'] = new \Contao\CoreBundle\Config\ResourceFinder($this->parameters['contao.resources_paths']);
    }

    /**
     * Gets the public 'contao.routing.nested_404_matcher' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\NestedMatcher\NestedMatcher
     */
    protected function getContao_Routing_Nested404MatcherService()
    {
        $a = ($this->privates['contao.routing.route_404_provider'] ?? $this->getContao_Routing_Route404ProviderService());

        if (isset($this->services['contao.routing.nested_404_matcher'])) {
            return $this->services['contao.routing.nested_404_matcher'];
        }

        $this->services['contao.routing.nested_404_matcher'] = $instance = new \Symfony\Cmf\Component\Routing\NestedMatcher\NestedMatcher($a, ($this->privates['contao.routing.url_matcher'] ?? ($this->privates['contao.routing.url_matcher'] = new \Contao\CoreBundle\Routing\Matcher\UrlMatcher())));

        $instance->addRouteFilter(($this->privates['contao.routing.matcher.domain_filter'] ?? ($this->privates['contao.routing.matcher.domain_filter'] = new \Contao\CoreBundle\Routing\Matcher\DomainFilter())));
        $instance->addRouteFilter(($this->privates['contao.routing.matcher.published_filter'] ?? $this->getContao_Routing_Matcher_PublishedFilterService()));

        return $instance;
    }

    /**
     * Gets the public 'contao.routing.nested_matcher' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\NestedMatcher\NestedMatcher
     */
    protected function getContao_Routing_NestedMatcherService()
    {
        $a = ($this->privates['contao.routing.route_provider'] ?? $this->getContao_Routing_RouteProviderService());

        if (isset($this->services['contao.routing.nested_matcher'])) {
            return $this->services['contao.routing.nested_matcher'];
        }

        $this->services['contao.routing.nested_matcher'] = $instance = new \Symfony\Cmf\Component\Routing\NestedMatcher\NestedMatcher($a, ($this->privates['contao.routing.url_matcher'] ?? ($this->privates['contao.routing.url_matcher'] = new \Contao\CoreBundle\Routing\Matcher\UrlMatcher())));

        $instance->addRouteFilter(($this->privates['contao.routing.matcher.domain_filter'] ?? ($this->privates['contao.routing.matcher.domain_filter'] = new \Contao\CoreBundle\Routing\Matcher\DomainFilter())));
        $instance->addRouteFilter(($this->privates['contao.routing.matcher.published_filter'] ?? $this->getContao_Routing_Matcher_PublishedFilterService()));
        $instance->addRouteFilter(($this->privates['contao.routing.matcher.language_filter'] ?? ($this->privates['contao.routing.matcher.language_filter'] = new \Contao\CoreBundle\Routing\Matcher\LanguageFilter())));

        return $instance;
    }

    /**
     * Gets the public 'contao.routing.page_registry' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Page\PageRegistry
     */
    protected function getContao_Routing_PageRegistryService()
    {
        $a = ($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($this->services['contao.routing.page_registry'])) {
            return $this->services['contao.routing.page_registry'];
        }

        $this->services['contao.routing.page_registry'] = $instance = new \Contao\CoreBundle\Routing\Page\PageRegistry($a);

        $b = ($this->services['Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'] ?? $this->getErrorPageControllerService());

        $instance->add('error_401', new \Contao\CoreBundle\Routing\Page\RouteConfig(false, NULL, NULL, [], [], ['_controller' => 'Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'], []), NULL, $b);
        $instance->add('error_403', new \Contao\CoreBundle\Routing\Page\RouteConfig(false, NULL, NULL, [], [], ['_controller' => 'Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'], []), NULL, $b);
        $instance->add('error_404', new \Contao\CoreBundle\Routing\Page\RouteConfig(false, NULL, NULL, [], [], ['_controller' => 'Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'], []), NULL, $b);
        $instance->add('error_503', new \Contao\CoreBundle\Routing\Page\RouteConfig(false, NULL, NULL, [], [], ['_controller' => 'Contao\\CoreBundle\\Controller\\Page\\ErrorPageController'], []), NULL, $b);
        $instance->add('root', new \Contao\CoreBundle\Routing\Page\RouteConfig(NULL, NULL, NULL, [], [], ['_controller' => 'Contao\\CoreBundle\\Controller\\Page\\RootPageController'], []), NULL, false);

        return $instance;
    }

    /**
     * Gets the public 'contao.routing.scope_matcher' shared service.
     *
     * @return \Contao\CoreBundle\Routing\ScopeMatcher
     */
    protected function getContao_Routing_ScopeMatcherService()
    {
        return $this->services['contao.routing.scope_matcher'] = new \Contao\CoreBundle\Routing\ScopeMatcher(($this->privates['contao.routing.backend_matcher'] ?? $this->getContao_Routing_BackendMatcherService()), ($this->privates['contao.routing.frontend_matcher'] ?? $this->getContao_Routing_FrontendMatcherService()));
    }

    /**
     * Gets the public 'contao.security.token_checker' shared service.
     *
     * @return \Contao\CoreBundle\Security\Authentication\Token\TokenChecker
     */
    protected function getContao_Security_TokenCheckerService()
    {
        $a = ($this->services['security.firewall.map'] ?? $this->getSecurity_Firewall_MapService());

        if (isset($this->services['contao.security.token_checker'])) {
            return $this->services['contao.security.token_checker'];
        }
        $b = ($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($this->services['contao.security.token_checker'])) {
            return $this->services['contao.security.token_checker'];
        }

        return $this->services['contao.security.token_checker'] = new \Contao\CoreBundle\Security\Authentication\Token\TokenChecker(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a, ($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()), ($this->services['.container.private.session'] ?? $this->get_Container_Private_SessionService()), ($this->services['security.authentication.trust_resolver'] ?? $this->getSecurity_Authentication_TrustResolverService()), ($this->privates['security.access.simple_role_voter'] ?? ($this->privates['security.access.simple_role_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\RoleVoter())), $b);
    }

    /**
     * Gets the public 'contao.twig.extension' shared service.
     *
     * @return \Contao\CoreBundle\Twig\Extension\ContaoExtension
     */
    protected function getContao_Twig_ExtensionService()
    {
        $a = ($this->services['.container.private.twig'] ?? $this->get_Container_Private_TwigService());

        if (isset($this->services['contao.twig.extension'])) {
            return $this->services['contao.twig.extension'];
        }
        $b = ($this->services['contao.twig.filesystem_loader'] ?? $this->getContao_Twig_FilesystemLoaderService());

        if (isset($this->services['contao.twig.extension'])) {
            return $this->services['contao.twig.extension'];
        }

        return $this->services['contao.twig.extension'] = new \Contao\CoreBundle\Twig\Extension\ContaoExtension($a, $b);
    }

    /**
     * Gets the public 'contao.twig.filesystem_loader' shared service.
     *
     * @return \Contao\CoreBundle\Twig\Loader\ContaoFilesystemLoader
     */
    protected function getContao_Twig_FilesystemLoaderService()
    {
        $a = ($this->privates['contao.twig.loader.template_locator'] ?? $this->getContao_Twig_Loader_TemplateLocatorService());

        if (isset($this->services['contao.twig.filesystem_loader'])) {
            return $this->services['contao.twig.filesystem_loader'];
        }

        return $this->services['contao.twig.filesystem_loader'] = new \Contao\CoreBundle\Twig\Loader\ContaoFilesystemLoader(($this->services['cache.system'] ?? $this->getCache_SystemService()), $a, ($this->privates['contao.twig.loader.theme_namespace'] ?? ($this->privates['contao.twig.loader.theme_namespace'] = new \Contao\CoreBundle\Twig\Loader\ThemeNamespace())), \dirname(__DIR__, 3));
    }

    /**
     * Gets the public 'debug.stopwatch' shared service.
     *
     * @return \Symfony\Component\Stopwatch\Stopwatch
     */
    protected function getDebug_StopwatchService()
    {
        return $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true);
    }

    /**
     * Gets the public 'doctrine.dbal.default_connection' shared service.
     *
     * @return \Doctrine\DBAL\Connection
     */
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = ($this->privates['doctrine.dbal.default_connection.event_manager'] ?? $this->getDoctrine_Dbal_DefaultConnection_EventManagerService());

        if (isset($this->services['doctrine.dbal.default_connection'])) {
            return $this->services['doctrine.dbal.default_connection'];
        }

        return $this->services['doctrine.dbal.default_connection'] = ($this->privates['doctrine.dbal.connection_factory'] ?? $this->getDoctrine_Dbal_ConnectionFactoryService())->createConnection(['driver' => 'pdo_mysql', 'url' => $this->getEnv('DATABASE_URL'), 'charset' => 'utf8mb4', 'host' => 'localhost', 'port' => NULL, 'user' => 'root', 'password' => NULL, 'driverOptions' => [], 'defaultTableOptions' => ['charset' => 'utf8mb4', 'collation' => 'utf8mb4_unicode_ci', 'engine' => 'InnoDB']], ($this->privates['doctrine.dbal.default_connection.configuration'] ?? $this->getDoctrine_Dbal_DefaultConnection_ConfigurationService()), $a, []);
    }

    /**
     * Gets the public 'event_dispatcher' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher
     */
    protected function getEventDispatcherService()
    {
        $this->services['event_dispatcher'] = $instance = new \Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher(($this->privates['debug.event_dispatcher.inner'] ?? ($this->privates['debug.event_dispatcher.inner'] = new \Symfony\Component\EventDispatcher\EventDispatcher())), ($this->services['debug.stopwatch'] ?? ($this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))), ($this->privates['monolog.logger.event'] ?? $this->getMonolog_Logger_EventService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));

        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.backend_locale'] ?? $this->getContao_Listener_BackendLocaleService());
        }, 1 => '__invoke'], 7);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.backend_preview_redirect'] ?? $this->getContao_Listener_BackendPreviewRedirectService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.backend_rebuild_cache_message'] ?? $this->getContao_Listener_BackendRebuildCacheMessageService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.clear_session_data'] ?? ($this->privates['contao.listener.clear_session_data'] = new \Contao\CoreBundle\EventListener\ClearSessionDataListener()));
        }, 1 => '__invoke'], -768);
        $instance->addListener('kernel.terminate', [0 => function () {
            return ($this->privates['contao.listener.command_scheduler'] ?? $this->load('getContao_Listener_CommandSchedulerService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['contao.listener.exception_converter'] ?? ($this->privates['contao.listener.exception_converter'] = new \Contao\CoreBundle\EventListener\ExceptionConverterListener()));
        }, 1 => '__invoke'], 96);
        $instance->addListener('Contao\\CoreBundle\\Event\\FilterPageTypeEvent', [0 => function () {
            return ($this->privates['contao.listener.filter_page_type'] ?? $this->load('getContao_Listener_FilterPageTypeService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.initialize_controller'] ?? ($this->privates['contao.listener.initialize_controller'] = new \Contao\CoreBundle\EventListener\InitializeControllerListener()));
        }, 1 => '__invoke'], 1000);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.insecure_installation'] ?? ($this->privates['contao.listener.insecure_installation'] = new \Contao\CoreBundle\EventListener\InsecureInstallationListener($this->getEnv('APP_SECRET'), (\dirname(__DIR__, 3).'/public'))));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.interest_cohort'] ?? $this->getContao_Listener_InterestCohortService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('Contao\\CoreBundle\\Event\\JsonLdEvent', [0 => function () {
            return ($this->privates['contao.listener.json_ld_schema'] ?? ($this->privates['contao.listener.json_ld_schema'] = new \Contao\CoreBundle\EventListener\ContaoJsonLdSchemaListener()));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.legacy_login_constants'] ?? $this->getContao_Listener_LegacyLoginConstantsService());
        }, 1 => '__invoke'], 7);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['contao.listener.legacy_login_constants'] ?? $this->getContao_Listener_LegacyLoginConstantsService());
        }, 1 => '__invoke'], 96);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.make_response_private'] ?? $this->getContao_Listener_MakeResponsePrivateService());
        }, 1 => '__invoke'], -896);
        $instance->addListener('contao.backend_menu_build', [0 => function () {
            return ($this->privates['contao.listener.menu.backend'] ?? $this->load('getContao_Listener_Menu_BackendService'));
        }, 1 => '__invoke'], 10);
        $instance->addListener('contao.backend_menu_build', [0 => function () {
            return ($this->privates['contao.listener.menu.backend_logout'] ?? $this->load('getContao_Listener_Menu_BackendLogoutService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('contao.backend_menu_build', [0 => function () {
            return ($this->privates['contao.listener.menu.backend_preview'] ?? $this->load('getContao_Listener_Menu_BackendPreviewService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.merge_http_headers'] ?? $this->getContao_Listener_MergeHttpHeadersService());
        }, 1 => '__invoke'], 256);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.page_trail_cache_tags'] ?? $this->getContao_Listener_PageTrailCacheTagsService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['contao.listener.pretty_error_screen'] ?? $this->load('getContao_Listener_PrettyErrorScreenService'));
        }, 1 => '__invoke'], -96);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.preview_authentication'] ?? $this->getContao_Listener_PreviewAuthenticationService());
        }, 1 => '__invoke'], 7);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.preview_toolbar'] ?? $this->getContao_Listener_PreviewToolbarService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('contao.preview_url_convert', [0 => function () {
            return ($this->privates['contao.listener.preview_url_convert'] ?? $this->load('getContao_Listener_PreviewUrlConvertService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('contao.preview_url_create', [0 => function () {
            return ($this->privates['contao.listener.preview_url_create'] ?? $this->load('getContao_Listener_PreviewUrlCreateService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.referer_id'] ?? $this->getContao_Listener_RefererIdService());
        }, 1 => '__invoke'], 20);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.request_token'] ?? $this->getContao_Listener_RequestTokenService());
        }, 1 => '__invoke'], 14);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['contao.listener.response_exception'] ?? ($this->privates['contao.listener.response_exception'] = new \Contao\CoreBundle\EventListener\ResponseExceptionListener()));
        }, 1 => '__invoke'], 64);
        $instance->addListener('contao.robots_txt', [0 => function () {
            return ($this->privates['contao.listener.robots_txt'] ?? $this->load('getContao_Listener_RobotsTxtService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () {
            return ($this->privates['contao.listener.security.logout_success'] ?? $this->load('getContao_Listener_Security_LogoutSuccessService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('security.switch_user', [0 => function () {
            return ($this->privates['contao.listener.security.switch_user'] ?? $this->load('getContao_Listener_Security_SwitchUserService'));
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.security.two_factor_frontend'] ?? $this->getContao_Listener_Security_TwoFactorFrontendService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.service_unavailable'] ?? $this->getContao_Listener_ServiceUnavailableService());
        }, 1 => '__invoke'], 6);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.store_referer'] ?? $this->getContao_Listener_StoreRefererService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.user_session'] ?? $this->getContao_Listener_UserSessionService());
        }, 1 => '__invoke'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.twig.filesystem_loader_warmer'] ?? $this->getContao_Twig_FilesystemLoaderWarmerService());
        }, 1 => 'onKernelRequest'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['response_listener'] ?? ($this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8', false)));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['streamed_response_listener'] ?? ($this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener()));
        }, 1 => 'onKernelResponse'], -1024);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'setDefaultLocale'], 100);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'onKernelRequest'], 16);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['validate_request_listener'] ?? ($this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener()));
        }, 1 => 'onKernelRequest'], 256);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['disallow_search_engine_index_response_listener'] ?? ($this->privates['disallow_search_engine_index_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener()));
        }, 1 => 'onResponse'], -255);
        $instance->addListener('kernel.controller_arguments', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'onControllerArguments'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'logKernelException'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'onKernelException'], -128);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['exception_listener'] ?? $this->getExceptionListenerService());
        }, 1 => 'removeCspHeader'], -128);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelRequest'], 15);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['locale_aware_listener'] ?? $this->getLocaleAwareListenerService());
        }, 1 => 'onKernelFinishRequest'], -15);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->load('getConsole_ErrorListenerService'));
        }, 1 => 'onConsoleError'], -128);
        $instance->addListener('console.terminate', [0 => function () {
            return ($this->privates['console.error_listener'] ?? $this->load('getConsole_ErrorListenerService'));
        }, 1 => 'onConsoleTerminate'], -128);
        $instance->addListener('console.error', [0 => function () {
            return ($this->privates['console.suggest_missing_package_subscriber'] ?? ($this->privates['console.suggest_missing_package_subscriber'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber()));
        }, 1 => 'onConsoleError'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['test.session.listener'] ?? $this->getTest_Session_ListenerService());
        }, 1 => 'onKernelRequest'], 128);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['test.session.listener'] ?? $this->getTest_Session_ListenerService());
        }, 1 => 'onKernelResponse'], -1000);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['test.session.listener'] ?? $this->getTest_Session_ListenerService());
        }, 1 => 'onFinishRequest'], 0);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [0 => function () {
            return ($this->privates['mailer.envelope_listener'] ?? ($this->privates['mailer.envelope_listener'] = new \Symfony\Component\Mailer\EventListener\EnvelopeListener(NULL, NULL)));
        }, 1 => 'onMessage'], -255);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [0 => function () {
            return ($this->privates['mailer.message_logger_listener'] ?? ($this->privates['mailer.message_logger_listener'] = new \Symfony\Component\Mailer\EventListener\MessageLoggerListener()));
        }, 1 => 'onMessage'], -255);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['esi_listener'] ?? $this->getEsiListenerService());
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['fragment.listener'] ?? $this->getFragment_ListenerService());
        }, 1 => 'onKernelRequest'], 48);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
        }, 1 => 'configure'], 2048);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelRequest'], 32);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('kernel.exception', [0 => function () {
            return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
        }, 1 => 'onKernelException'], -64);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['security.rememberme.response_listener'] ?? ($this->privates['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener()));
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('debug.security.authorization.vote', [0 => function () {
            return ($this->privates['debug.security.voter.vote_listener'] ?? $this->load('getDebug_Security_Voter_VoteListenerService'));
        }, 1 => 'onVoterVote'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.security.firewall'] ?? $this->getDebug_Security_FirewallService());
        }, 1 => 'configureLogoutUrlGenerator'], 8);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['debug.security.firewall'] ?? $this->getDebug_Security_FirewallService());
        }, 1 => 'onKernelRequest'], 8);
        $instance->addListener('kernel.finish_request', [0 => function () {
            return ($this->privates['debug.security.firewall'] ?? $this->getDebug_Security_FirewallService());
        }, 1 => 'onKernelFinishRequest'], 0);
        $instance->addListener('security.authentication.success', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_backend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoBackendService());
        }, 1 => 'onLogin'], 9223372036854775807);
        $instance->addListener('scheb_two_factor.authentication.require', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_backend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoBackendService());
        }, 1 => 'onAccessDenied'], 0);
        $instance->addListener('scheb_two_factor.authentication.form', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_backend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoBackendService());
        }, 1 => 'onTwoFactorForm'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_backend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoBackendService());
        }, 1 => 'onKernelResponse'], 1);
        $instance->addListener('security.authentication.success', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_frontend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoFrontendService());
        }, 1 => 'onLogin'], 9223372036854775807);
        $instance->addListener('scheb_two_factor.authentication.require', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_frontend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoFrontendService());
        }, 1 => 'onAccessDenied'], 0);
        $instance->addListener('scheb_two_factor.authentication.form', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_frontend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoFrontendService());
        }, 1 => 'onTwoFactorForm'], 0);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['security.authentication.provider_preparation_listener.two_factor.contao_frontend'] ?? $this->getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoFrontendService());
        }, 1 => 'onKernelResponse'], 1);
        $instance->addListener('Symfony\\Component\\Mailer\\Event\\MessageEvent', [0 => function () {
            return ($this->privates['twig.mailer.message_listener'] ?? $this->load('getTwig_Mailer_MessageListenerService'));
        }, 1 => 'onMessage'], 0);
        $instance->addListener('security.authentication.success', [0 => function () {
            return ($this->privates['scheb_two_factor.security.authentication_success_event_suppressor'] ?? ($this->privates['scheb_two_factor.security.authentication_success_event_suppressor'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Event\AuthenticationSuccessEventSuppressor()));
        }, 1 => 'onLogin'], 9223372036854775806);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () {
            return ($this->privates['scheb_two_factor.security.listener.check_two_factor_code'] ?? $this->load('getSchebTwoFactor_Security_Listener_CheckTwoFactorCodeService'));
        }, 1 => 'checkPassport'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () {
            return ($this->privates['scheb_two_factor.security.listener.suppress_remember_me'] ?? ($this->privates['scheb_two_factor.security.listener.suppress_remember_me'] = new \Scheb\TwoFactorBundle\Security\Http\EventListener\SuppressRememberMeListener()));
        }, 1 => 'onSuccessfulLogin'], -63);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['scheb_two_factor.trusted_cookie_response_listener'] ?? $this->getSchebTwoFactor_TrustedCookieResponseListenerService());
        }, 1 => 'onKernelResponse'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent', [0 => function () {
            return ($this->privates['scheb_two_factor.security.listener.trusted_device'] ?? $this->load('getSchebTwoFactor_Security_Listener_TrustedDeviceService'));
        }, 1 => 'onSuccessfulLogin'], 0);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent', [0 => function () {
            return ($this->privates['scheb_two_factor.security.listener.check_backup_code'] ?? $this->load('getSchebTwoFactor_Security_Listener_CheckBackupCodeService'));
        }, 1 => 'checkPassport'], 16);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.csrf_token_cookie'] ?? $this->getContao_Listener_CsrfTokenCookieService());
        }, 1 => 'onKernelRequest'], 36);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.csrf_token_cookie'] ?? $this->getContao_Listener_CsrfTokenCookieService());
        }, 1 => 'onKernelResponse'], -832);
        $instance->addListener('console.command', [0 => function () {
            return ($this->privates['contao.listener.csrf_token_cookie'] ?? $this->getContao_Listener_CsrfTokenCookieService());
        }, 1 => 'onCommand'], 36);
        $instance->addListener('Contao\\CoreBundle\\Filesystem\\Dbafs\\RetrieveDbafsMetadataEvent', [0 => function () {
            return ($this->privates['contao.listener.dbafs_metadata'] ?? ($this->privates['contao.listener.dbafs_metadata'] = new \Contao\CoreBundle\EventListener\DbafsMetadataSubscriber()));
        }, 1 => 'enhanceMetadata'], 0);
        $instance->addListener('Contao\\CoreBundle\\Filesystem\\Dbafs\\StoreDbafsMetadataEvent', [0 => function () {
            return ($this->privates['contao.listener.dbafs_metadata'] ?? ($this->privates['contao.listener.dbafs_metadata'] = new \Contao\CoreBundle\EventListener\DbafsMetadataSubscriber()));
        }, 1 => 'normalizeMetadata'], 0);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.locale'] ?? $this->getContao_Listener_LocaleService());
        }, 1 => 'onKernelRequest'], 20);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.locale'] ?? $this->getContao_Listener_LocaleService());
        }, 1 => 'setTranslatorLocale'], 100);
        $instance->addListener('kernel.request', [0 => function () {
            return ($this->privates['contao.listener.subrequest_cache'] ?? ($this->privates['contao.listener.subrequest_cache'] = new \Contao\CoreBundle\EventListener\SubrequestCacheSubscriber()));
        }, 1 => 'onKernelRequest'], 255);
        $instance->addListener('kernel.response', [0 => function () {
            return ($this->privates['contao.listener.subrequest_cache'] ?? ($this->privates['contao.listener.subrequest_cache'] = new \Contao\CoreBundle\EventListener\SubrequestCacheSubscriber()));
        }, 1 => 'onKernelResponse'], -255);
        $instance->addListener('Symfony\\Component\\Security\\Http\\Event\\LogoutEvent', [0 => function () {
            return ($this->privates['security.logout.listener.csrf_token_clearing'] ?? $this->load('getSecurity_Logout_Listener_CsrfTokenClearingService'));
        }, 1 => 'onLogout'], 0);

        return $instance;
    }

    /**
     * Gets the public 'http_kernel' shared service.
     *
     * @return \Symfony\Component\HttpKernel\HttpKernel
     */
    protected function getHttpKernelService()
    {
        $a = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        if (isset($this->services['http_kernel'])) {
            return $this->services['http_kernel'];
        }
        $b = ($this->privates['debug.argument_resolver'] ?? $this->getDebug_ArgumentResolverService());

        if (isset($this->services['http_kernel'])) {
            return $this->services['http_kernel'];
        }

        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\HttpKernel($a, ($this->privates['contao.controller_resolver'] ?? $this->getContao_ControllerResolverService()), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $b);
    }

    /**
     * Gets the public 'knp_menu.matcher' shared service.
     *
     * @return \Knp\Menu\Matcher\Matcher
     */
    protected function getKnpMenu_MatcherService()
    {
        return $this->services['knp_menu.matcher'] = new \Knp\Menu\Matcher\Matcher(new RewindableGenerator(function () {
            yield 0 => ($this->privates['knp_menu.voter.router'] ?? $this->load('getKnpMenu_Voter_RouterService'));
        }, 1));
    }

    /**
     * Gets the public 'request_stack' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestStack
     */
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }

    /**
     * Gets the public 'router' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\ChainRouter
     */
    protected function getRouterService()
    {
        $this->services['router'] = $instance = new \Symfony\Cmf\Component\Routing\ChainRouter(($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));

        $instance->setContext(($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()));
        $instance->add(($this->privates['router.default'] ?? $this->getRouter_DefaultService()), '100');
        $instance->add(($this->privates['contao.routing.page_404_router'] ?? $this->getContao_Routing_Page404RouterService()), -200);
        $instance->add(($this->privates['contao.routing.page_router'] ?? $this->getContao_Routing_PageRouterService()), 20);

        return $instance;
    }

    /**
     * Gets the public 'security.authentication.trust_resolver' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\Authentication\AuthenticationTrustResolver
     */
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Scheb\TwoFactorBundle\Security\Authentication\AuthenticationTrustResolver(($this->privates['scheb_two_factor.security.authentication.trust_resolver.inner'] ?? ($this->privates['scheb_two_factor.security.authentication.trust_resolver.inner'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver())));
    }

    /**
     * Gets the public 'security.firewall.map' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Security\FirewallMap
     */
    protected function getSecurity_Firewall_MapService()
    {
        $a = ($this->privates['.service_locator.f6V.Y6Q'] ?? $this->get_ServiceLocator_F6V_Y6QService());

        if (isset($this->services['security.firewall.map'])) {
            return $this->services['security.firewall.map'];
        }

        return $this->services['security.firewall.map'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($a, new RewindableGenerator(function () {
            yield 'security.firewall.map.context.contao_install' => ($this->privates['.security.request_matcher.2lQKaAK'] ?? ($this->privates['.security.request_matcher.2lQKaAK'] = new \Symfony\Component\HttpFoundation\RequestMatcher('^/contao/install$')));
            yield 'security.firewall.map.context.contao_backend' => ($this->privates['contao.routing.backend_matcher'] ?? $this->getContao_Routing_BackendMatcherService());
            yield 'security.firewall.map.context.contao_frontend' => ($this->privates['contao.routing.frontend_matcher'] ?? $this->getContao_Routing_FrontendMatcherService());
        }, 3));
    }

    /**
     * Gets the public 'security.helper' shared service.
     *
     * @return \Symfony\Component\Security\Core\Security
     */
    protected function getSecurity_HelperService()
    {
        return $this->services['security.helper'] = new \Symfony\Component\Security\Core\Security(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'security.authorization_checker' => ['services', '.container.private.security.authorization_checker', 'get_Container_Private_Security_AuthorizationCheckerService', false],
            'security.token_storage' => ['services', '.container.private.security.token_storage', 'get_Container_Private_Security_TokenStorageService', false],
        ], [
            'security.authorization_checker' => '?',
            'security.token_storage' => '?',
        ]));
    }

    /**
     * Gets the public 'security.logout_url_generator' shared service.
     *
     * @return \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator
     */
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $a = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->services['security.logout_url_generator'])) {
            return $this->services['security.logout_url_generator'];
        }

        $this->services['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a, ($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()));

        $instance->registerListener('contao_backend', 'contao_backend_logout', 'logout', '_csrf_token', NULL, NULL);
        $instance->registerListener('contao_frontend', 'contao_frontend_logout', 'logout', '_csrf_token', NULL, NULL);

        return $instance;
    }

    /**
     * Gets the public 'translator' shared service.
     *
     * @return \Contao\CoreBundle\Translation\Translator
     */
    protected function getTranslatorService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->services['translator'])) {
            return $this->services['translator'];
        }

        return $this->services['translator'] = new \Contao\CoreBundle\Translation\Translator(($this->privates['translator.default'] ?? $this->getTranslator_DefaultService()), $a, ($this->services['contao.resource_finder'] ?? $this->getContao_ResourceFinderService()));
    }

    /**
     * Gets the public 'uri_signer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\UriSigner
     */
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner($this->getEnv('APP_SECRET'));
    }

    /**
     * Gets the private '.service_locator.LvLjDEU' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_LvLjDEUService()
    {
        return $this->privates['.service_locator.LvLjDEU'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'contao.cache.entity_tags' => ['services', 'contao.cache.entity_tags', 'getContao_Cache_EntityTagsService', true],
            'contao.csrf.token_manager' => ['services', 'contao.csrf.token_manager', 'getContao_Csrf_TokenManagerService', false],
            'contao.framework' => ['services', 'contao.framework', 'getContao_FrameworkService', false],
            'doctrine' => ['services', 'doctrine', 'getDoctrineService', true],
            'event_dispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'router' => ['services', 'router', 'getRouterService', false],
            'security.authorization_checker' => ['services', '.container.private.security.authorization_checker', 'get_Container_Private_Security_AuthorizationCheckerService', false],
            'security.csrf.token_manager' => ['services', '.container.private.security.csrf.token_manager', 'get_Container_Private_Security_Csrf_TokenManagerService', true],
            'security.token_storage' => ['services', '.container.private.security.token_storage', 'get_Container_Private_Security_TokenStorageService', false],
            'session' => ['privates', '.session.deprecated', 'get_Session_DeprecatedService', true],
            'twig' => ['services', '.container.private.twig', 'get_Container_Private_TwigService', false],
        ], [
            'contao.cache.entity_tags' => '?',
            'contao.csrf.token_manager' => 'Contao\\CoreBundle\\Csrf\\ContaoCsrfTokenManager',
            'contao.framework' => '?',
            'doctrine' => '?',
            'event_dispatcher' => '?',
            'http_kernel' => '?',
            'logger' => '?',
            'parameter_bag' => '?',
            'request_stack' => '?',
            'router' => '?',
            'security.authorization_checker' => '?',
            'security.csrf.token_manager' => '?',
            'security.token_storage' => '?',
            'session' => '.session.deprecated',
            'twig' => '?',
        ]);
    }

    /**
     * Gets the private '.service_locator.f6V.Y6Q' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    protected function get_ServiceLocator_F6V_Y6QService()
    {
        return $this->privates['.service_locator.f6V.Y6Q'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'security.firewall.map.context.contao_backend' => ['privates', 'security.firewall.map.context.contao_backend', 'getSecurity_Firewall_Map_Context_ContaoBackendService', true],
            'security.firewall.map.context.contao_frontend' => ['privates', 'security.firewall.map.context.contao_frontend', 'getSecurity_Firewall_Map_Context_ContaoFrontendService', true],
            'security.firewall.map.context.contao_install' => ['privates', 'security.firewall.map.context.contao_install', 'getSecurity_Firewall_Map_Context_ContaoInstallService', true],
        ], [
            'security.firewall.map.context.contao_backend' => '?',
            'security.firewall.map.context.contao_frontend' => '?',
            'security.firewall.map.context.contao_install' => '?',
        ]);
    }

    /**
     * Gets the private 'annotations.cache_adapter' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\PhpArrayAdapter
     */
    protected function getAnnotations_CacheAdapterService()
    {
        return $this->privates['annotations.cache_adapter'] = \Symfony\Component\Cache\Adapter\PhpArrayAdapter::create(($this->targetDir.''.'/annotations.php'), ($this->privates['cache.annotations'] ?? $this->getCache_AnnotationsService()));
    }

    /**
     * Gets the private 'argument_metadata_factory' shared service.
     *
     * @return \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory
     */
    protected function getArgumentMetadataFactoryService()
    {
        return $this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory();
    }

    /**
     * Gets the private 'assets._default_package' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_DefaultPackageService()
    {
        return $this->privates['assets._default_package'] = new \Symfony\Component\Asset\PathPackage('', ($this->privates['assets.empty_version_strategy'] ?? ($this->privates['assets.empty_version_strategy'] = new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy())), ($this->privates['assets.context'] ?? $this->getAssets_ContextService()));
    }

    /**
     * Gets the private 'assets._package_contao-components/ace' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsaceService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/ace'])) {
            return $this->privates['assets._package_contao-components/ace'];
        }

        return $this->privates['assets._package_contao-components/ace'] = new \Symfony\Component\Asset\PathPackage('assets/ace', ($this->privates['assets._version_contao-components/ace'] ?? $this->getAssets_VersionContaocomponentsaceService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/chosen' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentschosenService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/chosen'])) {
            return $this->privates['assets._package_contao-components/chosen'];
        }

        return $this->privates['assets._package_contao-components/chosen'] = new \Symfony\Component\Asset\PathPackage('assets/chosen', ($this->privates['assets._version_contao-components/chosen'] ?? $this->getAssets_VersionContaocomponentschosenService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/colorbox' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentscolorboxService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/colorbox'])) {
            return $this->privates['assets._package_contao-components/colorbox'];
        }

        return $this->privates['assets._package_contao-components/colorbox'] = new \Symfony\Component\Asset\PathPackage('assets/colorbox', ($this->privates['assets._version_contao-components/colorbox'] ?? $this->getAssets_VersionContaocomponentscolorboxService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/colorpicker' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentscolorpickerService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/colorpicker'])) {
            return $this->privates['assets._package_contao-components/colorpicker'];
        }

        return $this->privates['assets._package_contao-components/colorpicker'] = new \Symfony\Component\Asset\PathPackage('assets/colorpicker', ($this->privates['assets._version_contao-components/colorpicker'] ?? $this->getAssets_VersionContaocomponentscolorpickerService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/contao' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentscontaoService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/contao'])) {
            return $this->privates['assets._package_contao-components/contao'];
        }

        return $this->privates['assets._package_contao-components/contao'] = new \Symfony\Component\Asset\PathPackage('assets/contao', ($this->privates['assets._version_contao-components/contao'] ?? $this->getAssets_VersionContaocomponentscontaoService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/datepicker' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsdatepickerService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/datepicker'])) {
            return $this->privates['assets._package_contao-components/datepicker'];
        }

        return $this->privates['assets._package_contao-components/datepicker'] = new \Symfony\Component\Asset\PathPackage('assets/datepicker', ($this->privates['assets._version_contao-components/datepicker'] ?? $this->getAssets_VersionContaocomponentsdatepickerService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/dropzone' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsdropzoneService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/dropzone'])) {
            return $this->privates['assets._package_contao-components/dropzone'];
        }

        return $this->privates['assets._package_contao-components/dropzone'] = new \Symfony\Component\Asset\PathPackage('assets/dropzone', ($this->privates['assets._version_contao-components/dropzone'] ?? $this->getAssets_VersionContaocomponentsdropzoneService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/jquery' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsjqueryService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/jquery'])) {
            return $this->privates['assets._package_contao-components/jquery'];
        }

        return $this->privates['assets._package_contao-components/jquery'] = new \Symfony\Component\Asset\PathPackage('assets/jquery', ($this->privates['assets._version_contao-components/jquery'] ?? $this->getAssets_VersionContaocomponentsjqueryService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/jquery-ui' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsjqueryuiService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/jquery-ui'])) {
            return $this->privates['assets._package_contao-components/jquery-ui'];
        }

        return $this->privates['assets._package_contao-components/jquery-ui'] = new \Symfony\Component\Asset\PathPackage('assets/jquery-ui', ($this->privates['assets._version_contao-components/jquery-ui'] ?? $this->getAssets_VersionContaocomponentsjqueryuiService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/mediabox' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsmediaboxService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/mediabox'])) {
            return $this->privates['assets._package_contao-components/mediabox'];
        }

        return $this->privates['assets._package_contao-components/mediabox'] = new \Symfony\Component\Asset\PathPackage('assets/mediabox', ($this->privates['assets._version_contao-components/mediabox'] ?? $this->getAssets_VersionContaocomponentsmediaboxService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/mootools' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsmootoolsService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/mootools'])) {
            return $this->privates['assets._package_contao-components/mootools'];
        }

        return $this->privates['assets._package_contao-components/mootools'] = new \Symfony\Component\Asset\PathPackage('assets/mootools', ($this->privates['assets._version_contao-components/mootools'] ?? $this->getAssets_VersionContaocomponentsmootoolsService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/simplemodal' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentssimplemodalService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/simplemodal'])) {
            return $this->privates['assets._package_contao-components/simplemodal'];
        }

        return $this->privates['assets._package_contao-components/simplemodal'] = new \Symfony\Component\Asset\PathPackage('assets/simplemodal', ($this->privates['assets._version_contao-components/simplemodal'] ?? $this->getAssets_VersionContaocomponentssimplemodalService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/swipe' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentsswipeService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/swipe'])) {
            return $this->privates['assets._package_contao-components/swipe'];
        }

        return $this->privates['assets._package_contao-components/swipe'] = new \Symfony\Component\Asset\PathPackage('assets/swipe', ($this->privates['assets._version_contao-components/swipe'] ?? $this->getAssets_VersionContaocomponentsswipeService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/tablesort' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentstablesortService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/tablesort'])) {
            return $this->privates['assets._package_contao-components/tablesort'];
        }

        return $this->privates['assets._package_contao-components/tablesort'] = new \Symfony\Component\Asset\PathPackage('assets/tablesort', ($this->privates['assets._version_contao-components/tablesort'] ?? $this->getAssets_VersionContaocomponentstablesortService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/tablesorter' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentstablesorterService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/tablesorter'])) {
            return $this->privates['assets._package_contao-components/tablesorter'];
        }

        return $this->privates['assets._package_contao-components/tablesorter'] = new \Symfony\Component\Asset\PathPackage('assets/tablesorter', ($this->privates['assets._version_contao-components/tablesorter'] ?? $this->getAssets_VersionContaocomponentstablesorterService()), $a);
    }

    /**
     * Gets the private 'assets._package_contao-components/tinymce4' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaocomponentstinymce4Service()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao-components/tinymce4'])) {
            return $this->privates['assets._package_contao-components/tinymce4'];
        }

        return $this->privates['assets._package_contao-components/tinymce4'] = new \Symfony\Component\Asset\PathPackage('assets/tinymce4', ($this->privates['assets._version_contao-components/tinymce4'] ?? $this->getAssets_VersionContaocomponentstinymce4Service()), $a);
    }

    /**
     * Gets the private 'assets._package_contao_core' shared service.
     *
     * @return \Symfony\Component\Asset\PathPackage
     */
    protected function getAssets_PackageContaoCoreService()
    {
        $a = ($this->services['contao.assets.assets_context'] ?? $this->getContao_Assets_AssetsContextService());

        if (isset($this->privates['assets._package_contao_core'])) {
            return $this->privates['assets._package_contao_core'];
        }

        return $this->privates['assets._package_contao_core'] = new \Symfony\Component\Asset\PathPackage('bundles/contaocore', ($this->privates['assets.empty_version_strategy'] ?? ($this->privates['assets.empty_version_strategy'] = new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy())), $a);
    }

    /**
     * Gets the private 'assets._version_contao-components/ace' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsaceService()
    {
        return $this->privates['assets._version_contao-components/ace'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('1.23.4', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/chosen' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentschosenService()
    {
        return $this->privates['assets._version_contao-components/chosen'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('1.2.5', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/colorbox' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentscolorboxService()
    {
        return $this->privates['assets._version_contao-components/colorbox'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('1.6.6', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/colorpicker' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentscolorpickerService()
    {
        return $this->privates['assets._version_contao-components/colorpicker'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('1.5.2', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/contao' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentscontaoService()
    {
        return $this->privates['assets._version_contao-components/contao'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('9.3.2', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/datepicker' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsdatepickerService()
    {
        return $this->privates['assets._version_contao-components/datepicker'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('2.3.2', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/dropzone' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsdropzoneService()
    {
        return $this->privates['assets._version_contao-components/dropzone'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('5.9.3', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/jquery' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsjqueryService()
    {
        return $this->privates['assets._version_contao-components/jquery'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('3.7.0', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/jquery-ui' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsjqueryuiService()
    {
        return $this->privates['assets._version_contao-components/jquery-ui'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('1.13.2', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/mediabox' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsmediaboxService()
    {
        return $this->privates['assets._version_contao-components/mediabox'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('1.5.5', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/mootools' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsmootoolsService()
    {
        return $this->privates['assets._version_contao-components/mootools'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('1.6.0.7', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/simplemodal' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentssimplemodalService()
    {
        return $this->privates['assets._version_contao-components/simplemodal'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('2.1.1', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/swipe' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentsswipeService()
    {
        return $this->privates['assets._version_contao-components/swipe'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('2.2.0', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/tablesort' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentstablesortService()
    {
        return $this->privates['assets._version_contao-components/tablesort'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('4.0.1', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/tablesorter' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentstablesorterService()
    {
        return $this->privates['assets._version_contao-components/tablesorter'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('2.31.3', '%s?v=%s');
    }

    /**
     * Gets the private 'assets._version_contao-components/tinymce4' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy
     */
    protected function getAssets_VersionContaocomponentstinymce4Service()
    {
        return $this->privates['assets._version_contao-components/tinymce4'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy('5.10.7', '%s?v=%s');
    }

    /**
     * Gets the private 'assets.context' shared service.
     *
     * @return \Symfony\Component\Asset\Context\RequestStackContext
     */
    protected function getAssets_ContextService()
    {
        $a = ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService());

        return $this->privates['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a->getBaseUrl(), $a->isSecure());
    }

    /**
     * Gets the private 'assets.empty_version_strategy' shared service.
     *
     * @return \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy
     */
    protected function getAssets_EmptyVersionStrategyService()
    {
        return $this->privates['assets.empty_version_strategy'] = new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy();
    }

    /**
     * Gets the private 'cache.annotations' shared service.
     *
     * @return \Symfony\Component\Cache\Adapter\AdapterInterface
     */
    protected function getCache_AnnotationsService()
    {
        return $this->privates['cache.annotations'] = \Symfony\Component\Cache\Adapter\AbstractAdapter::createSystemCache('vfgoQ92yH9', 0, $this->getParameter('container.build_id'), ($this->targetDir.''.'/pools/system'), ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService()));
    }

    /**
     * Gets the private 'config_cache_factory' shared service.
     *
     * @return \Symfony\Component\Config\ResourceCheckerConfigCacheFactory
     */
    protected function getConfigCacheFactoryService()
    {
        return $this->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory(new RewindableGenerator(function () {
            yield 0 => ($this->privates['dependency_injection.config.container_parameters_resource_checker'] ?? ($this->privates['dependency_injection.config.container_parameters_resource_checker'] = new \Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker($this)));
            yield 1 => ($this->privates['config.resource.self_checking_resource_checker'] ?? ($this->privates['config.resource.self_checking_resource_checker'] = new \Symfony\Component\Config\Resource\SelfCheckingResourceChecker()));
        }, 2));
    }

    /**
     * Gets the private 'contao.controller_resolver' shared service.
     *
     * @return \Contao\CoreBundle\HttpKernel\ControllerResolver
     */
    protected function getContao_ControllerResolverService()
    {
        return $this->privates['contao.controller_resolver'] = new \Contao\CoreBundle\HttpKernel\ControllerResolver(($this->privates['debug.controller_resolver'] ?? $this->getDebug_ControllerResolverService()), ($this->privates['contao.fragment.registry'] ?? $this->getContao_Fragment_RegistryService()));
    }

    /**
     * Gets the private 'contao.csrf.token_storage' shared service.
     *
     * @return \Contao\CoreBundle\Csrf\MemoryTokenStorage
     */
    protected function getContao_Csrf_TokenStorageService()
    {
        return $this->privates['contao.csrf.token_storage'] = new \Contao\CoreBundle\Csrf\MemoryTokenStorage();
    }

    /**
     * Gets the private 'contao.debug.security.access.decision_manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager
     */
    protected function getContao_Debug_Security_Access_DecisionManagerService()
    {
        $a = ($this->privates['contao.security.access_decision_manager'] ?? $this->getContao_Security_AccessDecisionManagerService());

        if (isset($this->privates['contao.debug.security.access.decision_manager'])) {
            return $this->privates['contao.debug.security.access.decision_manager'];
        }

        return $this->privates['contao.debug.security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager($a);
    }

    /**
     * Gets the private 'contao.fragment._config_Bd8Hjso' shared service.
     *
     * @return \Contao\CoreBundle\Fragment\FragmentConfig
     */
    protected function getContao_Fragment_ConfigBd8HjsoService()
    {
        return $this->privates['contao.fragment._config_Bd8Hjso'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.content_element.markdown', 'forward', ['ignore_errors' => false]);
    }

    /**
     * Gets the private 'contao.fragment._config_Ie.W_bF' shared service.
     *
     * @return \Contao\CoreBundle\Fragment\FragmentConfig
     */
    protected function getContao_Fragment_ConfigIe_WBFService()
    {
        return $this->privates['contao.fragment._config_Ie.W_bF'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.frontend_module.two_factor', 'forward', ['ignore_errors' => false]);
    }

    /**
     * Gets the private 'contao.fragment._config_UbRP2PT' shared service.
     *
     * @return \Contao\CoreBundle\Fragment\FragmentConfig
     */
    protected function getContao_Fragment_ConfigUbRP2PTService()
    {
        return $this->privates['contao.fragment._config_UbRP2PT'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.frontend_module.template', 'forward', ['ignore_errors' => false]);
    }

    /**
     * Gets the private 'contao.fragment._config_s7uzikD' shared service.
     *
     * @return \Contao\CoreBundle\Fragment\FragmentConfig
     */
    protected function getContao_Fragment_ConfigS7uzikDService()
    {
        return $this->privates['contao.fragment._config_s7uzikD'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.content_element.template', 'forward', ['ignore_errors' => false]);
    }

    /**
     * Gets the private 'contao.fragment._config_yQxn9v4' shared service.
     *
     * @return \Contao\CoreBundle\Fragment\FragmentConfig
     */
    protected function getContao_Fragment_ConfigYQxn9v4Service()
    {
        return $this->privates['contao.fragment._config_yQxn9v4'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.frontend_module.root_page_dependent_modules', 'forward', ['ignore_errors' => false]);
    }

    /**
     * Gets the private 'contao.fragment.registry' shared service.
     *
     * @return \Contao\CoreBundle\Fragment\FragmentRegistry
     */
    protected function getContao_Fragment_RegistryService()
    {
        $this->privates['contao.fragment.registry'] = $instance = new \Contao\CoreBundle\Fragment\FragmentRegistry();

        $instance->add('contao.frontend_module.root_page_dependent_modules', ($this->privates['contao.fragment._config_yQxn9v4'] ?? ($this->privates['contao.fragment._config_yQxn9v4'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.frontend_module.root_page_dependent_modules', 'forward', ['ignore_errors' => false]))));
        $instance->add('contao.frontend_module.template', ($this->privates['contao.fragment._config_UbRP2PT'] ?? ($this->privates['contao.fragment._config_UbRP2PT'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.frontend_module.template', 'forward', ['ignore_errors' => false]))));
        $instance->add('contao.frontend_module.two_factor', ($this->privates['contao.fragment._config_Ie.W_bF'] ?? ($this->privates['contao.fragment._config_Ie.W_bF'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.frontend_module.two_factor', 'forward', ['ignore_errors' => false]))));
        $instance->add('contao.content_element.markdown', ($this->privates['contao.fragment._config_Bd8Hjso'] ?? ($this->privates['contao.fragment._config_Bd8Hjso'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.content_element.markdown', 'forward', ['ignore_errors' => false]))));
        $instance->add('contao.content_element.template', ($this->privates['contao.fragment._config_s7uzikD'] ?? ($this->privates['contao.fragment._config_s7uzikD'] = new \Contao\CoreBundle\Fragment\FragmentConfig('contao.fragment._contao.content_element.template', 'forward', ['ignore_errors' => false]))));

        return $instance;
    }

    /**
     * Gets the private 'contao.listener.backend_locale' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\BackendLocaleListener
     */
    protected function getContao_Listener_BackendLocaleService()
    {
        $a = ($this->services['security.helper'] ?? $this->getSecurity_HelperService());

        if (isset($this->privates['contao.listener.backend_locale'])) {
            return $this->privates['contao.listener.backend_locale'];
        }
        $b = ($this->services['translator'] ?? $this->getTranslatorService());

        if (isset($this->privates['contao.listener.backend_locale'])) {
            return $this->privates['contao.listener.backend_locale'];
        }

        return $this->privates['contao.listener.backend_locale'] = new \Contao\CoreBundle\EventListener\BackendLocaleListener($a, $b);
    }

    /**
     * Gets the private 'contao.listener.backend_preview_redirect' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\BackendPreviewRedirectListener
     */
    protected function getContao_Listener_BackendPreviewRedirectService()
    {
        return $this->privates['contao.listener.backend_preview_redirect'] = new \Contao\CoreBundle\EventListener\BackendPreviewRedirectListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()));
    }

    /**
     * Gets the private 'contao.listener.backend_rebuild_cache_message' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\BackendRebuildCacheMessageListener
     */
    protected function getContao_Listener_BackendRebuildCacheMessageService()
    {
        $a = ($this->services['translator'] ?? $this->getTranslatorService());

        if (isset($this->privates['contao.listener.backend_rebuild_cache_message'])) {
            return $this->privates['contao.listener.backend_rebuild_cache_message'];
        }

        return $this->privates['contao.listener.backend_rebuild_cache_message'] = new \Contao\CoreBundle\EventListener\BackendRebuildCacheMessageListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), ($this->services['cache.system'] ?? $this->getCache_SystemService()), $a);
    }

    /**
     * Gets the private 'contao.listener.clear_session_data' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\ClearSessionDataListener
     */
    protected function getContao_Listener_ClearSessionDataService()
    {
        return $this->privates['contao.listener.clear_session_data'] = new \Contao\CoreBundle\EventListener\ClearSessionDataListener();
    }

    /**
     * Gets the private 'contao.listener.csrf_token_cookie' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\CsrfTokenCookieSubscriber
     */
    protected function getContao_Listener_CsrfTokenCookieService()
    {
        return $this->privates['contao.listener.csrf_token_cookie'] = new \Contao\CoreBundle\EventListener\CsrfTokenCookieSubscriber(($this->services['contao.csrf.token_manager'] ?? $this->getContao_Csrf_TokenManagerService()), ($this->privates['contao.csrf.token_storage'] ?? ($this->privates['contao.csrf.token_storage'] = new \Contao\CoreBundle\Csrf\MemoryTokenStorage())), 'csrf_');
    }

    /**
     * Gets the private 'contao.listener.initialize_controller' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\InitializeControllerListener
     */
    protected function getContao_Listener_InitializeControllerService()
    {
        return $this->privates['contao.listener.initialize_controller'] = new \Contao\CoreBundle\EventListener\InitializeControllerListener();
    }

    /**
     * Gets the private 'contao.listener.insecure_installation' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\InsecureInstallationListener
     */
    protected function getContao_Listener_InsecureInstallationService()
    {
        return $this->privates['contao.listener.insecure_installation'] = new \Contao\CoreBundle\EventListener\InsecureInstallationListener($this->getEnv('APP_SECRET'), (\dirname(__DIR__, 3).'/public'));
    }

    /**
     * Gets the private 'contao.listener.interest_cohort' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\InterestCohortListener
     */
    protected function getContao_Listener_InterestCohortService()
    {
        return $this->privates['contao.listener.interest_cohort'] = new \Contao\CoreBundle\EventListener\InterestCohortListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()));
    }

    /**
     * Gets the private 'contao.listener.legacy_login_constants' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\LegacyLoginConstantsListener
     */
    protected function getContao_Listener_LegacyLoginConstantsService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->privates['contao.listener.legacy_login_constants'])) {
            return $this->privates['contao.listener.legacy_login_constants'];
        }

        return $this->privates['contao.listener.legacy_login_constants'] = new \Contao\CoreBundle\EventListener\LegacyLoginConstantsListener($a);
    }

    /**
     * Gets the private 'contao.listener.locale' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\LocaleSubscriber
     */
    protected function getContao_Listener_LocaleService()
    {
        $a = ($this->services['translator'] ?? $this->getTranslatorService());

        if (isset($this->privates['contao.listener.locale'])) {
            return $this->privates['contao.listener.locale'];
        }
        $b = ($this->services['contao.intl.locales'] ?? $this->getContao_Intl_LocalesService());

        if (isset($this->privates['contao.listener.locale'])) {
            return $this->privates['contao.listener.locale'];
        }

        return $this->privates['contao.listener.locale'] = new \Contao\CoreBundle\EventListener\LocaleSubscriber($a, ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), $b);
    }

    /**
     * Gets the private 'contao.listener.make_response_private' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\MakeResponsePrivateListener
     */
    protected function getContao_Listener_MakeResponsePrivateService()
    {
        return $this->privates['contao.listener.make_response_private'] = new \Contao\CoreBundle\EventListener\MakeResponsePrivateListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()));
    }

    /**
     * Gets the private 'contao.listener.merge_http_headers' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\MergeHttpHeadersListener
     */
    protected function getContao_Listener_MergeHttpHeadersService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->privates['contao.listener.merge_http_headers'])) {
            return $this->privates['contao.listener.merge_http_headers'];
        }

        return $this->privates['contao.listener.merge_http_headers'] = new \Contao\CoreBundle\EventListener\MergeHttpHeadersListener($a);
    }

    /**
     * Gets the private 'contao.listener.page_trail_cache_tags' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\PageTrailCacheTagsListener
     */
    protected function getContao_Listener_PageTrailCacheTagsService()
    {
        return $this->privates['contao.listener.page_trail_cache_tags'] = new \Contao\CoreBundle\EventListener\PageTrailCacheTagsListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), NULL);
    }

    /**
     * Gets the private 'contao.listener.preview_authentication' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\PreviewAuthenticationListener
     */
    protected function getContao_Listener_PreviewAuthenticationService()
    {
        $a = ($this->services['contao.security.token_checker'] ?? $this->getContao_Security_TokenCheckerService());

        if (isset($this->privates['contao.listener.preview_authentication'])) {
            return $this->privates['contao.listener.preview_authentication'];
        }
        $b = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->privates['contao.listener.preview_authentication'])) {
            return $this->privates['contao.listener.preview_authentication'];
        }

        return $this->privates['contao.listener.preview_authentication'] = new \Contao\CoreBundle\EventListener\PreviewAuthenticationListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), $a, $b, ($this->services['uri_signer'] ?? ($this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner($this->getEnv('APP_SECRET')))));
    }

    /**
     * Gets the private 'contao.listener.preview_toolbar' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\PreviewToolbarListener
     */
    protected function getContao_Listener_PreviewToolbarService()
    {
        $a = ($this->services['contao.security.token_checker'] ?? $this->getContao_Security_TokenCheckerService());

        if (isset($this->privates['contao.listener.preview_toolbar'])) {
            return $this->privates['contao.listener.preview_toolbar'];
        }
        $b = ($this->services['.container.private.twig'] ?? $this->get_Container_Private_TwigService());

        if (isset($this->privates['contao.listener.preview_toolbar'])) {
            return $this->privates['contao.listener.preview_toolbar'];
        }
        $c = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->privates['contao.listener.preview_toolbar'])) {
            return $this->privates['contao.listener.preview_toolbar'];
        }

        return $this->privates['contao.listener.preview_toolbar'] = new \Contao\CoreBundle\EventListener\PreviewToolbarListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), $a, $b, $c, '');
    }

    /**
     * Gets the private 'contao.listener.referer_id' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\RefererIdListener
     */
    protected function getContao_Listener_RefererIdService()
    {
        return $this->privates['contao.listener.referer_id'] = new \Contao\CoreBundle\EventListener\RefererIdListener(($this->privates['contao.token_generator'] ?? ($this->privates['contao.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(48))), ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()));
    }

    /**
     * Gets the private 'contao.listener.request_token' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\RequestTokenListener
     */
    protected function getContao_Listener_RequestTokenService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->privates['contao.listener.request_token'])) {
            return $this->privates['contao.listener.request_token'];
        }

        return $this->privates['contao.listener.request_token'] = new \Contao\CoreBundle\EventListener\RequestTokenListener($a, ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), ($this->services['contao.csrf.token_manager'] ?? $this->getContao_Csrf_TokenManagerService()), 'contao_csrf_token', 'csrf_');
    }

    /**
     * Gets the private 'contao.listener.security.two_factor_frontend' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\Security\TwoFactorFrontendListener
     */
    protected function getContao_Listener_Security_TwoFactorFrontendService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->privates['contao.listener.security.two_factor_frontend'])) {
            return $this->privates['contao.listener.security.two_factor_frontend'];
        }

        return $this->privates['contao.listener.security.two_factor_frontend'] = new \Contao\CoreBundle\EventListener\Security\TwoFactorFrontendListener($a, ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), ($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()), $this->parameters['scheb_two_factor.security_tokens']);
    }

    /**
     * Gets the private 'contao.listener.service_unavailable' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\ServiceUnavailableListener
     */
    protected function getContao_Listener_ServiceUnavailableService()
    {
        return $this->privates['contao.listener.service_unavailable'] = new \Contao\CoreBundle\EventListener\ServiceUnavailableListener(($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()));
    }

    /**
     * Gets the private 'contao.listener.store_referer' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\StoreRefererListener
     */
    protected function getContao_Listener_StoreRefererService()
    {
        $a = ($this->services['security.helper'] ?? $this->getSecurity_HelperService());

        if (isset($this->privates['contao.listener.store_referer'])) {
            return $this->privates['contao.listener.store_referer'];
        }

        return $this->privates['contao.listener.store_referer'] = new \Contao\CoreBundle\EventListener\StoreRefererListener($a, ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()));
    }

    /**
     * Gets the private 'contao.listener.subrequest_cache' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\SubrequestCacheSubscriber
     */
    protected function getContao_Listener_SubrequestCacheService()
    {
        return $this->privates['contao.listener.subrequest_cache'] = new \Contao\CoreBundle\EventListener\SubrequestCacheSubscriber();
    }

    /**
     * Gets the private 'contao.listener.user_session' shared service.
     *
     * @return \Contao\CoreBundle\EventListener\UserSessionListener
     */
    protected function getContao_Listener_UserSessionService()
    {
        $a = ($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($this->privates['contao.listener.user_session'])) {
            return $this->privates['contao.listener.user_session'];
        }
        $b = ($this->services['security.helper'] ?? $this->getSecurity_HelperService());

        if (isset($this->privates['contao.listener.user_session'])) {
            return $this->privates['contao.listener.user_session'];
        }
        $c = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        if (isset($this->privates['contao.listener.user_session'])) {
            return $this->privates['contao.listener.user_session'];
        }

        return $this->privates['contao.listener.user_session'] = new \Contao\CoreBundle\EventListener\UserSessionListener($a, $b, ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()), $c);
    }

    /**
     * Gets the private 'contao.monolog.processor' shared service.
     *
     * @return \Contao\CoreBundle\Monolog\ContaoTableProcessor
     */
    protected function getContao_Monolog_ProcessorService()
    {
        return $this->privates['contao.monolog.processor'] = new \Contao\CoreBundle\Monolog\ContaoTableProcessor(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()), ($this->services['contao.routing.scope_matcher'] ?? $this->getContao_Routing_ScopeMatcherService()));
    }

    /**
     * Gets the private 'contao.routing.backend_matcher' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher
     */
    protected function getContao_Routing_BackendMatcherService()
    {
        $this->privates['contao.routing.backend_matcher'] = $instance = new \Symfony\Component\HttpFoundation\RequestMatcher();

        $instance->matchAttribute('_scope', 'backend');

        return $instance;
    }

    /**
     * Gets the private 'contao.routing.candidates' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Candidates\PageCandidates
     */
    protected function getContao_Routing_CandidatesService()
    {
        $a = ($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($this->privates['contao.routing.candidates'])) {
            return $this->privates['contao.routing.candidates'];
        }
        $b = ($this->services['contao.routing.page_registry'] ?? $this->getContao_Routing_PageRegistryService());

        if (isset($this->privates['contao.routing.candidates'])) {
            return $this->privates['contao.routing.candidates'];
        }

        return $this->privates['contao.routing.candidates'] = new \Contao\CoreBundle\Routing\Candidates\PageCandidates($a, $b);
    }

    /**
     * Gets the private 'contao.routing.frontend_matcher' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\RequestMatcher
     */
    protected function getContao_Routing_FrontendMatcherService()
    {
        $this->privates['contao.routing.frontend_matcher'] = $instance = new \Symfony\Component\HttpFoundation\RequestMatcher();

        $instance->matchAttribute('_scope', 'frontend');

        return $instance;
    }

    /**
     * Gets the private 'contao.routing.input_enhancer' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Enhancer\InputEnhancer
     */
    protected function getContao_Routing_InputEnhancerService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->privates['contao.routing.input_enhancer'])) {
            return $this->privates['contao.routing.input_enhancer'];
        }

        return $this->privates['contao.routing.input_enhancer'] = new \Contao\CoreBundle\Routing\Enhancer\InputEnhancer($a);
    }

    /**
     * Gets the private 'contao.routing.locale_candidates' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Candidates\LocaleCandidates
     */
    protected function getContao_Routing_LocaleCandidatesService()
    {
        $a = ($this->services['contao.routing.page_registry'] ?? $this->getContao_Routing_PageRegistryService());

        if (isset($this->privates['contao.routing.locale_candidates'])) {
            return $this->privates['contao.routing.locale_candidates'];
        }

        return $this->privates['contao.routing.locale_candidates'] = new \Contao\CoreBundle\Routing\Candidates\LocaleCandidates($a);
    }

    /**
     * Gets the private 'contao.routing.matcher.domain_filter' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Matcher\DomainFilter
     */
    protected function getContao_Routing_Matcher_DomainFilterService()
    {
        return $this->privates['contao.routing.matcher.domain_filter'] = new \Contao\CoreBundle\Routing\Matcher\DomainFilter();
    }

    /**
     * Gets the private 'contao.routing.matcher.language_filter' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Matcher\LanguageFilter
     */
    protected function getContao_Routing_Matcher_LanguageFilterService()
    {
        return $this->privates['contao.routing.matcher.language_filter'] = new \Contao\CoreBundle\Routing\Matcher\LanguageFilter();
    }

    /**
     * Gets the private 'contao.routing.matcher.published_filter' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Matcher\PublishedFilter
     */
    protected function getContao_Routing_Matcher_PublishedFilterService()
    {
        $a = ($this->services['contao.security.token_checker'] ?? $this->getContao_Security_TokenCheckerService());

        if (isset($this->privates['contao.routing.matcher.published_filter'])) {
            return $this->privates['contao.routing.matcher.published_filter'];
        }

        return $this->privates['contao.routing.matcher.published_filter'] = new \Contao\CoreBundle\Routing\Matcher\PublishedFilter($a);
    }

    /**
     * Gets the private 'contao.routing.page_404_router' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\DynamicRouter
     */
    protected function getContao_Routing_Page404RouterService()
    {
        $a = ($this->services['contao.routing.nested_404_matcher'] ?? $this->getContao_Routing_Nested404MatcherService());

        if (isset($this->privates['contao.routing.page_404_router'])) {
            return $this->privates['contao.routing.page_404_router'];
        }
        $b = ($this->privates['contao.routing.page_url_generator'] ?? $this->getContao_Routing_PageUrlGeneratorService());

        if (isset($this->privates['contao.routing.page_404_router'])) {
            return $this->privates['contao.routing.page_404_router'];
        }
        $c = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        if (isset($this->privates['contao.routing.page_404_router'])) {
            return $this->privates['contao.routing.page_404_router'];
        }
        $d = ($this->privates['contao.routing.route_404_provider'] ?? $this->getContao_Routing_Route404ProviderService());

        if (isset($this->privates['contao.routing.page_404_router'])) {
            return $this->privates['contao.routing.page_404_router'];
        }

        return $this->privates['contao.routing.page_404_router'] = new \Symfony\Cmf\Component\Routing\DynamicRouter(($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), $a, $b, '', $c, $d);
    }

    /**
     * Gets the private 'contao.routing.page_router' shared service.
     *
     * @return \Symfony\Cmf\Component\Routing\DynamicRouter
     */
    protected function getContao_Routing_PageRouterService()
    {
        $a = ($this->services['contao.routing.nested_matcher'] ?? $this->getContao_Routing_NestedMatcherService());

        if (isset($this->privates['contao.routing.page_router'])) {
            return $this->privates['contao.routing.page_router'];
        }
        $b = ($this->privates['contao.routing.page_url_generator'] ?? $this->getContao_Routing_PageUrlGeneratorService());

        if (isset($this->privates['contao.routing.page_router'])) {
            return $this->privates['contao.routing.page_router'];
        }
        $c = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        if (isset($this->privates['contao.routing.page_router'])) {
            return $this->privates['contao.routing.page_router'];
        }
        $d = ($this->privates['contao.routing.route_provider'] ?? $this->getContao_Routing_RouteProviderService());

        if (isset($this->privates['contao.routing.page_router'])) {
            return $this->privates['contao.routing.page_router'];
        }

        $this->privates['contao.routing.page_router'] = $instance = new \Symfony\Cmf\Component\Routing\DynamicRouter(($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), $a, $b, '', $c, $d);

        $instance->addRouteEnhancer(($this->privates['contao.routing.input_enhancer'] ?? $this->getContao_Routing_InputEnhancerService()), 0);

        return $instance;
    }

    /**
     * Gets the private 'contao.routing.page_url_generator' shared service.
     *
     * @return \Contao\CoreBundle\Routing\PageUrlGenerator
     */
    protected function getContao_Routing_PageUrlGeneratorService()
    {
        $a = ($this->privates['contao.routing.route_provider'] ?? $this->getContao_Routing_RouteProviderService());

        if (isset($this->privates['contao.routing.page_url_generator'])) {
            return $this->privates['contao.routing.page_url_generator'];
        }
        $b = ($this->services['contao.routing.page_registry'] ?? $this->getContao_Routing_PageRegistryService());

        if (isset($this->privates['contao.routing.page_url_generator'])) {
            return $this->privates['contao.routing.page_url_generator'];
        }

        return $this->privates['contao.routing.page_url_generator'] = new \Contao\CoreBundle\Routing\PageUrlGenerator($a, $b, ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()));
    }

    /**
     * Gets the private 'contao.routing.route_404_provider' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Route404Provider
     */
    protected function getContao_Routing_Route404ProviderService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->privates['contao.routing.route_404_provider'])) {
            return $this->privates['contao.routing.route_404_provider'];
        }
        $b = ($this->privates['contao.routing.locale_candidates'] ?? $this->getContao_Routing_LocaleCandidatesService());

        if (isset($this->privates['contao.routing.route_404_provider'])) {
            return $this->privates['contao.routing.route_404_provider'];
        }
        $c = ($this->services['contao.routing.page_registry'] ?? $this->getContao_Routing_PageRegistryService());

        if (isset($this->privates['contao.routing.route_404_provider'])) {
            return $this->privates['contao.routing.route_404_provider'];
        }

        return $this->privates['contao.routing.route_404_provider'] = new \Contao\CoreBundle\Routing\Route404Provider($a, $b, $c);
    }

    /**
     * Gets the private 'contao.routing.route_provider' shared service.
     *
     * @return \Contao\CoreBundle\Routing\RouteProvider
     */
    protected function getContao_Routing_RouteProviderService()
    {
        $a = ($this->services['contao.framework'] ?? $this->getContao_FrameworkService());

        if (isset($this->privates['contao.routing.route_provider'])) {
            return $this->privates['contao.routing.route_provider'];
        }
        $b = ($this->privates['contao.routing.candidates'] ?? $this->getContao_Routing_CandidatesService());

        if (isset($this->privates['contao.routing.route_provider'])) {
            return $this->privates['contao.routing.route_provider'];
        }
        $c = ($this->services['contao.routing.page_registry'] ?? $this->getContao_Routing_PageRegistryService());

        if (isset($this->privates['contao.routing.route_provider'])) {
            return $this->privates['contao.routing.route_provider'];
        }

        return $this->privates['contao.routing.route_provider'] = new \Contao\CoreBundle\Routing\RouteProvider($a, $b, $c, false, false);
    }

    /**
     * Gets the private 'contao.routing.url_matcher' shared service.
     *
     * @return \Contao\CoreBundle\Routing\Matcher\UrlMatcher
     */
    protected function getContao_Routing_UrlMatcherService()
    {
        return $this->privates['contao.routing.url_matcher'] = new \Contao\CoreBundle\Routing\Matcher\UrlMatcher();
    }

    /**
     * Gets the private 'contao.security.access_decision_manager' shared service.
     *
     * @return \Contao\CoreBundle\Security\Authentication\AccessDecisionManager
     */
    protected function getContao_Security_AccessDecisionManagerService()
    {
        $a = ($this->privates['debug.security.access.decision_manager'] ?? $this->getDebug_Security_Access_DecisionManagerService());

        if (isset($this->privates['contao.security.access_decision_manager'])) {
            return $this->privates['contao.security.access_decision_manager'];
        }
        $b = ($this->privates['contao.security.access_decision_manager.priority'] ?? $this->getContao_Security_AccessDecisionManager_PriorityService());

        if (isset($this->privates['contao.security.access_decision_manager'])) {
            return $this->privates['contao.security.access_decision_manager'];
        }
        $c = ($this->services['security.firewall.map'] ?? $this->getSecurity_Firewall_MapService());

        if (isset($this->privates['contao.security.access_decision_manager'])) {
            return $this->privates['contao.security.access_decision_manager'];
        }

        return $this->privates['contao.security.access_decision_manager'] = new \Contao\CoreBundle\Security\Authentication\AccessDecisionManager($a, $b, ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $c);
    }

    /**
     * Gets the private 'contao.security.access_decision_manager.priority' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AccessDecisionManager
     */
    protected function getContao_Security_AccessDecisionManager_PriorityService()
    {
        return $this->privates['contao.security.access_decision_manager.priority'] = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(new RewindableGenerator(function () {
            yield 0 => ($this->privates['security.access.authenticated_voter'] ?? $this->load('getSecurity_Access_AuthenticatedVoterService'));
            yield 1 => ($this->privates['scheb_two_factor.security.access.authenticated_voter'] ?? ($this->privates['scheb_two_factor.security.access.authenticated_voter'] = new \Scheb\TwoFactorBundle\Security\Authorization\Voter\TwoFactorInProgressVoter()));
            yield 2 => ($this->privates['security.access.simple_role_voter'] ?? ($this->privates['security.access.simple_role_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\RoleVoter()));
            yield 3 => ($this->privates['security.access.expression_voter'] ?? $this->load('getSecurity_Access_ExpressionVoterService'));
            yield 4 => ($this->privates['contao.security.backend_access_voter'] ?? $this->load('getContao_Security_BackendAccessVoterService'));
            yield 5 => ($this->privates['contao.security.member_group_voter'] ?? ($this->privates['contao.security.member_group_voter'] = new \Contao\CoreBundle\Security\Voter\MemberGroupVoter()));
        }, 6), 'priority');
    }

    /**
     * Gets the private 'contao.session.contao_backend' shared service.
     *
     * @return \Contao\CoreBundle\Session\Attribute\ArrayAttributeBag
     */
    protected function getContao_Session_ContaoBackendService()
    {
        $this->privates['contao.session.contao_backend'] = $instance = new \Contao\CoreBundle\Session\Attribute\ArrayAttributeBag('_contao_be_attributes');

        $instance->setName('contao_backend');

        return $instance;
    }

    /**
     * Gets the private 'contao.session.contao_frontend' shared service.
     *
     * @return \Contao\CoreBundle\Session\Attribute\ArrayAttributeBag
     */
    protected function getContao_Session_ContaoFrontendService()
    {
        $this->privates['contao.session.contao_frontend'] = $instance = new \Contao\CoreBundle\Session\Attribute\ArrayAttributeBag('_contao_fe_attributes');

        $instance->setName('contao_frontend');

        return $instance;
    }

    /**
     * Gets the private 'contao.token_generator' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator
     */
    protected function getContao_TokenGeneratorService()
    {
        return $this->privates['contao.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator(48);
    }

    /**
     * Gets the private 'contao.twig.fail_tolerant_filesystem_loader' shared service.
     *
     * @return \Contao\CoreBundle\Twig\Loader\FailTolerantFilesystemLoader
     */
    protected function getContao_Twig_FailTolerantFilesystemLoaderService()
    {
        $this->privates['contao.twig.fail_tolerant_filesystem_loader'] = $instance = new \Contao\CoreBundle\Twig\Loader\FailTolerantFilesystemLoader([], \dirname(__DIR__, 3));

        $instance->addPath((\dirname(__DIR__, 3).'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'));
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/symfony/security-bundle/Resources/views'), 'Security');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/symfony/security-bundle/Resources/views'), '!Security');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Resources/views'), 'Doctrine');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/Resources/views'), '!Doctrine');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/views'), 'SchebTwoFactor');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/views'), '!SchebTwoFactor');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/knplabs/knp-menu-bundle/src/Resources/views'), 'KnpMenu');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/knplabs/knp-menu-bundle/src/Resources/views'), '!KnpMenu');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Resources/views'), 'ContaoCore');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Resources/views'), '!ContaoCore');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Resources/views/Email'), 'email');
        $instance->addPath((\dirname(__DIR__, 3).'/vendor/symfony/twig-bridge/Resources/views/Email'), '!email');

        return $instance;
    }

    /**
     * Gets the private 'contao.twig.filesystem_loader_warmer' shared service.
     *
     * @return \Contao\CoreBundle\Twig\Loader\ContaoFilesystemLoaderWarmer
     */
    protected function getContao_Twig_FilesystemLoaderWarmerService()
    {
        $a = ($this->services['contao.twig.filesystem_loader'] ?? $this->getContao_Twig_FilesystemLoaderService());

        if (isset($this->privates['contao.twig.filesystem_loader_warmer'])) {
            return $this->privates['contao.twig.filesystem_loader_warmer'];
        }
        $b = ($this->privates['contao.twig.loader.template_locator'] ?? $this->getContao_Twig_Loader_TemplateLocatorService());

        if (isset($this->privates['contao.twig.filesystem_loader_warmer'])) {
            return $this->privates['contao.twig.filesystem_loader_warmer'];
        }

        return $this->privates['contao.twig.filesystem_loader_warmer'] = new \Contao\CoreBundle\Twig\Loader\ContaoFilesystemLoaderWarmer($a, $b, \dirname(__DIR__, 3), $this->targetDir.'', 'test');
    }

    /**
     * Gets the private 'contao.twig.loader.template_locator' shared service.
     *
     * @return \Contao\CoreBundle\Twig\Loader\TemplateLocator
     */
    protected function getContao_Twig_Loader_TemplateLocatorService()
    {
        $a = ($this->services['doctrine.dbal.default_connection'] ?? $this->getDoctrine_Dbal_DefaultConnectionService());

        if (isset($this->privates['contao.twig.loader.template_locator'])) {
            return $this->privates['contao.twig.loader.template_locator'];
        }

        return $this->privates['contao.twig.loader.template_locator'] = new \Contao\CoreBundle\Twig\Loader\TemplateLocator(\dirname(__DIR__, 3), $this->parameters['kernel.bundles'], $this->parameters['kernel.bundles_metadata'], ($this->privates['contao.twig.loader.theme_namespace'] ?? ($this->privates['contao.twig.loader.theme_namespace'] = new \Contao\CoreBundle\Twig\Loader\ThemeNamespace())), $a);
    }

    /**
     * Gets the private 'contao.twig.loader.theme_namespace' shared service.
     *
     * @return \Contao\CoreBundle\Twig\Loader\ThemeNamespace
     */
    protected function getContao_Twig_Loader_ThemeNamespaceService()
    {
        return $this->privates['contao.twig.loader.theme_namespace'] = new \Contao\CoreBundle\Twig\Loader\ThemeNamespace();
    }

    /**
     * Gets the private 'debug.argument_resolver' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver
     */
    protected function getDebug_ArgumentResolverService()
    {
        $a = ($this->privates['debug.argument_resolver.inner'] ?? $this->getDebug_ArgumentResolver_InnerService());

        if (isset($this->privates['debug.argument_resolver'])) {
            return $this->privates['debug.argument_resolver'];
        }

        return $this->privates['debug.argument_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver($a, ($this->services['debug.stopwatch'] ?? ($this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.argument_resolver.inner' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\ArgumentResolver
     */
    protected function getDebug_ArgumentResolver_InnerService()
    {
        return $this->privates['debug.argument_resolver.inner'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver(($this->privates['argument_metadata_factory'] ?? ($this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory())), new RewindableGenerator(function () {
            yield 0 => ($this->privates['debug.contao.model_argument_resolver'] ?? $this->load('getDebug_Contao_ModelArgumentResolverService'));
            yield 1 => ($this->privates['debug.argument_resolver.request_attribute'] ?? $this->load('getDebug_ArgumentResolver_RequestAttributeService'));
            yield 2 => ($this->privates['debug.argument_resolver.request'] ?? $this->load('getDebug_ArgumentResolver_RequestService'));
            yield 3 => ($this->privates['debug.argument_resolver.session'] ?? $this->load('getDebug_ArgumentResolver_SessionService'));
            yield 4 => ($this->privates['debug.security.user_value_resolver'] ?? $this->load('getDebug_Security_UserValueResolverService'));
            yield 5 => ($this->privates['debug.argument_resolver.service'] ?? $this->load('getDebug_ArgumentResolver_ServiceService'));
            yield 6 => ($this->privates['debug.argument_resolver.default'] ?? $this->load('getDebug_ArgumentResolver_DefaultService'));
            yield 7 => ($this->privates['debug.argument_resolver.variadic'] ?? $this->load('getDebug_ArgumentResolver_VariadicService'));
            yield 8 => ($this->privates['debug.argument_resolver.not_tagged_controller'] ?? $this->load('getDebug_ArgumentResolver_NotTaggedControllerService'));
        }, 9));
    }

    /**
     * Gets the private 'debug.controller_resolver' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver
     */
    protected function getDebug_ControllerResolverService()
    {
        return $this->privates['debug.controller_resolver'] = new \Symfony\Component\HttpKernel\Controller\TraceableControllerResolver(($this->privates['debug.controller_resolver.inner'] ?? $this->getDebug_ControllerResolver_InnerService()), ($this->services['debug.stopwatch'] ?? ($this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'debug.controller_resolver.inner' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver
     */
    protected function getDebug_ControllerResolver_InnerService()
    {
        return $this->privates['debug.controller_resolver.inner'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()));
    }

    /**
     * Gets the private 'debug.debug_handlers_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener
     */
    protected function getDebug_DebugHandlersListenerService()
    {
        return $this->privates['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener(NULL, ($this->privates['monolog.logger.php'] ?? $this->getMonolog_Logger_PhpService()), NULL, -1, true, true, NULL);
    }

    /**
     * Gets the private 'debug.event_dispatcher.inner' shared service.
     *
     * @return \Symfony\Component\EventDispatcher\EventDispatcher
     */
    protected function getDebug_EventDispatcher_InnerService()
    {
        return $this->privates['debug.event_dispatcher.inner'] = new \Symfony\Component\EventDispatcher\EventDispatcher();
    }

    /**
     * Gets the private 'debug.file_link_formatter' shared service.
     *
     * @return \Symfony\Component\HttpKernel\Debug\FileLinkFormatter
     */
    protected function getDebug_FileLinkFormatterService()
    {
        return $this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL);
    }

    /**
     * Gets the private 'debug.security.access.decision_manager' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager
     */
    protected function getDebug_Security_Access_DecisionManagerService()
    {
        $a = ($this->privates['debug.security.access.decision_manager.inner'] ?? $this->getDebug_Security_Access_DecisionManager_InnerService());

        if (isset($this->privates['debug.security.access.decision_manager'])) {
            return $this->privates['debug.security.access.decision_manager'];
        }

        return $this->privates['debug.security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager($a);
    }

    /**
     * Gets the private 'debug.security.access.decision_manager.inner' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\AccessDecisionManager
     */
    protected function getDebug_Security_Access_DecisionManager_InnerService()
    {
        return $this->privates['debug.security.access.decision_manager.inner'] = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(new RewindableGenerator(function () {
            yield 0 => ($this->privates['debug.security.voter.security.access.authenticated_voter'] ?? $this->load('getDebug_Security_Voter_Security_Access_AuthenticatedVoterService'));
            yield 1 => ($this->privates['debug.security.voter.scheb_two_factor.security.access.authenticated_voter'] ?? $this->load('getDebug_Security_Voter_SchebTwoFactor_Security_Access_AuthenticatedVoterService'));
            yield 2 => ($this->privates['debug.security.voter.security.access.simple_role_voter'] ?? $this->load('getDebug_Security_Voter_Security_Access_SimpleRoleVoterService'));
            yield 3 => ($this->privates['debug.security.voter.security.access.expression_voter'] ?? $this->load('getDebug_Security_Voter_Security_Access_ExpressionVoterService'));
            yield 4 => ($this->privates['debug.security.voter.contao.security.backend_access_voter'] ?? $this->load('getDebug_Security_Voter_Contao_Security_BackendAccessVoterService'));
            yield 5 => ($this->privates['debug.security.voter.contao.security.member_group_voter'] ?? $this->load('getDebug_Security_Voter_Contao_Security_MemberGroupVoterService'));
        }, 6), new \Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy(false));
    }

    /**
     * Gets the private 'debug.security.firewall' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener
     */
    protected function getDebug_Security_FirewallService()
    {
        $a = ($this->services['security.firewall.map'] ?? $this->getSecurity_Firewall_MapService());

        if (isset($this->privates['debug.security.firewall'])) {
            return $this->privates['debug.security.firewall'];
        }
        $b = ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());

        if (isset($this->privates['debug.security.firewall'])) {
            return $this->privates['debug.security.firewall'];
        }

        return $this->privates['debug.security.firewall'] = new \Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener($a, $b, ($this->services['security.logout_url_generator'] ?? $this->getSecurity_LogoutUrlGeneratorService()));
    }

    /**
     * Gets the private 'disallow_search_engine_index_response_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener
     */
    protected function getDisallowSearchEngineIndexResponseListenerService()
    {
        return $this->privates['disallow_search_engine_index_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener();
    }

    /**
     * Gets the private 'doctrine.dbal.connection_factory' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\ConnectionFactory
     */
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->privates['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory($this->parameters['doctrine.dbal.connection_factory.types'], ($this->privates['doctrine.dbal.connection_factory.dsn_parser'] ?? $this->getDoctrine_Dbal_ConnectionFactory_DsnParserService()));
    }

    /**
     * Gets the private 'doctrine.dbal.connection_factory.dsn_parser' shared service.
     *
     * @return \Doctrine\DBAL\Tools\DsnParser
     */
    protected function getDoctrine_Dbal_ConnectionFactory_DsnParserService()
    {
        return $this->privates['doctrine.dbal.connection_factory.dsn_parser'] = new \Doctrine\DBAL\Tools\DsnParser(['db2' => 'ibm_db2', 'mssql' => 'pdo_sqlsrv', 'mysql' => 'pdo_mysql', 'mysql2' => 'pdo_mysql', 'postgres' => 'pdo_pgsql', 'postgresql' => 'pdo_pgsql', 'pgsql' => 'pdo_pgsql', 'sqlite' => 'pdo_sqlite', 'sqlite3' => 'pdo_sqlite']);
    }

    /**
     * Gets the private 'doctrine.dbal.default_connection.configuration' shared service.
     *
     * @return \Doctrine\DBAL\Configuration
     */
    protected function getDoctrine_Dbal_DefaultConnection_ConfigurationService()
    {
        $this->privates['doctrine.dbal.default_connection.configuration'] = $instance = new \Doctrine\DBAL\Configuration();

        $a = new \Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware(($this->privates['doctrine.debug_data_holder'] ?? ($this->privates['doctrine.debug_data_holder'] = new \Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder([]))), ($this->services['debug.stopwatch'] ?? ($this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
        $a->setConnectionName('default');

        $instance->setSchemaManagerFactory(($this->privates['doctrine.dbal.legacy_schema_manager_factory'] ?? ($this->privates['doctrine.dbal.legacy_schema_manager_factory'] = new \Doctrine\DBAL\Schema\LegacySchemaManagerFactory())));
        $instance->setMiddlewares([0 => new \Doctrine\DBAL\Logging\Middleware(($this->privates['monolog.logger.doctrine'] ?? $this->getMonolog_Logger_DoctrineService())), 1 => $a]);

        return $instance;
    }

    /**
     * Gets the private 'doctrine.dbal.default_connection.event_manager' shared service.
     *
     * @return \Symfony\Bridge\Doctrine\ContainerAwareEventManager
     */
    protected function getDoctrine_Dbal_DefaultConnection_EventManagerService()
    {
        return $this->privates['doctrine.dbal.default_connection.event_manager'] = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'contao.listener.doctrine_schema' => ['privates', 'contao.listener.doctrine_schema', 'getContao_Listener_DoctrineSchemaService', true],
            'contao.listener.doctrine_schema.adjust_search_url_length' => ['privates', 'contao.listener.doctrine_schema.adjust_search_url_length', 'getContao_Listener_DoctrineSchema_AdjustSearchUrlLengthService', true],
            'doctrine.orm.default_listeners.attach_entity_listeners' => ['privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService', true],
            'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber' => ['privates', 'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber', 'getDoctrine_Orm_Listeners_DoctrineDbalCacheAdapterSchemaSubscriberService', true],
            'doctrine.orm.listeners.doctrine_token_provider_schema_subscriber' => ['privates', 'doctrine.orm.listeners.doctrine_token_provider_schema_subscriber', 'getDoctrine_Orm_Listeners_DoctrineTokenProviderSchemaSubscriberService', true],
            'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber' => ['privates', 'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber', 'getDoctrine_Orm_Listeners_PdoCacheAdapterDoctrineSchemaSubscriberService', true],
        ], [
            'contao.listener.doctrine_schema' => '?',
            'contao.listener.doctrine_schema.adjust_search_url_length' => '?',
            'doctrine.orm.default_listeners.attach_entity_listeners' => '?',
            'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber' => '?',
            'doctrine.orm.listeners.doctrine_token_provider_schema_subscriber' => '?',
            'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber' => '?',
        ]), [0 => 'doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber', 1 => 'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber', 2 => 'doctrine.orm.listeners.doctrine_token_provider_schema_subscriber', 3 => [0 => [0 => 'loadClassMetadata'], 1 => 'doctrine.orm.default_listeners.attach_entity_listeners'], 4 => [0 => [0 => 'postGenerateSchema'], 1 => 'contao.listener.doctrine_schema'], 5 => [0 => [0 => 'postGenerateSchema'], 1 => 'contao.listener.doctrine_schema.adjust_search_url_length']]);
    }

    /**
     * Gets the private 'doctrine.dbal.legacy_schema_manager_factory' shared service.
     *
     * @return \Doctrine\DBAL\Schema\LegacySchemaManagerFactory
     */
    protected function getDoctrine_Dbal_LegacySchemaManagerFactoryService()
    {
        return $this->privates['doctrine.dbal.legacy_schema_manager_factory'] = new \Doctrine\DBAL\Schema\LegacySchemaManagerFactory();
    }

    /**
     * Gets the private 'doctrine.debug_data_holder' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder
     */
    protected function getDoctrine_DebugDataHolderService()
    {
        return $this->privates['doctrine.debug_data_holder'] = new \Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder([]);
    }

    /**
     * Gets the private 'doctrine.twig.doctrine_extension' shared service.
     *
     * @return \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension
     */
    protected function getDoctrine_Twig_DoctrineExtensionService()
    {
        return $this->privates['doctrine.twig.doctrine_extension'] = new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension();
    }

    /**
     * Gets the private 'esi' shared service.
     *
     * @return \Symfony\Component\HttpKernel\HttpCache\Esi
     */
    protected function getEsiService()
    {
        return $this->privates['esi'] = new \Symfony\Component\HttpKernel\HttpCache\Esi();
    }

    /**
     * Gets the private 'esi_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SurrogateListener
     */
    protected function getEsiListenerService()
    {
        return $this->privates['esi_listener'] = new \Symfony\Component\HttpKernel\EventListener\SurrogateListener(($this->privates['esi'] ?? ($this->privates['esi'] = new \Symfony\Component\HttpKernel\HttpCache\Esi())));
    }

    /**
     * Gets the private 'exception_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ErrorListener
     */
    protected function getExceptionListenerService()
    {
        return $this->privates['exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ErrorListener('error_controller', ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), true, []);
    }

    /**
     * Gets the private 'fragment.listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\FragmentListener
     */
    protected function getFragment_ListenerService()
    {
        return $this->privates['fragment.listener'] = new \Symfony\Component\HttpKernel\EventListener\FragmentListener(($this->services['uri_signer'] ?? ($this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner($this->getEnv('APP_SECRET')))), '/_fragment');
    }

    /**
     * Gets the private 'identity_translator' shared service.
     *
     * @return \Symfony\Component\Translation\IdentityTranslator
     */
    protected function getIdentityTranslatorService()
    {
        return $this->privates['identity_translator'] = new \Symfony\Component\Translation\IdentityTranslator();
    }

    /**
     * Gets the private 'knp_menu.helper' shared service.
     *
     * @return \Knp\Menu\Twig\Helper
     */
    protected function getKnpMenu_HelperService()
    {
        $a = ($this->privates['knp_menu.renderer_provider'] ?? $this->getKnpMenu_RendererProviderService());

        if (isset($this->privates['knp_menu.helper'])) {
            return $this->privates['knp_menu.helper'];
        }
        $b = ($this->privates['knp_menu.menu_provider.chain'] ?? $this->getKnpMenu_MenuProvider_ChainService());

        if (isset($this->privates['knp_menu.helper'])) {
            return $this->privates['knp_menu.helper'];
        }

        return $this->privates['knp_menu.helper'] = new \Knp\Menu\Twig\Helper($a, $b, ($this->privates['knp_menu.manipulator'] ?? ($this->privates['knp_menu.manipulator'] = new \Knp\Menu\Util\MenuManipulator())), ($this->services['knp_menu.matcher'] ?? $this->getKnpMenu_MatcherService()));
    }

    /**
     * Gets the private 'knp_menu.manipulator' shared service.
     *
     * @return \Knp\Menu\Util\MenuManipulator
     */
    protected function getKnpMenu_ManipulatorService()
    {
        return $this->privates['knp_menu.manipulator'] = new \Knp\Menu\Util\MenuManipulator();
    }

    /**
     * Gets the private 'knp_menu.menu_provider.chain' shared service.
     *
     * @return \Knp\Menu\Provider\ChainProvider
     */
    protected function getKnpMenu_MenuProvider_ChainService()
    {
        return $this->privates['knp_menu.menu_provider.chain'] = new \Knp\Menu\Provider\ChainProvider(new RewindableGenerator(function () {
            yield 0 => ($this->privates['knp_menu.menu_provider.lazy'] ?? $this->load('getKnpMenu_MenuProvider_LazyService'));
            yield 1 => ($this->privates['knp_menu.menu_provider.builder_alias'] ?? $this->load('getKnpMenu_MenuProvider_BuilderAliasService'));
        }, 2));
    }

    /**
     * Gets the private 'knp_menu.renderer_provider' shared service.
     *
     * @return \Knp\Menu\Renderer\PsrProvider
     */
    protected function getKnpMenu_RendererProviderService()
    {
        return $this->privates['knp_menu.renderer_provider'] = new \Knp\Menu\Renderer\PsrProvider(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'list' => ['privates', 'knp_menu.renderer.list', 'getKnpMenu_Renderer_ListService', true],
            'twig' => ['privates', 'knp_menu.renderer.twig', 'getKnpMenu_Renderer_TwigService', true],
        ], [
            'list' => '?',
            'twig' => '?',
        ]), 'twig', [], false);
    }

    /**
     * Gets the private 'knp_menu.twig.extension' shared service.
     *
     * @return \Knp\Menu\Twig\MenuExtension
     */
    protected function getKnpMenu_Twig_ExtensionService()
    {
        $a = ($this->privates['knp_menu.helper'] ?? $this->getKnpMenu_HelperService());

        if (isset($this->privates['knp_menu.twig.extension'])) {
            return $this->privates['knp_menu.twig.extension'];
        }

        return $this->privates['knp_menu.twig.extension'] = new \Knp\Menu\Twig\MenuExtension($a, ($this->services['knp_menu.matcher'] ?? $this->getKnpMenu_MatcherService()), ($this->privates['knp_menu.manipulator'] ?? ($this->privates['knp_menu.manipulator'] = new \Knp\Menu\Util\MenuManipulator())));
    }

    /**
     * Gets the private 'locale_aware_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener
     */
    protected function getLocaleAwareListenerService()
    {
        return $this->privates['locale_aware_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleAwareListener(new RewindableGenerator(function () {
            yield 0 => ($this->privates['slugger'] ?? ($this->privates['slugger'] = new \Symfony\Component\String\Slugger\AsciiSlugger('en')));
            yield 1 => ($this->privates['translator.default'] ?? $this->getTranslator_DefaultService());
            yield 2 => ($this->services['translator'] ?? $this->getTranslatorService());
        }, 3), ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
    }

    /**
     * Gets the private 'locale_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\LocaleListener
     */
    protected function getLocaleListenerService()
    {
        $a = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->privates['locale_listener'])) {
            return $this->privates['locale_listener'];
        }

        return $this->privates['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), 'en', $a, false, []);
    }

    /**
     * Gets the private 'monolog.handler.null_internal' shared service.
     *
     * @return \Monolog\Handler\NullHandler
     */
    protected function getMonolog_Handler_NullInternalService()
    {
        return $this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler();
    }

    /**
     * Gets the private 'monolog.logger' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_LoggerService()
    {
        $this->privates['monolog.logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');

        $instance->pushProcessor(($this->privates['contao.monolog.processor'] ?? $this->getContao_Monolog_ProcessorService()));
        $instance->useMicrosecondTimestamps(true);
        $instance->pushHandler(($this->privates['monolog.handler.null_internal'] ?? ($this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler())));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.cache' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_CacheService()
    {
        $this->privates['monolog.logger.cache'] = $instance = new \Symfony\Bridge\Monolog\Logger('cache');

        $instance->pushProcessor(($this->privates['contao.monolog.processor'] ?? $this->getContao_Monolog_ProcessorService()));
        $instance->pushHandler(($this->privates['monolog.handler.null_internal'] ?? ($this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler())));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.doctrine' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->privates['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');

        $instance->pushProcessor(($this->privates['contao.monolog.processor'] ?? $this->getContao_Monolog_ProcessorService()));
        $instance->pushHandler(($this->privates['monolog.handler.null_internal'] ?? ($this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler())));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.event' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_EventService()
    {
        $this->privates['monolog.logger.event'] = $instance = new \Symfony\Bridge\Monolog\Logger('event');

        $instance->pushProcessor(($this->privates['contao.monolog.processor'] ?? $this->getContao_Monolog_ProcessorService()));
        $instance->pushHandler(($this->privates['monolog.handler.null_internal'] ?? ($this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler())));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.php' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_PhpService()
    {
        $this->privates['monolog.logger.php'] = $instance = new \Symfony\Bridge\Monolog\Logger('php');

        $instance->pushProcessor(($this->privates['contao.monolog.processor'] ?? $this->getContao_Monolog_ProcessorService()));
        $instance->pushHandler(($this->privates['monolog.handler.null_internal'] ?? ($this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler())));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.request' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RequestService()
    {
        $this->privates['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');

        $instance->pushProcessor(($this->privates['contao.monolog.processor'] ?? $this->getContao_Monolog_ProcessorService()));
        $instance->pushHandler(($this->privates['monolog.handler.null_internal'] ?? ($this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler())));

        return $instance;
    }

    /**
     * Gets the private 'monolog.logger.router' shared service.
     *
     * @return \Symfony\Bridge\Monolog\Logger
     */
    protected function getMonolog_Logger_RouterService()
    {
        $this->privates['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');

        $instance->pushProcessor(($this->privates['contao.monolog.processor'] ?? $this->getContao_Monolog_ProcessorService()));
        $instance->pushHandler(($this->privates['monolog.handler.null_internal'] ?? ($this->privates['monolog.handler.null_internal'] = new \Monolog\Handler\NullHandler())));

        return $instance;
    }

    /**
     * Gets the private 'parameter_bag' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag
     */
    protected function getParameterBagService()
    {
        return $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this);
    }

    /**
     * Gets the private 'response_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ResponseListener
     */
    protected function getResponseListenerService()
    {
        return $this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8', false);
    }

    /**
     * Gets the private 'router.default' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Routing\Router
     */
    protected function getRouter_DefaultService()
    {
        $this->privates['router.default'] = $instance = new \Symfony\Bundle\FrameworkBundle\Routing\Router((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'routing.loader' => ['services', 'routing.loader', 'getRouting_LoaderService', true],
        ], [
            'routing.loader' => 'Symfony\\Component\\Config\\Loader\\LoaderInterface',
        ]))->withContext('router.default', $this), (\dirname(__DIR__, 3).'/tests/Integration/app/config/routes.yml'), ['cache_dir' => $this->targetDir.'', 'debug' => true, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\CompiledUrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\CompiledUrlGeneratorDumper', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableCompiledUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\CompiledUrlMatcherDumper', 'strict_requirements' => true], ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))), ($this->privates['monolog.logger.router'] ?? $this->getMonolog_Logger_RouterService()), 'en');

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? $this->getConfigCacheFactoryService()));
        $instance->addExpressionLanguageProvider(($this->privates['router.expression_language_provider'] ?? $this->getRouter_ExpressionLanguageProviderService()));

        return $instance;
    }

    /**
     * Gets the private 'router.expression_language_provider' shared service.
     *
     * @return \Symfony\Component\Routing\Matcher\ExpressionLanguageProvider
     */
    protected function getRouter_ExpressionLanguageProviderService()
    {
        return $this->privates['router.expression_language_provider'] = new \Symfony\Component\Routing\Matcher\ExpressionLanguageProvider(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'env' => ['privates', 'container.getenv', 'getContainer_GetenvService', true],
        ], [
            'env' => 'Closure',
        ]));
    }

    /**
     * Gets the private 'router.request_context' shared service.
     *
     * @return \Symfony\Component\Routing\RequestContext
     */
    protected function getRouter_RequestContextService()
    {
        $this->privates['router.request_context'] = $instance = \Symfony\Component\Routing\RequestContext::fromUri('', 'localhost', 'http', 80, 443);

        $instance->setParameter('_functions', ($this->privates['router.expression_language_provider'] ?? $this->getRouter_ExpressionLanguageProviderService()));

        return $instance;
    }

    /**
     * Gets the private 'router_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\RouterListener
     */
    protected function getRouterListenerService()
    {
        $a = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->privates['router_listener'])) {
            return $this->privates['router_listener'];
        }

        return $this->privates['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener($a, ($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService()), ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService()), \dirname(__DIR__, 3), true);
    }

    /**
     * Gets the private 'scheb_two_factor.provider_preparation_recorder' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TokenPreparationRecorder
     */
    protected function getSchebTwoFactor_ProviderPreparationRecorderService()
    {
        return $this->privates['scheb_two_factor.provider_preparation_recorder'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TokenPreparationRecorder(($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()));
    }

    /**
     * Gets the private 'scheb_two_factor.provider_registry' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderRegistry
     */
    protected function getSchebTwoFactor_ProviderRegistryService()
    {
        return $this->privates['scheb_two_factor.provider_registry'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderRegistry(new RewindableGenerator(function () {
            yield 'contao' => ($this->privates['contao.security.two_factor.provider'] ?? $this->load('getContao_Security_TwoFactor_ProviderService'));
        }, 1));
    }

    /**
     * Gets the private 'scheb_two_factor.security.authentication.trust_resolver.inner' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver
     */
    protected function getSchebTwoFactor_Security_Authentication_TrustResolver_InnerService()
    {
        return $this->privates['scheb_two_factor.security.authentication.trust_resolver.inner'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver();
    }

    /**
     * Gets the private 'scheb_two_factor.trusted_cookie_response_listener' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedCookieResponseListener
     */
    protected function getSchebTwoFactor_TrustedCookieResponseListenerService($lazyLoad = true)
    {
        return $this->privates['scheb_two_factor.trusted_cookie_response_listener'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedCookieResponseListener(($this->privates['scheb_two_factor.trusted_token_storage'] ?? $this->getSchebTwoFactor_TrustedTokenStorageService()), 5184000, 'trusted_device', NULL, 'lax', '/', NULL);
    }

    /**
     * Gets the private 'scheb_two_factor.trusted_jwt_encoder' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\JwtTokenEncoder
     */
    protected function getSchebTwoFactor_TrustedJwtEncoderService()
    {
        return $this->privates['scheb_two_factor.trusted_jwt_encoder'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\JwtTokenEncoder($this->getEnv('APP_SECRET'));
    }

    /**
     * Gets the private 'scheb_two_factor.trusted_token_encoder' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceTokenEncoder
     */
    protected function getSchebTwoFactor_TrustedTokenEncoderService()
    {
        return $this->privates['scheb_two_factor.trusted_token_encoder'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceTokenEncoder(($this->privates['scheb_two_factor.trusted_jwt_encoder'] ?? ($this->privates['scheb_two_factor.trusted_jwt_encoder'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\JwtTokenEncoder($this->getEnv('APP_SECRET')))), 5184000);
    }

    /**
     * Gets the private 'scheb_two_factor.trusted_token_storage' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceTokenStorage
     */
    protected function getSchebTwoFactor_TrustedTokenStorageService($lazyLoad = true)
    {
        return $this->privates['scheb_two_factor.trusted_token_storage'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceTokenStorage(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['scheb_two_factor.trusted_token_encoder'] ?? $this->getSchebTwoFactor_TrustedTokenEncoderService()), 'trusted_device');
    }

    /**
     * Gets the private 'security.access.simple_role_voter' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authorization\Voter\RoleVoter
     */
    protected function getSecurity_Access_SimpleRoleVoterService()
    {
        return $this->privates['security.access.simple_role_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\RoleVoter();
    }

    /**
     * Gets the private 'security.authentication.provider_preparation_listener.two_factor.contao_backend' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener
     */
    protected function getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoBackendService()
    {
        return $this->privates['security.authentication.provider_preparation_listener.two_factor.contao_backend'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener(($this->privates['scheb_two_factor.provider_registry'] ?? $this->getSchebTwoFactor_ProviderRegistryService()), ($this->privates['scheb_two_factor.provider_preparation_recorder'] ?? $this->getSchebTwoFactor_ProviderPreparationRecorderService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), 'contao_backend', true, false);
    }

    /**
     * Gets the private 'security.authentication.provider_preparation_listener.two_factor.contao_frontend' shared service.
     *
     * @return \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener
     */
    protected function getSecurity_Authentication_ProviderPreparationListener_TwoFactor_ContaoFrontendService()
    {
        return $this->privates['security.authentication.provider_preparation_listener.two_factor.contao_frontend'] = new \Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener(($this->privates['scheb_two_factor.provider_registry'] ?? $this->getSchebTwoFactor_ProviderRegistryService()), ($this->privates['scheb_two_factor.provider_preparation_recorder'] ?? $this->getSchebTwoFactor_ProviderPreparationRecorderService()), ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), 'contao_frontend', true, false);
    }

    /**
     * Gets the private 'security.csrf.token_generator' shared service.
     *
     * @return \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator
     */
    protected function getSecurity_Csrf_TokenGeneratorService()
    {
        return $this->privates['security.csrf.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator();
    }

    /**
     * Gets the private 'security.impersonate_url_generator' shared service.
     *
     * @return \Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator
     */
    protected function getSecurity_ImpersonateUrlGeneratorService()
    {
        $a = ($this->services['security.firewall.map'] ?? $this->getSecurity_Firewall_MapService());

        if (isset($this->privates['security.impersonate_url_generator'])) {
            return $this->privates['security.impersonate_url_generator'];
        }

        return $this->privates['security.impersonate_url_generator'] = new \Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a, ($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()));
    }

    /**
     * Gets the private 'security.rememberme.response_listener' shared service.
     *
     * @return \Symfony\Component\Security\Http\RememberMe\ResponseListener
     */
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->privates['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }

    /**
     * Gets the private 'security.untracked_token_storage' shared service.
     *
     * @return \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage
     */
    protected function getSecurity_UntrackedTokenStorageService()
    {
        return $this->privates['security.untracked_token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage();
    }

    /**
     * Gets the private 'session.factory' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\SessionFactory
     */
    protected function getSession_FactoryService()
    {
        $a = ($this->privates['test.session.listener'] ?? $this->getTest_Session_ListenerService());

        if (isset($this->privates['session.factory'])) {
            return $this->privates['session.factory'];
        }

        return $this->privates['session.factory'] = new \Symfony\Component\HttpFoundation\Session\SessionFactory(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), ($this->privates['session.storage.factory.mock_file'] ?? $this->getSession_Storage_Factory_MockFileService()), [0 => $a, 1 => 'onSessionUsage']);
    }

    /**
     * Gets the private 'session.storage.factory.mock_file' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory
     */
    protected function getSession_Storage_Factory_MockFileService()
    {
        return $this->privates['session.storage.factory.mock_file'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory(($this->targetDir.''.'/sessions'), 'MOCKSESSID', new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', 0));
    }

    /**
     * Gets the private 'streamed_response_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener
     */
    protected function getStreamedResponseListenerService()
    {
        return $this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }

    /**
     * Gets the private 'test.session.listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\SessionListener
     */
    protected function getTest_Session_ListenerService()
    {
        return $this->privates['test.session.listener'] = new \Symfony\Component\HttpKernel\EventListener\SessionListener(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'session' => ['services', '.container.private.session', 'get_Container_Private_SessionService', false],
            'session_factory' => ['privates', 'session.factory', 'getSession_FactoryService', false],
        ], [
            'session' => '?',
            'session_factory' => '?',
        ]), true, $this->parameters['session.storage.options']);
    }

    /**
     * Gets the private 'time.datetime_formatter' shared service.
     *
     * @return \Knp\Bundle\TimeBundle\DateTimeFormatter
     */
    protected function getTime_DatetimeFormatterService()
    {
        $a = ($this->services['translator'] ?? $this->getTranslatorService());

        if (isset($this->privates['time.datetime_formatter'])) {
            return $this->privates['time.datetime_formatter'];
        }

        return $this->privates['time.datetime_formatter'] = new \Knp\Bundle\TimeBundle\DateTimeFormatter($a);
    }

    /**
     * Gets the private 'time.twig.extension.time' shared service.
     *
     * @return \Knp\Bundle\TimeBundle\Twig\Extension\TimeExtension
     */
    protected function getTime_Twig_Extension_TimeService()
    {
        $a = ($this->privates['time.datetime_formatter'] ?? $this->getTime_DatetimeFormatterService());

        if (isset($this->privates['time.twig.extension.time'])) {
            return $this->privates['time.twig.extension.time'];
        }

        return $this->privates['time.twig.extension.time'] = new \Knp\Bundle\TimeBundle\Twig\Extension\TimeExtension($a);
    }

    /**
     * Gets the private 'translator.default' shared service.
     *
     * @return \Symfony\Bundle\FrameworkBundle\Translation\Translator
     */
    protected function getTranslator_DefaultService()
    {
        $this->privates['translator.default'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\Translator(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService', true],
            'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService', true],
            'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService', true],
            'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService', true],
            'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService', true],
            'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService', true],
            'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService', true],
            'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService', true],
            'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService', true],
            'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService', true],
            'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService', true],
        ], [
            'translation.loader.csv' => '?',
            'translation.loader.dat' => '?',
            'translation.loader.ini' => '?',
            'translation.loader.json' => '?',
            'translation.loader.mo' => '?',
            'translation.loader.php' => '?',
            'translation.loader.po' => '?',
            'translation.loader.qt' => '?',
            'translation.loader.res' => '?',
            'translation.loader.xliff' => '?',
            'translation.loader.yml' => '?',
        ]), ($this->privates['translator.formatter.default'] ?? $this->getTranslator_Formatter_DefaultService()), 'en', ['translation.loader.php' => [0 => 'php'], 'translation.loader.yml' => [0 => 'yaml', 1 => 'yml'], 'translation.loader.xliff' => [0 => 'xlf', 1 => 'xliff'], 'translation.loader.po' => [0 => 'po'], 'translation.loader.mo' => [0 => 'mo'], 'translation.loader.qt' => [0 => 'ts'], 'translation.loader.csv' => [0 => 'csv'], 'translation.loader.res' => [0 => 'res'], 'translation.loader.dat' => [0 => 'dat'], 'translation.loader.ini' => [0 => 'ini'], 'translation.loader.json' => [0 => 'json']], ['cache_dir' => ($this->targetDir.''.'/translations'), 'debug' => true, 'resource_files' => ['af' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.af.xlf')], 'ar' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ar.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.ar.xliff')], 'az' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.az.xlf')], 'be' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.be.xlf')], 'bg' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.bg.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.bg.xliff')], 'bs' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.bs.xlf')], 'ca' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ca.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.ca.xliff')], 'cs' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.cs.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.cs.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.cs.xliff')], 'da' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.da.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.da.xliff')], 'de' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.de.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.de.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.de.xliff')], 'el' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.el.xlf')], 'en' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.en.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.en.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.en.xliff')], 'es' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.es.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.es.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.es.xliff')], 'et' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.et.xlf')], 'eu' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.eu.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.eu.xliff')], 'fa' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.fa.xlf')], 'fi' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.fi.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.fi.xliff')], 'fr' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.fr.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.fr.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.fr.xliff')], 'gl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.gl.xlf')], 'he' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.he.xlf')], 'hr' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.hr.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.hr.yml')], 'hu' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.hu.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.hu.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.hu.xliff')], 'hy' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.hy.xlf')], 'id' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.id.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.id.xliff')], 'it' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.it.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.it.xliff')], 'ja' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ja.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.ja.xliff')], 'lb' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.lb.xlf')], 'lt' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.lt.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.lt.xliff')], 'lv' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.lv.xlf')], 'mn' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.mn.xlf')], 'my' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.my.xlf')], 'nb' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.nb.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.nb.xliff')], 'nl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.nl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.nl.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.nl.xliff')], 'nn' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.nn.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.nn.xliff')], 'no' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.no.xlf')], 'pl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.pl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.pl.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.pl.xliff')], 'pt' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.pt.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.pt.xliff')], 'pt_BR' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.pt_BR.xliff')], 'ro' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ro.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.ro.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.ro.xliff')], 'ru' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ru.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.ru.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.ru.xliff')], 'sk' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sk.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.sk.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.sk.xliff')], 'sl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sl.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.sl.xliff')], 'sq' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sq.xlf')], 'sr_Cyrl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf')], 'sr_Latn' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf')], 'sv' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.sv.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.sv.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.sv.xliff')], 'th' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.th.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.th.xliff')], 'tl' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.tl.xlf')], 'tr' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.tr.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.tr.xliff')], 'uk' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.uk.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.uk.yml'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.uk.xliff')], 'ur' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.ur.xlf')], 'uz' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.uz.xlf')], 'vi' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.vi.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.vi.xliff')], 'zh_CN' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.zh_CN.xliff')], 'zh_TW' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf'), 1 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.zh_TW.xliff')], 'bs_Latn_BA' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.bs_Latn_BA.xliff')], 'eo' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.eo.xliff')], 'hr_HR' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.hr_HR.xliff')], 'ky' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.ky.xliff')], 'pt_PT' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.pt_PT.xliff')], 'sr_Latin' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.sr_Latin.xliff')], 'zh' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.zh.xliff')], 'zh_HK' => [0 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations/time.zh_HK.xliff')]], 'scanned_directories' => [0 => (\dirname(__DIR__, 3).'/vendor/symfony/security-core/Resources/translations'), 1 => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle/Resources/translations'), 2 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src/Resources/translations'), 3 => (\dirname(__DIR__, 3).'/vendor/symfony/framework-bundle/translations'), 4 => (\dirname(__DIR__, 3).'/vendor/symfony/security-bundle/translations'), 5 => (\dirname(__DIR__, 3).'/vendor/symfony/twig-bundle/translations'), 6 => (\dirname(__DIR__, 3).'/vendor/symfony/monolog-bundle/translations'), 7 => (\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle/translations'), 8 => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-menu-bundle/src/translations'), 9 => (\dirname(__DIR__, 3).'/vendor/symfony-cmf/routing-bundle/src/translations'), 10 => (\dirname(__DIR__, 3).'/vendor/terminal42/service-annotation-bundle/src/translations'), 11 => (\dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/translations'), 12 => (\dirname(__DIR__, 3).'/translations')], 'cache_vary' => ['scanned_directories' => [0 => 'vendor/symfony/security-core/Resources/translations', 1 => 'vendor/scheb/2fa-bundle/Resources/translations', 2 => 'vendor/knplabs/knp-time-bundle/src/Resources/translations', 3 => 'vendor/symfony/framework-bundle/translations', 4 => 'vendor/symfony/security-bundle/translations', 5 => 'vendor/symfony/twig-bundle/translations', 6 => 'vendor/symfony/monolog-bundle/translations', 7 => 'vendor/doctrine/doctrine-bundle/translations', 8 => 'vendor/knplabs/knp-menu-bundle/src/translations', 9 => 'vendor/symfony-cmf/routing-bundle/src/translations', 10 => 'vendor/terminal42/service-annotation-bundle/src/translations', 11 => 'vendor/contao/core-bundle/src/translations', 12 => 'translations']]], []);

        $instance->setConfigCacheFactory(($this->privates['config_cache_factory'] ?? $this->getConfigCacheFactoryService()));
        $instance->setFallbackLocales([0 => 'en']);

        return $instance;
    }

    /**
     * Gets the private 'translator.formatter.default' shared service.
     *
     * @return \Symfony\Component\Translation\Formatter\MessageFormatter
     */
    protected function getTranslator_Formatter_DefaultService()
    {
        return $this->privates['translator.formatter.default'] = new \Symfony\Component\Translation\Formatter\MessageFormatter(($this->privates['identity_translator'] ?? ($this->privates['identity_translator'] = new \Symfony\Component\Translation\IdentityTranslator())));
    }

    /**
     * Gets the private 'twig.app_variable' shared service.
     *
     * @return \Symfony\Bridge\Twig\AppVariable
     */
    protected function getTwig_AppVariableService()
    {
        $this->privates['twig.app_variable'] = $instance = new \Symfony\Bridge\Twig\AppVariable();

        $instance->setEnvironment('test');
        $instance->setDebug(true);
        if ($this->has('.container.private.security.token_storage')) {
            $instance->setTokenStorage(($this->services['.container.private.security.token_storage'] ?? $this->get_Container_Private_Security_TokenStorageService()));
        }
        if ($this->has('request_stack')) {
            $instance->setRequestStack(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())));
        }

        return $instance;
    }

    /**
     * Gets the private 'twig.configurator.environment' shared service.
     *
     * @return \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator
     */
    protected function getTwig_Configurator_EnvironmentService()
    {
        return $this->privates['twig.configurator.environment'] = new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ',');
    }

    /**
     * Gets the private 'twig.extension.assets' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\AssetExtension
     */
    protected function getTwig_Extension_AssetsService()
    {
        $a = ($this->services['assets.packages'] ?? $this->getAssets_PackagesService());

        if (isset($this->privates['twig.extension.assets'])) {
            return $this->privates['twig.extension.assets'];
        }

        return $this->privates['twig.extension.assets'] = new \Symfony\Bridge\Twig\Extension\AssetExtension($a);
    }

    /**
     * Gets the private 'twig.extension.code' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\CodeExtension
     */
    protected function getTwig_Extension_CodeService()
    {
        return $this->privates['twig.extension.code'] = new \Symfony\Bridge\Twig\Extension\CodeExtension(($this->privates['debug.file_link_formatter'] ?? ($this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL))), \dirname(__DIR__, 3), 'UTF-8');
    }

    /**
     * Gets the private 'twig.extension.debug' shared service.
     *
     * @return \Twig\Extension\DebugExtension
     */
    protected function getTwig_Extension_DebugService()
    {
        return $this->privates['twig.extension.debug'] = new \Twig\Extension\DebugExtension();
    }

    /**
     * Gets the private 'twig.extension.debug.stopwatch' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\StopwatchExtension
     */
    protected function getTwig_Extension_Debug_StopwatchService()
    {
        return $this->privates['twig.extension.debug.stopwatch'] = new \Symfony\Bridge\Twig\Extension\StopwatchExtension(($this->services['debug.stopwatch'] ?? ($this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))), true);
    }

    /**
     * Gets the private 'twig.extension.expression' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\ExpressionExtension
     */
    protected function getTwig_Extension_ExpressionService()
    {
        return $this->privates['twig.extension.expression'] = new \Symfony\Bridge\Twig\Extension\ExpressionExtension();
    }

    /**
     * Gets the private 'twig.extension.httpfoundation' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\HttpFoundationExtension
     */
    protected function getTwig_Extension_HttpfoundationService()
    {
        $a = ($this->privates['url_helper'] ?? $this->getUrlHelperService());

        if (isset($this->privates['twig.extension.httpfoundation'])) {
            return $this->privates['twig.extension.httpfoundation'];
        }

        return $this->privates['twig.extension.httpfoundation'] = new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($a);
    }

    /**
     * Gets the private 'twig.extension.httpkernel' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\HttpKernelExtension
     */
    protected function getTwig_Extension_HttpkernelService()
    {
        return $this->privates['twig.extension.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelExtension();
    }

    /**
     * Gets the private 'twig.extension.logout_url' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\LogoutUrlExtension
     */
    protected function getTwig_Extension_LogoutUrlService()
    {
        $a = ($this->services['security.logout_url_generator'] ?? $this->getSecurity_LogoutUrlGeneratorService());

        if (isset($this->privates['twig.extension.logout_url'])) {
            return $this->privates['twig.extension.logout_url'];
        }

        return $this->privates['twig.extension.logout_url'] = new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension($a);
    }

    /**
     * Gets the private 'twig.extension.profiler' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\ProfilerExtension
     */
    protected function getTwig_Extension_ProfilerService()
    {
        return $this->privates['twig.extension.profiler'] = new \Symfony\Bridge\Twig\Extension\ProfilerExtension(($this->privates['twig.profile'] ?? ($this->privates['twig.profile'] = new \Twig\Profiler\Profile())), ($this->services['debug.stopwatch'] ?? ($this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true))));
    }

    /**
     * Gets the private 'twig.extension.routing' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\RoutingExtension
     */
    protected function getTwig_Extension_RoutingService()
    {
        $a = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->privates['twig.extension.routing'])) {
            return $this->privates['twig.extension.routing'];
        }

        return $this->privates['twig.extension.routing'] = new \Symfony\Bridge\Twig\Extension\RoutingExtension($a);
    }

    /**
     * Gets the private 'twig.extension.security' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\SecurityExtension
     */
    protected function getTwig_Extension_SecurityService()
    {
        $a = ($this->services['.container.private.security.authorization_checker'] ?? $this->get_Container_Private_Security_AuthorizationCheckerService());

        if (isset($this->privates['twig.extension.security'])) {
            return $this->privates['twig.extension.security'];
        }
        $b = ($this->privates['security.impersonate_url_generator'] ?? $this->getSecurity_ImpersonateUrlGeneratorService());

        if (isset($this->privates['twig.extension.security'])) {
            return $this->privates['twig.extension.security'];
        }

        return $this->privates['twig.extension.security'] = new \Symfony\Bridge\Twig\Extension\SecurityExtension($a, $b);
    }

    /**
     * Gets the private 'twig.extension.security_csrf' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\CsrfExtension
     */
    protected function getTwig_Extension_SecurityCsrfService()
    {
        return $this->privates['twig.extension.security_csrf'] = new \Symfony\Bridge\Twig\Extension\CsrfExtension();
    }

    /**
     * Gets the private 'twig.extension.trans' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\TranslationExtension
     */
    protected function getTwig_Extension_TransService()
    {
        $a = ($this->services['translator'] ?? $this->getTranslatorService());

        if (isset($this->privates['twig.extension.trans'])) {
            return $this->privates['twig.extension.trans'];
        }

        return $this->privates['twig.extension.trans'] = new \Symfony\Bridge\Twig\Extension\TranslationExtension($a);
    }

    /**
     * Gets the private 'twig.extension.yaml' shared service.
     *
     * @return \Symfony\Bridge\Twig\Extension\YamlExtension
     */
    protected function getTwig_Extension_YamlService()
    {
        return $this->privates['twig.extension.yaml'] = new \Symfony\Bridge\Twig\Extension\YamlExtension();
    }

    /**
     * Gets the private 'twig.loader.chain' shared service.
     *
     * @return \Twig\Loader\ChainLoader
     */
    protected function getTwig_Loader_ChainService()
    {
        $this->privates['twig.loader.chain'] = $instance = new \Twig\Loader\ChainLoader();

        $instance->addLoader(($this->services['contao.twig.filesystem_loader'] ?? $this->getContao_Twig_FilesystemLoaderService()));
        $instance->addLoader(($this->privates['contao.twig.fail_tolerant_filesystem_loader'] ?? $this->getContao_Twig_FailTolerantFilesystemLoaderService()));
        $instance->addLoader(($this->privates['twig.loader.native_filesystem'] ?? ($this->privates['twig.loader.native_filesystem'] = new \Twig\Loader\FilesystemLoader([], \dirname(__DIR__, 3)))));

        return $instance;
    }

    /**
     * Gets the private 'twig.loader.native_filesystem' shared service.
     *
     * @return \Twig\Loader\FilesystemLoader
     */
    protected function getTwig_Loader_NativeFilesystemService()
    {
        return $this->privates['twig.loader.native_filesystem'] = new \Twig\Loader\FilesystemLoader([], \dirname(__DIR__, 3));
    }

    /**
     * Gets the private 'twig.profile' shared service.
     *
     * @return \Twig\Profiler\Profile
     */
    protected function getTwig_ProfileService()
    {
        return $this->privates['twig.profile'] = new \Twig\Profiler\Profile();
    }

    /**
     * Gets the private 'twig.runtime_loader' shared service.
     *
     * @return \Twig\RuntimeLoader\ContainerRuntimeLoader
     */
    protected function getTwig_RuntimeLoaderService()
    {
        return $this->privates['twig.runtime_loader'] = new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => ['privates', 'twig.runtime.security_csrf', 'getTwig_Runtime_SecurityCsrfService', true],
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => ['privates', 'twig.runtime.httpkernel', 'getTwig_Runtime_HttpkernelService', true],
            'Contao\\CoreBundle\\Twig\\Runtime\\FigureRendererRuntime' => ['privates', 'contao.twig.figure_renderer_runtime', 'getContao_Twig_FigureRendererRuntimeService', true],
            'Contao\\CoreBundle\\Twig\\Runtime\\InsertTagRuntime' => ['privates', 'contao.twig.insert_tag_runtime', 'getContao_Twig_InsertTagRuntimeService', true],
            'Contao\\CoreBundle\\Twig\\Runtime\\LegacyTemplateFunctionsRuntime' => ['privates', 'contao.twig.legacy_template_functions_runtime', 'getContao_Twig_LegacyTemplateFunctionsRuntimeService', true],
            'Contao\\CoreBundle\\Twig\\Runtime\\PictureConfigurationRuntime' => ['privates', 'contao.twig.picture_configuration_runtime', 'getContao_Twig_PictureConfigurationRuntimeService', true],
            'Contao\\CoreBundle\\Twig\\Runtime\\SchemaOrgRuntime' => ['privates', 'contao.twig.schema_org_runtime', 'getContao_Twig_SchemaOrgRuntimeService', true],
        ], [
            'Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime' => '?',
            'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => '?',
            'Contao\\CoreBundle\\Twig\\Runtime\\FigureRendererRuntime' => '?',
            'Contao\\CoreBundle\\Twig\\Runtime\\InsertTagRuntime' => '?',
            'Contao\\CoreBundle\\Twig\\Runtime\\LegacyTemplateFunctionsRuntime' => '?',
            'Contao\\CoreBundle\\Twig\\Runtime\\PictureConfigurationRuntime' => '?',
            'Contao\\CoreBundle\\Twig\\Runtime\\SchemaOrgRuntime' => '?',
        ]));
    }

    /**
     * Gets the private 'url_helper' shared service.
     *
     * @return \Symfony\Component\HttpFoundation\UrlHelper
     */
    protected function getUrlHelperService()
    {
        $a = ($this->services['router'] ?? $this->getRouterService());

        if (isset($this->privates['url_helper'])) {
            return $this->privates['url_helper'];
        }

        return $this->privates['url_helper'] = new \Symfony\Component\HttpFoundation\UrlHelper(($this->services['request_stack'] ?? ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())), $a);
    }

    /**
     * Gets the private 'validate_request_listener' shared service.
     *
     * @return \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener
     */
    protected function getValidateRequestListenerService()
    {
        return $this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener();
    }

    /**
     * Gets the public 'contao.controller.backend_csv_import' alias.
     *
     * @return object The "Contao\CoreBundle\Controller\BackendCsvImportController" service.
     */
    protected function getContao_Controller_BackendCsvImportService()
    {
        trigger_deprecation('contao/core-bundle', '4.9', 'Using the "contao.controller.backend_csv_import" service ID has been deprecated and will no longer work in Contao 5.0. Please use "Contao\\CoreBundle\\Controller\\BackendCsvImportController" instead.');

        return $this->get('Contao\\CoreBundle\\Controller\\BackendCsvImportController');
    }

    /**
     * Gets the public 'contao.controller.images' alias.
     *
     * @return object The "Contao\CoreBundle\Controller\ImagesController" service.
     */
    protected function getContao_Controller_ImagesService()
    {
        trigger_deprecation('contao/core-bundle', '4.9', 'Using the "contao.controller.images" service ID has been deprecated and will no longer work in Contao 5.0. Please use "Contao\\CoreBundle\\Controller\\ImagesController" instead.');

        return $this->get('Contao\\CoreBundle\\Controller\\ImagesController');
    }

    /**
     * Gets the public 'contao.controller.insert_tags' alias.
     *
     * @return object The "Contao\CoreBundle\Controller\InsertTagsController" service.
     */
    protected function getContao_Controller_InsertTagsService()
    {
        trigger_deprecation('contao/core-bundle', '4.9', 'Using the "contao.controller.insert_tags" service ID has been deprecated and will no longer work in Contao 5.0. Please use "Contao\\CoreBundle\\Controller\\InsertTagsController" instead.');

        return $this->get('Contao\\CoreBundle\\Controller\\InsertTagsController');
    }

    /**
     * Gets the public 'Contao\CoreBundle\EventListener\DataContainer\ContentCompositionListener' alias.
     *
     * @return object The "contao.listener.data_container.content_composition" service.
     */
    protected function getContentCompositionListenerService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\EventListener\\DataContainer\\ContentCompositionListener" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.listener.data_container.content_composition" instead.');

        return $this->get('contao.listener.data_container.content_composition');
    }

    /**
     * Gets the public 'Contao\CoreBundle\EventListener\DataContainer\PageTypeOptionsListener' alias.
     *
     * @return object The "contao.listener.data_container.page_type_options" service.
     */
    protected function getPageTypeOptionsListenerService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\EventListener\\DataContainer\\PageTypeOptionsListener" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.listener.data_container.page_type_options" instead.');

        return $this->get('contao.listener.data_container.page_type_options');
    }

    /**
     * Gets the public 'Contao\CoreBundle\EventListener\DataContainer\PageUrlListener' alias.
     *
     * @return object The "contao.listener.data_container.page_url" service.
     */
    protected function getPageUrlListenerService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\EventListener\\DataContainer\\PageUrlListener" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.listener.data_container.page_url" instead.');

        return $this->get('contao.listener.data_container.page_url');
    }

    /**
     * Gets the public 'contao.cache.clear_internal' alias.
     *
     * @return object The "contao.cache.clearer" service.
     */
    protected function getContao_Cache_ClearInternalService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "contao.cache.clear_internal" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.cache.clearer" instead.');

        return $this->get('contao.cache.clearer');
    }

    /**
     * Gets the public 'contao.cache.warm_internal' alias.
     *
     * @return object The "contao.cache.warmer" service.
     */
    protected function getContao_Cache_WarmInternalService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "contao.cache.warm_internal" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.cache.warmer" instead.');

        return $this->get('contao.cache.warmer');
    }

    /**
     * Gets the public 'contao.crawl.escargot_factory' alias.
     *
     * @return object The "contao.crawl.escargot.factory" service.
     */
    protected function getContao_Crawl_EscargotFactoryService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "contao.crawl.escargot_factory" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.crawl.escargot.factory" instead.');

        return $this->get('contao.crawl.escargot.factory');
    }

    /**
     * Gets the public 'contao.image.image_factory' alias.
     *
     * @return object The "contao.image.factory" service.
     */
    protected function getContao_Image_ImageFactoryService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "contao.image.image_factory" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.image.factory" instead.');

        return $this->get('contao.image.factory');
    }

    /**
     * Gets the public 'contao.image.image_sizes' alias.
     *
     * @return object The "contao.image.sizes" service.
     */
    protected function getContao_Image_ImageSizesService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "contao.image.image_sizes" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.image.sizes" instead.');

        return $this->get('contao.image.sizes');
    }

    /**
     * Gets the public 'contao.image.resizer' alias.
     *
     * @return object The "contao.image.legacy_resizer" service.
     */
    protected function getContao_Image_ResizerService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "contao.image.resizer" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.image.legacy_resizer" instead.');

        return $this->get('contao.image.legacy_resizer');
    }

    /**
     * Gets the public 'contao.opt-in' alias.
     *
     * @return object The "contao.opt_in" service.
     */
    protected function getContao_OptinService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "contao.opt-in" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.opt_in" instead.');

        return $this->get('contao.opt_in');
    }

    /**
     * Gets the public 'Contao\CoreBundle\Cron\Cron' alias.
     *
     * @return object The "contao.cron" service.
     */
    protected function getCronService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\Cron\\Cron" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.cron" instead.');

        return $this->get('contao.cron');
    }

    /**
     * Gets the public 'Contao\CoreBundle\Image\Studio\FigureRenderer' alias.
     *
     * @return object The "contao.image.studio.figure_renderer" service.
     */
    protected function getFigureRendererService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\Image\\Studio\\FigureRenderer" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.image.studio.figure_renderer" instead.');

        return $this->get('contao.image.studio.figure_renderer');
    }

    /**
     * Gets the public 'Contao\CoreBundle\Routing\ResponseContext\CoreResponseContextFactory' alias.
     *
     * @return object The "contao.routing.response_context_factory" service.
     */
    protected function getCoreResponseContextFactoryService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\Routing\\ResponseContext\\CoreResponseContextFactory" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.routing.response_context_factory" instead.');

        return $this->get('contao.routing.response_context_factory');
    }

    /**
     * Gets the public 'Contao\CoreBundle\Security\TwoFactor\BackupCodeManager' alias.
     *
     * @return object The "contao.security.two_factor.backup_code_manager" service.
     */
    protected function getBackupCodeManagerService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\Security\\TwoFactor\\BackupCodeManager" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.security.two_factor.backup_code_manager" instead.');

        return $this->get('contao.security.two_factor.backup_code_manager');
    }

    /**
     * Gets the public 'Contao\CoreBundle\Twig\Extension\ContaoExtension' alias.
     *
     * @return object The "contao.twig.extension" service.
     */
    protected function getContaoExtensionService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\Twig\\Extension\\ContaoExtension" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.twig.extension" instead.');

        return $this->get('contao.twig.extension');
    }

    /**
     * Gets the public 'Contao\CoreBundle\Util\SimpleTokenParser' alias.
     *
     * @return object The "contao.string.simple_token_parser" service.
     */
    protected function getSimpleTokenParserService()
    {
        trigger_deprecation('contao/core-bundle', '4.13', 'Using the "Contao\\CoreBundle\\Util\\SimpleTokenParser" service ID has been deprecated and will no longer work in Contao 5.0. Please use "contao.string.simple_token_parser" instead.');

        return $this->get('contao.string.simple_token_parser');
    }

    /**
     * Gets the public 'cache_clearer' alias.
     *
     * @return object The ".container.private.cache_clearer" service.
     */
    protected function getCacheClearerService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "cache_clearer" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.cache_clearer');
    }

    /**
     * Gets the public 'filesystem' alias.
     *
     * @return object The ".container.private.filesystem" service.
     */
    protected function getFilesystemService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "filesystem" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.filesystem');
    }

    /**
     * Gets the public 'security.csrf.token_manager' alias.
     *
     * @return object The ".container.private.security.csrf.token_manager" service.
     */
    protected function getSecurity_Csrf_TokenManagerService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.2', 'Accessing the "security.csrf.token_manager" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.security.csrf.token_manager');
    }

    /**
     * Gets the public 'security.authorization_checker' alias.
     *
     * @return object The ".container.private.security.authorization_checker" service.
     */
    protected function getSecurity_AuthorizationCheckerService()
    {
        trigger_deprecation('symfony/security-bundle', '5.3', 'Accessing the "security.authorization_checker" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.security.authorization_checker');
    }

    /**
     * Gets the public 'security.token_storage' alias.
     *
     * @return object The ".container.private.security.token_storage" service.
     */
    protected function getSecurity_TokenStorageService()
    {
        trigger_deprecation('symfony/security-bundle', '5.3', 'Accessing the "security.token_storage" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.security.token_storage');
    }

    /**
     * Gets the public 'twig' alias.
     *
     * @return object The ".container.private.twig" service.
     */
    protected function getTwigService()
    {
        trigger_deprecation('symfony/twig-bundle', '5.2', 'Accessing the "twig" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.twig');
    }

    /**
     * Gets the public 'security.encoder_factory' alias.
     *
     * @return object The ".container.private.security.encoder_factory" service.
     */
    protected function getSecurity_EncoderFactoryService()
    {
        trigger_deprecation('symfony/security-bundle', '5.3', 'Accessing the "security.encoder_factory" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.security.encoder_factory');
    }

    /**
     * Gets the public 'security.password_encoder' alias.
     *
     * @return object The ".container.private.security.password_encoder" service.
     */
    protected function getSecurity_PasswordEncoderService()
    {
        trigger_deprecation('symfony/security-bundle', '5.3', 'Accessing the "security.password_encoder" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.security.password_encoder');
    }

    /**
     * Gets the public 'session' alias.
     *
     * @return object The ".container.private.session" service.
     */
    protected function getSessionService()
    {
        trigger_deprecation('symfony/framework-bundle', '5.3', 'Accessing the "session" service directly from the container is deprecated, use dependency injection instead.');

        return $this->get('.container.private.session');
    }

    /**
     * @return array|bool|float|int|string|\UnitEnum|null
     */
    public function getParameter(string $name)
    {
        if (isset($this->buildParameters[$name])) {
            return $this->buildParameters[$name];
        }

        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        if (isset($this->buildParameters[$name])) {
            return true;
        }

        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            foreach ($this->buildParameters as $name => $value) {
                $parameters[$name] = $value;
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [
        'kernel.runtime_environment' => false,
        'kernel.build_dir' => false,
        'kernel.cache_dir' => false,
        'kernel.secret' => false,
        'debug.container.dump' => false,
        'session.save_path' => false,
        'doctrine.orm.proxy_dir' => false,
    ];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        switch ($name) {
            case 'kernel.runtime_environment': $value = $this->getEnv('default:kernel.environment:APP_RUNTIME_ENV'); break;
            case 'kernel.build_dir': $value = $this->targetDir.''; break;
            case 'kernel.cache_dir': $value = $this->targetDir.''; break;
            case 'kernel.secret': $value = $this->getEnv('APP_SECRET'); break;
            case 'debug.container.dump': $value = ($this->targetDir.''.'/Nahati_ContaoIsotopeStockBundle_Tests_Integration_app_AppKernelTestDebugContainer.xml'); break;
            case 'session.save_path': $value = ($this->targetDir.''.'/sessions'); break;
            case 'doctrine.orm.proxy_dir': $value = ($this->targetDir.''.'/doctrine/orm/Proxies'); break;
            default: throw new InvalidArgumentException(sprintf('The dynamic parameter "%s" must be defined.', $name));
        }
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
    }

    protected function getDefaultParameters(): array
    {
        return [
            'kernel.project_dir' => \dirname(__DIR__, 3),
            'kernel.environment' => 'test',
            'kernel.debug' => true,
            'kernel.logs_dir' => (\dirname(__DIR__, 3).'/logs'),
            'kernel.bundles' => [
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'SchebTwoFactorBundle' => 'Scheb\\TwoFactorBundle\\SchebTwoFactorBundle',
                'KnpTimeBundle' => 'Knp\\Bundle\\TimeBundle\\KnpTimeBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'CmfRoutingBundle' => 'Symfony\\Cmf\\Bundle\\RoutingBundle\\CmfRoutingBundle',
                'Terminal42ServiceAnnotationBundle' => 'Terminal42\\ServiceAnnotationBundle\\Terminal42ServiceAnnotationBundle',
                'ContaoCoreBundle' => 'Contao\\CoreBundle\\ContaoCoreBundle',
            ],
            'kernel.bundles_metadata' => [
                'FrameworkBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/framework-bundle'),
                    'namespace' => 'Symfony\\Bundle\\FrameworkBundle',
                ],
                'SecurityBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/security-bundle'),
                    'namespace' => 'Symfony\\Bundle\\SecurityBundle',
                ],
                'TwigBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/twig-bundle'),
                    'namespace' => 'Symfony\\Bundle\\TwigBundle',
                ],
                'MonologBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony/monolog-bundle'),
                    'namespace' => 'Symfony\\Bundle\\MonologBundle',
                ],
                'DoctrineBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/doctrine/doctrine-bundle'),
                    'namespace' => 'Doctrine\\Bundle\\DoctrineBundle',
                ],
                'SchebTwoFactorBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/scheb/2fa-bundle'),
                    'namespace' => 'Scheb\\TwoFactorBundle',
                ],
                'KnpTimeBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-time-bundle/src'),
                    'namespace' => 'Knp\\Bundle\\TimeBundle',
                ],
                'KnpMenuBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/knplabs/knp-menu-bundle/src'),
                    'namespace' => 'Knp\\Bundle\\MenuBundle',
                ],
                'CmfRoutingBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/symfony-cmf/routing-bundle/src'),
                    'namespace' => 'Symfony\\Cmf\\Bundle\\RoutingBundle',
                ],
                'Terminal42ServiceAnnotationBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/terminal42/service-annotation-bundle/src'),
                    'namespace' => 'Terminal42\\ServiceAnnotationBundle',
                ],
                'ContaoCoreBundle' => [
                    'path' => (\dirname(__DIR__, 3).'/vendor/contao/core-bundle/src'),
                    'namespace' => 'Contao\\CoreBundle',
                ],
            ],
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'Nahati_ContaoIsotopeStockBundle_Tests_Integration_app_AppKernelTestDebugContainer',
            'locale' => 'en',
            'contao.backend.route_prefix' => '/contao',
            'event_dispatcher.event_aliases' => [
                'Symfony\\Component\\Console\\Event\\ConsoleCommandEvent' => 'console.command',
                'Symfony\\Component\\Console\\Event\\ConsoleErrorEvent' => 'console.error',
                'Symfony\\Component\\Console\\Event\\ConsoleSignalEvent' => 'console.signal',
                'Symfony\\Component\\Console\\Event\\ConsoleTerminateEvent' => 'console.terminate',
                'Symfony\\Component\\HttpKernel\\Event\\ControllerArgumentsEvent' => 'kernel.controller_arguments',
                'Symfony\\Component\\HttpKernel\\Event\\ControllerEvent' => 'kernel.controller',
                'Symfony\\Component\\HttpKernel\\Event\\ResponseEvent' => 'kernel.response',
                'Symfony\\Component\\HttpKernel\\Event\\FinishRequestEvent' => 'kernel.finish_request',
                'Symfony\\Component\\HttpKernel\\Event\\RequestEvent' => 'kernel.request',
                'Symfony\\Component\\HttpKernel\\Event\\ViewEvent' => 'kernel.view',
                'Symfony\\Component\\HttpKernel\\Event\\ExceptionEvent' => 'kernel.exception',
                'Symfony\\Component\\HttpKernel\\Event\\TerminateEvent' => 'kernel.terminate',
                'Symfony\\Component\\Security\\Core\\Event\\AuthenticationSuccessEvent' => 'security.authentication.success',
                'Symfony\\Component\\Security\\Core\\Event\\AuthenticationFailureEvent' => 'security.authentication.failure',
                'Symfony\\Component\\Security\\Http\\Event\\InteractiveLoginEvent' => 'security.interactive_login',
                'Symfony\\Component\\Security\\Http\\Event\\SwitchUserEvent' => 'security.switch_user',
                'Contao\\CoreBundle\\Event\\GenerateSymlinksEvent' => 'contao.generate_symlinks',
                'Contao\\CoreBundle\\Event\\MenuEvent' => 'contao.backend_menu_build',
                'Contao\\CoreBundle\\Event\\PreviewUrlCreateEvent' => 'contao.preview_url_create',
                'Contao\\CoreBundle\\Event\\PreviewUrlConvertEvent' => 'contao.preview_url_convert',
                'Contao\\CoreBundle\\Event\\RobotsTxtEvent' => 'contao.robots_txt',
                'Contao\\CoreBundle\\Event\\SlugValidCharactersEvent' => 'contao.slug_valid_characters',
            ],
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.path' => '/_fragment',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => [

            ],
            'kernel.default_locale' => 'en',
            'kernel.enabled_locales' => [

            ],
            'kernel.error_controller' => 'error_controller',
            'debug.file_link_format' => NULL,
            'test.client.parameters' => [

            ],
            'asset.request_context.base_path' => NULL,
            'asset.request_context.secure' => NULL,
            'translator.logging' => false,
            'translator.default_path' => (\dirname(__DIR__, 3).'/translations'),
            'debug.error_handler.throw_at' => -1,
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => (\dirname(__DIR__, 3).'/tests/Integration/app/config/routes.yml'),
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.options' => [
                'cache_limiter' => '0',
                'cookie_httponly' => true,
                'gc_probability' => 1,
            ],
            'session.metadata.update_threshold' => 0,
            'data_collector.templates' => [

            ],
            'security.role_hierarchy.roles' => [

            ],
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'security.firewalls' => [
                0 => 'contao_install',
                1 => 'contao_backend',
                2 => 'contao_frontend',
            ],
            'security.contao_backend._indexed_authenticators' => [

            ],
            'security.contao_frontend._indexed_authenticators' => [

            ],
            'twig.form.resources' => [
                0 => 'form_div_layout.html.twig',
            ],
            'twig.default_path' => (\dirname(__DIR__, 3).'/templates'),
            'monolog.use_microseconds' => true,
            'monolog.swift_mailer.handlers' => [

            ],
            'monolog.handlers_to_channels' => [

            ],
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => [
                'default' => 'doctrine.orm.default_entity_manager',
            ],
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => [
                'binary_string' => [
                    'class' => 'Contao\\CoreBundle\\Doctrine\\DBAL\\Types\\BinaryStringType',
                ],
                'uuid' => [
                    'class' => 'Symfony\\Bridge\\Doctrine\\Types\\UuidType',
                ],
                'ulid' => [
                    'class' => 'Symfony\\Bridge\\Doctrine\\Types\\UlidType',
                ],
            ],
            'doctrine.connections' => [
                'default' => 'doctrine.dbal.default_connection',
            ],
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'localhost',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'localhost',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.metadata.attribute.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AttributeDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => true,
            'doctrine.orm.enable_lazy_ghost_objects' => false,
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'scheb_two_factor.model_manager_name' => NULL,
            'scheb_two_factor.security_tokens' => [
                0 => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken',
                1 => 'Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken',
                2 => 'Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken',
            ],
            'scheb_two_factor.ip_whitelist' => [

            ],
            'scheb_two_factor.trusted_device.enabled' => true,
            'scheb_two_factor.trusted_device.cookie_name' => 'trusted_device',
            'scheb_two_factor.trusted_device.lifetime' => 5184000,
            'scheb_two_factor.trusted_device.extend_lifetime' => false,
            'scheb_two_factor.trusted_device.cookie_secure' => NULL,
            'scheb_two_factor.trusted_device.cookie_same_site' => 'lax',
            'scheb_two_factor.trusted_device.cookie_domain' => NULL,
            'scheb_two_factor.trusted_device.cookie_path' => '/',
            'time.datetime_formatter.class' => 'Knp\\Bundle\\TimeBundle\\DateTimeFormatter',
            'time.twig.extension.time.class' => 'Knp\\Bundle\\TimeBundle\\Twig\\Extension\\TimeExtension',
            'time.templating.helper.time.class' => 'Knp\\Bundle\\TimeBundle\\Templating\\Helper\\TimeHelper',
            'knp_menu.renderer.list.options' => [

            ],
            'knp_menu.twig.extension.class' => 'Knp\\Menu\\Twig\\MenuExtension',
            'knp_menu.renderer.twig.class' => 'Knp\\Menu\\Renderer\\TwigRenderer',
            'knp_menu.renderer.twig.options' => [

            ],
            'knp_menu.renderer.twig.template' => '@KnpMenu/menu.html.twig',
            'knp_menu.default_renderer' => 'twig',
            'cmf_routing.replace_symfony_router' => true,
            'contao.web_dir' => (\dirname(__DIR__, 3).'/public'),
            'contao.upload_path' => 'files',
            'contao.editable_files' => 'css,csv,html,ini,js,json,less,md,scss,svg,svgz,ts,txt,xliff,xml,yml,yaml',
            'contao.preview_script' => '',
            'contao.csrf_cookie_prefix' => 'csrf_',
            'contao.csrf_token_name' => 'contao_csrf_token',
            'contao.pretty_error_screens' => false,
            'contao.error_level' => 8183,
            'contao.locales' => [
                0 => 'en',
                1 => 'tr',
                2 => 'it',
                3 => 'sr',
                4 => 'es',
                5 => 'pt',
                6 => 'cs',
                7 => 'fa',
                8 => 'de',
                9 => 'ru',
                10 => 'fr',
                11 => 'sv',
                12 => 'ja',
                13 => 'sl',
                14 => 'lv',
                15 => 'pl',
                16 => 'nl',
            ],
            'contao.image.bypass_cache' => false,
            'contao.image.target_dir' => (\dirname(__DIR__, 3).'/assets/images'),
            'contao.image.valid_extensions' => [
                0 => 'jpg',
                1 => 'jpeg',
                2 => 'gif',
                3 => 'png',
                4 => 'tif',
                5 => 'tiff',
                6 => 'bmp',
                7 => 'svg',
                8 => 'svgz',
                9 => 'webp',
            ],
            'contao.image.imagine_options' => [
                'jpeg_quality' => 80,
                'jpeg_sampling_factors' => [
                    0 => 2,
                    1 => 1,
                    2 => 1,
                ],
                'interlace' => 'plane',
            ],
            'contao.image.reject_large_uploads' => false,
            'contao.image.preview.target_dir' => (\dirname(__DIR__, 3).'/assets/previews'),
            'contao.image.preview.default_size' => 512,
            'contao.image.preview.max_size' => 1024,
            'contao.security.two_factor.enforce_backend' => false,
            'contao.localconfig' => [
                'licenseAccepted' => true,
                'disableCron' => true,
            ],
            'contao.backend.attributes' => [

            ],
            'contao.backend.custom_css' => [

            ],
            'contao.backend.custom_js' => [

            ],
            'contao.backend.badge_title' => '',
            'contao.intl.locales' => [

            ],
            'contao.intl.enabled_locales' => [

            ],
            'contao.intl.countries' => [

            ],
            'contao.insert_tags.allowed_tags' => [
                0 => '*',
            ],
            'contao.sanitizer.allowed_url_protocols' => [
                0 => 'http',
                1 => 'https',
                2 => 'ftp',
                3 => 'mailto',
                4 => 'tel',
                5 => 'data',
                6 => 'skype',
                7 => 'whatsapp',
            ],
            'contao.search.default_indexer.enable' => false,
            'contao.search.index_protected' => false,
            'contao.legacy_routing' => false,
            'contao.prepend_locale' => false,
            'contao.url_suffix' => '.html',
            'kernel.packages' => [
                'ausi/slug-generator' => '1.1.1',
                'bacon/bacon-qr-code' => '2.0.8',
                'bamarni/composer-bin-plugin' => '1.8.2',
                'beberlei/assert' => '3.3.2',
                'clue/stream-filter' => '1.6.0',
                'codefog/contao-haste' => '4.25.26',
                'composer/ca-bundle' => '1.3.6',
                'composer/pcre' => '3.1.0',
                'composer/semver' => '3.3.2',
                'composer/xdebug-handler' => '3.0.3',
                'contao-community-alliance/composer-plugin' => '3.2.2',
                'contao-components/ace' => '1.23.4',
                'contao-components/chosen' => '1.2.5',
                'contao-components/colorbox' => '1.6.6',
                'contao-components/colorpicker' => '1.5.2',
                'contao-components/contao' => '9.3.2',
                'contao-components/datepicker' => '2.3.2',
                'contao-components/dropzone' => '5.9.3',
                'contao-components/installer' => '1.4.1',
                'contao-components/jquery' => '3.7.0',
                'contao-components/jquery-ui' => '1.13.2',
                'contao-components/mediabox' => '1.5.5',
                'contao-components/mootools' => '1.6.0.7',
                'contao-components/simplemodal' => '2.1.1',
                'contao-components/swipe' => '2.2.0',
                'contao-components/tablesort' => '4.0.1',
                'contao-components/tablesorter' => '2.31.3',
                'contao-components/tinymce4' => '5.10.7',
                'contao/core-bundle' => '4.13.29',
                'contao/easy-coding-standard' => '6.3.1',
                'contao/image' => '1.2.0',
                'contao/imagine-svg' => '1.0.3',
                'contao/manager-plugin' => '2.12.0',
                'contao/phpstan' => '0.12.8',
                'contao/test-case' => '4.13.29',
                'dasprid/enum' => '1.0.4',
                'dealerdirect/phpcodesniffer-composer-installer' => '1.0.0',
                'dflydev/dot-access-data' => '3.0.2',
                'doctrine/annotations' => '2.0.1',
                'doctrine/cache' => '2.2.0',
                'doctrine/collections' => '1.8.0',
                'doctrine/common' => '3.4.3',
                'doctrine/dbal' => '3.6.5',
                'doctrine/deprecations' => '1.1.1',
                'doctrine/doctrine-bundle' => '2.10.1',
                'doctrine/event-manager' => '1.2.0',
                'doctrine/inflector' => '2.0.8',
                'doctrine/instantiator' => '2.0.0',
                'doctrine/lexer' => '2.1.0',
                'doctrine/orm' => '2.16.0',
                'doctrine/persistence' => '2.5.7',
                'doctrine/sql-formatter' => '1.1.3',
                'dragonmantank/cron-expression' => '2.3.1',
                'egulias/email-validator' => '4.0.1',
                'friendsofphp/php-cs-fixer' => '3.22.0',
                'friendsofsymfony/http-cache' => '2.15.1',
                'friendsofsymfony/http-cache-bundle' => '2.16.2',
                'imagine/imagine' => '1.3.5',
                'isotope/isotope-core' => '2.8.16',
                'knplabs/knp-menu' => '3.4.0',
                'knplabs/knp-menu-bundle' => '3.2.0',
                'knplabs/knp-time-bundle' => '1.20.0',
                'kubawerlos/php-cs-fixer-custom-fixers' => '3.16.2',
                'lcobucci/clock' => '3.0.0',
                'lcobucci/jwt' => '4.3.0',
                'league/commonmark' => '2.4.0',
                'league/config' => '1.2.0',
                'league/flysystem' => '3.15.1',
                'league/flysystem-bundle' => '3.1.0',
                'league/flysystem-local' => '3.15.0',
                'league/mime-type-detection' => '1.13.0',
                'matthiasmullie/minify' => '1.3.71',
                'matthiasmullie/path-converter' => '1.1.3',
                'menatwork/contao-multicolumnwizard-bundle' => '3.6.2',
                'monolog/monolog' => '2.9.1',
                'myclabs/deep-copy' => '1.11.1',
                'nahati/contao-isotope-stock' => '1.0.0+no-version-set',
                'nelmio/cors-bundle' => '2.3.1',
                'nelmio/security-bundle' => '2.12.0',
                'nette/schema' => '1.2.3',
                'nette/utils' => '4.0.1',
                'nikic/php-parser' => '4.16.0',
                'nyholm/psr7' => '1.8.0',
                'paragonie/constant_time_encoding' => '2.6.3',
                'paragonie/random_compat' => '9.99.100',
                'patchwork/utf8' => '1.3.3',
                'phar-io/manifest' => '2.0.3',
                'phar-io/version' => '3.2.1',
                'php-http/client-common' => '2.7.0',
                'php-http/discovery' => '1.19.1',
                'php-http/httplug' => '2.4.0',
                'php-http/message' => '1.16.0',
                'php-http/message-factory' => '1.1.0',
                'php-http/promise' => '1.1.0',
                'phpspec/php-diff' => '1.1.3',
                'phpstan/phpdoc-parser' => '1.23.1',
                'phpstan/phpstan' => '0.12.100',
                'phpstan/phpstan-phpunit' => '0.12.22',
                'phpstan/phpstan-symfony' => '0.12.44',
                'phpunit/php-code-coverage' => '9.2.27',
                'phpunit/php-file-iterator' => '3.0.6',
                'phpunit/php-invoker' => '3.1.1',
                'phpunit/php-text-template' => '2.0.4',
                'phpunit/php-timer' => '5.0.3',
                'phpunit/phpunit' => '9.6.10',
                'psr/cache' => '2.0.0',
                'psr/clock' => '1.0.0',
                'psr/container' => '1.1.2',
                'psr/event-dispatcher' => '1.0.0',
                'psr/http-client' => '1.0.2',
                'psr/http-factory' => '1.0.2',
                'psr/http-message' => '1.1',
                'psr/log' => '2.0.0',
                'scheb/2fa-backup-code' => '5.13.2',
                'scheb/2fa-bundle' => '5.13.2',
                'scheb/2fa-trusted-device' => '5.13.2',
                'scrivo/highlight.php' => '9.18.1.10',
                'scssphp/scssphp' => '1.11.0',
                'sebastian/cli-parser' => '1.0.1',
                'sebastian/code-unit' => '1.0.8',
                'sebastian/code-unit-reverse-lookup' => '2.0.3',
                'sebastian/comparator' => '4.0.8',
                'sebastian/complexity' => '2.0.2',
                'sebastian/diff' => '4.0.5',
                'sebastian/environment' => '5.1.5',
                'sebastian/exporter' => '4.0.5',
                'sebastian/global-state' => '5.0.6',
                'sebastian/lines-of-code' => '1.0.3',
                'sebastian/object-enumerator' => '4.0.4',
                'sebastian/object-reflector' => '2.0.4',
                'sebastian/recursion-context' => '4.0.5',
                'sebastian/resource-operations' => '3.0.3',
                'sebastian/type' => '3.2.1',
                'sebastian/version' => '3.0.2',
                'simplepie/simplepie' => '1.8.0',
                'slevomat/coding-standard' => '8.13.4',
                'spatie/schema-org' => '3.14.0',
                'spomky-labs/otphp' => '10.0.3',
                'squizlabs/php_codesniffer' => '3.7.2',
                'symfony-cmf/routing' => '2.3.4',
                'symfony-cmf/routing-bundle' => '2.5.1',
                'symfony/asset' => '5.4.21',
                'symfony/browser-kit' => '6.3.2',
                'symfony/cache' => '5.4.25',
                'symfony/cache-contracts' => '2.5.2',
                'symfony/config' => '5.4.26',
                'symfony/console' => '5.4.26',
                'symfony/dependency-injection' => '5.4.26',
                'symfony/deprecation-contracts' => '3.3.0',
                'symfony/doctrine-bridge' => '5.4.26',
                'symfony/dom-crawler' => '5.4.25',
                'symfony/error-handler' => '6.3.2',
                'symfony/event-dispatcher' => '5.4.26',
                'symfony/event-dispatcher-contracts' => '3.3.0',
                'symfony/expression-language' => '5.4.21',
                'symfony/filesystem' => '5.4.25',
                'symfony/finder' => '5.4.27',
                'symfony/framework-bundle' => '5.4.26',
                'symfony/http-client' => '5.4.26',
                'symfony/http-client-contracts' => '2.5.2',
                'symfony/http-foundation' => '5.4.26',
                'symfony/http-kernel' => '5.4.27',
                'symfony/intl' => '5.4.26',
                'symfony/lock' => '5.4.25',
                'symfony/mailer' => '5.4.22',
                'symfony/mime' => '5.4.26',
                'symfony/monolog-bridge' => '5.4.22',
                'symfony/monolog-bundle' => '3.8.0',
                'symfony/options-resolver' => '6.3.0',
                'symfony/password-hasher' => '5.4.27',
                'symfony/phpunit-bridge' => '6.3.2',
                'symfony/polyfill-ctype' => '1.27.0',
                'symfony/polyfill-intl-grapheme' => '1.27.0',
                'symfony/polyfill-intl-idn' => '1.27.0',
                'symfony/polyfill-intl-normalizer' => '1.27.0',
                'symfony/polyfill-mbstring' => '1.27.0',
                'symfony/polyfill-php72' => '1.27.0',
                'symfony/polyfill-php73' => '1.27.0',
                'symfony/polyfill-php80' => '1.27.0',
                'symfony/polyfill-php81' => '1.27.0',
                'symfony/polyfill-uuid' => '1.27.0',
                'symfony/process' => '5.4.26',
                'symfony/property-access' => '5.4.26',
                'symfony/property-info' => '6.3.0',
                'symfony/routing' => '5.4.26',
                'symfony/security-bundle' => '5.4.26',
                'symfony/security-core' => '5.4.22',
                'symfony/security-csrf' => '5.4.27',
                'symfony/security-guard' => '5.4.27',
                'symfony/security-http' => '5.4.26',
                'symfony/service-contracts' => '2.5.2',
                'symfony/stopwatch' => '6.3.0',
                'symfony/string' => '5.4.26',
                'symfony/templating' => '6.3.0',
                'symfony/translation' => '5.4.24',
                'symfony/translation-contracts' => '2.5.2',
                'symfony/twig-bridge' => '5.4.26',
                'symfony/twig-bundle' => '5.4.27',
                'symfony/uid' => '5.4.21',
                'symfony/var-dumper' => '5.4.26',
                'symfony/var-exporter' => '6.3.2',
                'symfony/yaml' => '5.4.23',
                'symplify/easy-coding-standard' => '11.5.0',
                'tecnickcom/tcpdf' => '6.6.2',
                'terminal42/contao-conditionalselectmenu' => '4.0.4',
                'terminal42/contao-tablelookupwizard' => '4.0.2',
                'terminal42/dc_multilingual' => '4.4.1',
                'terminal42/dcawizard' => '2.7.4',
                'terminal42/escargot' => '1.5.2',
                'terminal42/notification_center' => '1.6.14',
                'terminal42/service-annotation-bundle' => '1.1.5',
                'thecodingmachine/safe' => '2.5.0',
                'theseer/tokenizer' => '1.2.1',
                'twig/twig' => '3.7.0',
                'ua-parser/uap-php' => '3.9.14',
                'webignition/disallowed-character-terminated-string' => '2.0',
                'webignition/robots-txt-file' => '3.0',
                'webmozart/assert' => '1.11.0',
                'webmozart/path-util' => '2.3.0',
                'wikimedia/less.php' => '1.8.2',
            ],
            'contao.resources_paths' => [
                0 => (\dirname(__DIR__, 3).'/vendor/contao/core-bundle/src/Resources/contao'),
                1 => (\dirname(__DIR__, 3).'/contao'),
            ],
            'console.command.ids' => [

            ],
        ];
    }

    protected function throw($message)
    {
        throw new RuntimeException($message);
    }
}
